{"version":3,"sources":["node_modules/browser-pack/_prelude.js","web-worker.js","build/parsers/bind-expr-impl.js","extensions/amp-bind/0.1/bind-evaluator.js","extensions/amp-bind/0.1/bind-expr-defines.js","extensions/amp-bind/0.1/bind-expression.js","extensions/amp-bind/0.1/bind-macro.js","extensions/amp-bind/0.1/bind-validator.js","src/amp-events.js","src/analytics.js","src/common-signals.js","src/config.js","src/css.js","src/dom.js","src/element-service.js","src/error.js","src/event-helper-listen.js","src/event-helper.js","src/experiments.js","src/exponential-backoff.js","src/internal-version.js","src/json.js","src/log.js","src/mode-object.js","src/mode.js","src/polyfills/array-includes.js","src/polyfills/math-sign.js","src/polyfills/object-assign.js","src/polyfills/object-values.js","src/render-delaying-services.js","src/service.js","src/services.js","src/srcset.js","src/string.js","src/style-installer.js","src/style.js","src/types.js","src/url-parse-query-string.js","src/url-try-decode-uri-component.js","src/url.js","src/utils/array.js","src/utils/function.js","src/utils/lru-cache.js","src/utils/object.js","src/utils/promise.js","src/web-worker/web-worker-polyfills.js","src/web-worker/web-worker.js","third_party/css-escape/css-escape.js"],"names":[],"mappings":"AAAA;ACCA;AACA;AACA;AACA;AACA;ACcA;ADZA;ACaA;ADXA;ACTA;ADWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACRA;ADUA;ACLA;ADOA;ACNA;ADQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AAAwB;AAAqC;AAArC;ADWxB;ACX8D;AAAS;AAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;ADuDA;ACtDA;AAAc;AACd;AACA;AAAW;AAAU;AAAW;AAAS;AAAQ;AAAc;AAAe;AAAkB;AAAM;AAAO;AAAc;AAAa;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAQ;AAAQ;AAAQ;AAAO;AAAQ;AAAO;AAAQ;AAAQ;AAAO;AAAO;AAAU;AAAU;AAAO;AAAoB;AAAO;AAAQ;AAAY;AAAW;AAAY;AAAO;AAAO;AAAe;AAAoB;AAAmB;AAAY;AAAY;AAAU;AAAW;AAAU;AAAO;AAAO;AAAY;AAAe;AAAS;AAAY;AAA9gB;AACV;AAAa;AAAU;AAAQ;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAQ;AAAQ;AAAQ;AAAO;AAAQ;AAAO;AAAQ;AAAQ;AAAO;AAAO;AAAU;AAAO;AAAO;AAAQ;AAAO;AAAO;AAAY;AAAY;AAAU;AAAW;AAAU;AAAO;AAAlQ;AACZ;AACA;AAAwE;AAAzD;AAA6E;AAA7E;AAA8F;AAA9F;AACf;AAEA;ADsJA;ACrJA;AACA;AACA;AACA;ADuJA;ACtJA;AACA;AACA;ADwJA;ACvJA;AAAQ;AAAQ;AAAQ;AAAQ;AAChC;AACA;AD6JA;AC5JA;AACA;AACA;AD8JA;AC7JA;AAEQ;AAER;AD6JA;AC5JA;AAEQ;AAER;AD4JA;AC3JA;AAEQ;AAER;AD2JA;AC1JA;AAEQ;AAER;AD0JA;ACzJA;AAEQ;AAER;ADyJA;ACxJA;AAEQ;AAER;ADwJA;ACvJA;AAEQ;AAER;ADuJA;ACtJA;AAEQ;AAER;ADsJA;ACrJA;AAEQ;AAER;ADqJA;ACpJA;AAEQ;AAER;ADoJA;ACnJA;AAEQ;AAER;ADmJA;AClJA;AAEQ;AAER;ADkJA;ACjJA;AAEQ;AAER;ADiJA;AChJA;AAEQ;AAER;ADgJA;AC/IA;AAEQ;AAER;AD+IA;AC9IA;AAEQ;AAER;AD8IA;AC7IA;AAEQ;AAER;AD6IA;AC5IA;AAEQ;AAER;AD4IA;AC3IA;AAEQ;AAER;AD2IA;AC1IA;AAEQ;AACE;AACA;AACD;AAET;AD0IA;ACzIA;AAEQ;AACE;AD0IV;ACzIU;AACD;AAET;AD0IA;ACzIA;AAEQ;AAER;ADyIA;ACxIA;AAEQ;AACA;AAER;ADwIA;ACvIA;AAEQ;AAER;ADuIA;ACtIA;AAEQ;AAER;ADsIA;ACrIA;AAEQ;AACA;AAER;ADqIA;ACpIA;AAEQ;AAER;ADoIA;ACnIA;AAEQ;AAER;ADmIA;AClIA;AAEQ;AAER;ADkIA;ACjIA;AAEQ;AAER;ADiIA;AChIA;AAEQ;AAER;ADgIA;AC/HA;AAEQ;AAER;AD+HA;AC9HA;AAAS;AAAS;AAAS;AAEnB;AAER;ADiIA;AChIA;AAEQ;AACA;AACA;AACA;AACA;AACA;AAER;ADgIA;AC/HA;AAEQ;AAER;AD+HA;AC9HA;AAEQ;AAER;AD8HA;AC7HA;AAEQ;AAER;AD6HA;AC5HA;AAEQ;AAER;AD4HA;AC3HA;AAEQ;AAER;AD2HA;AC1HA;AAEQ;AAER;AD0HA;ACzHA;AAEQ;AAER;ADyHA;ACxHA;AAEQ;AAER;ADwHA;ACvHA;AAAS;AAED;AACA;AAER;ADwHA;ACvHA;AAEQ;AAER;ADuHA;ACtHA;AAEQ;AAER;ADsHA;ACrHA;AAEQ;AAER;ADqHA;ACpHA;AAEQ;AAER;ADoHA;ACnHA;AAEQ;AAER;ADmHA;AClHA;AAEQ;AAER;ADkHA;ACjHA;AAEQ;AAER;AApRA;AAsRC;AACD;AAAS;AAAI;AAAI;AAAQ;AAAI;AAAI;AAAI;AAAM;AAAK;AAAK;AAAO;AAAO;AAAO;AAAO;AAAO;AAAM;AAAM;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAArI;AAA8I;AAAD;AAAS;AAAS;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAM;AAAzH;AAAkI;AAAD;AAAkD;AAAK;AAAI;AAAI;AAAI;AAAM;AAAK;AAAK;AAAO;AAAO;AAAO;AAAO;AAAO;AAAM;AAAM;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAA1H;AAA6J;AAAK;AAAI;AAAI;AAAI;AAAM;AAAK;AAAK;AAAO;AAAO;AAAO;AAAO;AAAO;AAAM;AAAM;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAA1H;AAAmI;AAAK;AAAI;AAAI;AAAI;AAAM;AAAK;AAAK;AAAO;AAAO;AAAO;AAAO;AAAO;AAAM;AAAM;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAA1H;AAAmI;AAAK;AAAI;AAAI;AAAI;AAAM;AAAK;AAAK;AAAO;AAAO;AAAO;AAAO;AAAO;AAAM;AAAM;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAA1H;AAA6I;AAAM;AAAP;AAAgI;AAAO;AAAO;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAAU;AAAM;AAAM;AAA9E;AAAsF;AAAK;AAAI;AAAI;AAAI;AAAM;AAAK;AAAK;AAAO;AAAO;AAAO;AAAO;AAAM;AAAO;AAAU;AAAM;AAAM;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAA1I;AAAmJ;AAAD;AAAW;AAAK;AAAI;AAAI;AAAI;AAAM;AAAK;AAAK;AAAO;AAAO;AAAO;AAAO;AAAO;AAAM;AAAM;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAA1H;AAAmI;AAAK;AAAI;AAAI;AAAI;AAAM;AAAK;AAAK;AAAO;AAAO;AAAO;AAAO;AAAO;AAAM;AAAM;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAA1H;AAAmI;AAAK;AAAI;AAAI;AAAI;AAAM;AAAK;AAAK;AAAO;AAAO;AAAO;AAAO;AAAO;AAAM;AAAM;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAA1H;AAAmI;AAAK;AAAI;AAAI;AAAI;AAAM;AAAK;AAAK;AAAO;AAAO;AAAO;AAAO;AAAO;AAAM;AAAM;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAA1H;AAAmI;AAAK;AAAI;AAAI;AAAI;AAAM;AAAK;AAAK;AAAO;AAAO;AAAO;AAAO;AAAO;AAAM;AAAM;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAA1H;AAAmI;AAAK;AAAI;AAAI;AAAI;AAAM;AAAK;AAAK;AAAO;AAAO;AAAO;AAAO;AAAO;AAAM;AAAM;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAA1H;AAAmI;AAAK;AAAI;AAAI;AAAI;AAAM;AAAK;AAAK;AAAO;AAAO;AAAO;AAAO;AAAO;AAAM;AAAM;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAA1H;AAAmI;AAAK;AAAI;AAAI;AAAI;AAAM;AAAK;AAAK;AAAO;AAAO;AAAO;AAAO;AAAO;AAAM;AAAM;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAA1H;AAAmI;AAAK;AAAI;AAAI;AAAI;AAAM;AAAK;AAAK;AAAO;AAAO;AAAO;AAAO;AAAO;AAAM;AAAM;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAA1H;AAAmI;AAAK;AAAI;AAAI;AAAI;AAAM;AAAK;AAAK;AAAO;AAAO;AAAO;AAAO;AAAO;AAAM;AAAM;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAA1H;AAAmI;AAAK;AAAI;AAAI;AAAI;AAAM;AAAK;AAAK;AAAO;AAAO;AAAO;AAAO;AAAO;AAAM;AAAM;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAA1H;AAAmI;AAAK;AAAI;AAAI;AAAI;AAAM;AAAK;AAAK;AAAO;AAAO;AAAO;AAAO;AAAO;AAAM;AAAM;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAA1H;AAAmI;AAAK;AAAI;AAAI;AAAI;AAAM;AAAK;AAAK;AAAO;AAAO;AAAO;AAAO;AAAO;AAAM;AAAM;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAA1H;AAAmI;AAAK;AAAI;AAAI;AAAI;AAAM;AAAK;AAAK;AAAO;AAAO;AAAO;AAAO;AAAO;AAAM;AAAM;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAA1H;AAAmI;AAAD;AAA2B;AAAK;AAAI;AAAI;AAAI;AAAM;AAAK;AAAK;AAAO;AAAO;AAAO;AAAO;AAAO;AAAM;AAAM;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAA1H;AAAmI;AAAU;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAM;AAA1H;AAA+I;AAAM;AAAO;AAAd;AAAqC;AAAM;AAAO;AAAd;AAAqC;AAAM;AAAO;AAAd;AAAsC;AAAK;AAAI;AAAI;AAAI;AAAM;AAAO;AAAK;AAAK;AAAO;AAAO;AAAO;AAAO;AAAM;AAAO;AAAM;AAAM;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAAvI;AAA8J;AAAU;AAAX;AAAqC;AAAD;AAAa;AAAD;AAAa;AAAD;AAAa;AAAK;AAAI;AAAI;AAAI;AAAM;AAAK;AAAK;AAAO;AAAO;AAAO;AAAO;AAAO;AAAM;AAAM;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAA1H;AAAiJ;AAAU;AAAX;AAAoC;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAhH;AAAuI;AAAM;AAAO;AAAO;AAAO;AAAO;AAAnC;AAA0D;AAAM;AAAO;AAAO;AAAO;AAAO;AAAnC;AAA0D;AAAM;AAAO;AAAd;AAAqC;AAAM;AAAO;AAAd;AAAqC;AAAM;AAAO;AAAd;AAA6D;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAA3F;AAAuI;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAlG;AAAyH;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAjD;AAAwE;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAjD;AAAwE;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAjD;AAAwE;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAjD;AAAwE;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAA7E;AAAoG;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAA7E;AAAuF;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAU;AAAO;AAAM;AAA1H;AAAgJ;AAAM;AAAP;AAAmB;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAM;AAAO;AAAvH;AAA8J;AAAU;AAAX;AAAqC;AAAO;AAAO;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAAU;AAAM;AAAxE;AAAgF;AAAK;AAAI;AAAI;AAAI;AAAM;AAAK;AAAK;AAAO;AAAO;AAAO;AAAO;AAAO;AAAM;AAAM;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAA1H;AAAmI;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAM;AAAO;AAAvH;AAAiJ;AAAK;AAAI;AAAI;AAAI;AAAM;AAAK;AAAK;AAAO;AAAO;AAAO;AAAO;AAAO;AAAU;AAAM;AAAM;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAApI;AAA6I;AAAK;AAAI;AAAI;AAAI;AAAM;AAAK;AAAK;AAAO;AAAO;AAAO;AAAO;AAAO;AAAM;AAAM;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAA1H;AAAiJ;AAAK;AAAI;AAAI;AAAI;AAAS;AAAO;AAAK;AAAK;AAAO;AAAO;AAAO;AAAU;AAAM;AAAM;AAAO;AAAM;AAAM;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAAnJ;AAAwL;AAAK;AAAI;AAAI;AAAI;AAAM;AAAK;AAAK;AAAO;AAAO;AAAO;AAAO;AAAO;AAAM;AAAM;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAA1H;AAA4K;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAhH;AAA0H;AAAD;AAAwC;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAhH;AAAsJ;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAhH;AAA0H;AAAU;AAAX;AAAwB;AAAK;AAAI;AAAI;AAAI;AAAM;AAAW;AAAK;AAAK;AAAO;AAAO;AAAO;AAAW;AAAO;AAAO;AAAM;AAAM;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAAhJ;AAAuN;AAAM;AAAM;AAAb;AAAyC;AAAM;AAAI;AAAI;AAAI;AAAM;AAAK;AAAK;AAAO;AAAO;AAAO;AAAO;AAAO;AAAM;AAAM;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAA3H;AAAoI;AAAD;AAAc;AAAW;AAAZ;AAAoF;AAAM;AAAM;AAAb;AAA2B;AAAM;AAAI;AAAI;AAAI;AAAM;AAAK;AAAK;AAAO;AAAO;AAAO;AAAO;AAAO;AAAM;AAAM;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAA3H;AAAoI;AAAW;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAM;AAA3H;AAAoI;AAAM;AAAI;AAAI;AAAI;AAAM;AAAK;AAAK;AAAO;AAAO;AAAO;AAAO;AAAO;AAAM;AAAM;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAA3H;AAAoI;AAAD;AAAc;AAAD;AAAc;AAAD;AAA2B;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAhH;AAAqJ;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAhH;AAA0H;AAAM;AAAI;AAAI;AAAI;AAAM;AAAK;AAAK;AAAO;AAAO;AAAO;AAAO;AAAO;AAAM;AAAM;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAA3H;AAA6K;AAAM;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAO;AAAhH;AAC5/P;AAAiB;AAAQ;AAAS;AAAU;AAAU;AAAtC;AAChB;AACI;AACI;AACH;AACG;AACA;AACA;AACH;AACJ;AACD;AACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAoB;AAAF;ADuyCtB;ACtyCI;AACI;AACI;AACH;AACJ;ADwyCL;ACvyCI;AACA;AACA;ADyyCJ;ACxyCI;AACI;AACH;AD0yCL;ACzyCI;AACA;AACA;AD2yCJ;AC1yCI;AACI;AACH;AACG;AACH;AD4yCL;AC3yCI;AACI;AACA;AACA;AACH;AD6yCL;AC3yCQ;AACI;AACA;AD6yCZ;AC5yCY;AACI;AACH;AD8yCb;AC7yCY;AACH;AD+yCT;AC9yCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AD0zCJ;ACzzCI;AACI;AD2zCR;AC1zCQ;AACI;AACH;AACG;AACI;AACH;AD4zCb;AC3zCY;AACH;AD6zCT;AC5zCoB;AACJ;AACA;AD8zChB;AC7zCgB;AACI;AACI;AACH;AACJ;AD+zCjB;AC9zCgB;AACI;AACH;AACG;AACH;ADg0CjB;AC/zCgB;AACI;AACA;AACA;AACA;AACA;AALoB;AAO3B;ADi0Cb;ACh0CQ;AACI;AACH;ADk0CT;ACj0CQ;AACA;AACI;AACA;AACA;AACA;AACA;ADm0CZ;ACl0CY;AACI;AACA;AACA;AACA;ADo0ChB;ACn0CgB;AACI;AACH;AACJ;AACG;AACA;AACH;ADq0Cb;ACp0CY;ADs0CZ;ACr0CQ;AACI;AACA;AACA;AACI;AACA;AACA;AACA;AAJO;AD40CvB;ACt0CY;AACI;AAIH;ADq0Cb;ACp0CY;ADs0CZ;AC7zCY;AACI;AACH;AD+zCb;AC9zCY;AACI;AACA;AACA;AACH;ADg0Cb;AC/zCY;AACA;AACA;AACA;AACA;AACA;ADi0CZ;ACh0CQ;AACI;AA3DJ;AA6DH;ADk0CL;ACj0CI;AACH;AAnbY;AAobb;ADo0CA;ACn0CA;AACA;AAEA;AAEA;AACQ;AACI;AACH;AACG;AACH;AACJ;AAEL;AACA;AACQ;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;AACA;AACA;AAJU;ADu0CtB;ACj0CQ;AACI;AACH;ADm0CT;ACl0CQ;AACA;AACH;AAEL;AACA;AACQ;AACA;AACA;AACA;AACA;AACA;AACA;ADm0CR;ACl0CQ;AACI;AACA;AACH;AACG;AACH;ADo0CT;ACn0CQ;AACI;AACH;ADq0CT;ACn0CQ;AACA;AACH;AAEL;AACA;AACQ;AACA;AAEA;AACA;ADm0CR;ACj0CQ;AACA;AACA;AACA;ADm0CR;ACj0CQ;AACI;AACH;ADm0CT;ACl0CQ;AAEA;AACI;AACA;AACA;AACA;AAJU;ADw0CtB;AC9zCQ;AACI;AACH;ADg0CT;AC/zCQ;AACA;AACH;AAEL;AACA;AACQ;AACA;AACH;AAEL;AACA;AACQ;AACI;AACH;AACG;AACI;AACA;AACA;AAH8N;AAMrO;AD8zCT;AC7zCQ;AACH;AAEL;AACA;AACQ;AACH;AAEL;AACA;AACQ;AACA;AACH;AAEL;AACA;AACQ;AD4zCR;AC3zCQ;AACI;AACH;AD6zCT;AC5zCQ;AACH;AAEL;AACA;AACQ;AACA;AACA;AACH;AAEL;AACA;AACQ;AD4zCR;ACxzCQ;AACI;AACA;AACI;AACA;AACI;AACA;AACA;AACA;AAJI;AAMR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBK;AD60CrB;ACzzCY;AACI;AACH;AACJ;AD2zCT;ACzzCQ;AD2zCR;AC1zCQ;AACI;AACH;AD4zCT;AC3zCQ;AACI;AACA;AACA;AACA;AAJU;AAQd;AACA;AACA;AACA;AD2zCR;AC1zCQ;AACI;AACH;AD4zCT;AC3zCQ;AACA;AACA;AACA;AACA;AD6zCR;AC5zCQ;AACI;AACH;AD8zCT;AC7zCQ;AACI;AACH;AACG;AACA;AACI;AACH;AD+zCb;AC9zCY;AACH;ADg0CT;AC/zCQ;AACH;AAEL;AACA;AACQ;AACI;AACH;ADg0CT;AC/zCQ;AACI;AACH;ADi0CT;AC/zCQ;ADi0CR;AC7zCQ;AACI;AACA;AACH;AD+zCT;AC9zCQ;ADg0CR;AC/zCQ;AACI;ADi0CZ;ACh0CY;AACI;AACA;ADk0ChB;ACj0CgB;AACI;ADm0CpB;ACl0CoB;AACI;AACH;AACG;AACA;AACH;AACG;AACA;AACH;AACJ;AACG;AACH;AACJ;AACJ;ADo0CT;ACn0CQ;AACI;ADq0CZ;ACp0CY;AACI;AACH;ADs0Cb;AACA;ACr0CY;AACH;ADu0CT;ACt0CQ;AACI;AACH;AACG;AACI;AACA;AACA;AAHoH;AAK3H;AACJ;AAEL;AACA;AACQ;ADu0CR;ACt0CQ;AACI;AACH;AACG;AACH;AACJ;AAEL;AACA;AACQ;AACH;AAEL;AACA;AACQ;ADs0CR;ACr0CQ;AACI;AACH;AACG;AACH;AACJ;AAEL;AACA;AACQ;AACI;AACH;AACG;AACH;AACJ;AAEL;AACA;AACQ;ADq0CR;ACp0CQ;AACI;AACH;AACG;AACH;AACJ;AAEL;AACA;AACQ;AACH;AAEL;AACA;AACQ;AACH;AACL;AACA;AACA;ADo0CA;ACn0CA;AACA;AAAO;AACP;ADs0CA;ACr0CA;AAAO;AACP;ADw0CA;ACv0CA;AAAO;AACP;AD00CA;ACz0CA;AAAO;AACP;AD40CA;AC30CA;AAAO;AACP;AD80CA;AC70CA;AAAO;AACP;ADg1CA;AC/0CA;AAAO;AACP;ADk1CA;ACj1CA;AAAO;AACP;ADo1CA;ACn1CA;AAAO;AACP;ADs1CA;ACr1CA;AAAO;AACP;ADw1CA;ACv1CA;AAAQ;AACR;AD01CA;ACz1CA;AAAQ;AACR;AD41CA;AC31CA;AAAQ;AACR;AD81CA;AC71CA;AAAQ;AACR;ADg2CA;AC/1CA;AAAQ;AACR;ADk2CA;ACj2CA;AAAQ;AACR;ADo2CA;ACn2CA;AAAQ;AACR;ADs2CA;ACr2CA;AAAQ;AACR;ADw2CA;ACv2CA;AAAQ;AACR;AD02CA;ACz2CA;AAAQ;AACR;AD42CA;AC32CA;AAAQ;AACR;AD82CA;AC72CA;AAAQ;AACR;ADg3CA;AC/2CA;AAAQ;AACR;ADk3CA;ACj3CA;AAAQ;AACR;ADo3CA;ACn3CA;AAAQ;AACR;ADs3CA;ACr3CA;AAAQ;AACR;ADw3CA;ACv3CA;AAAQ;AACR;AD03CA;ACz3CA;AAAQ;AACR;AD43CA;AC33CA;AAAQ;AACR;AD83CA;AC73CA;AAAQ;AACR;ADg4CA;AC/3CA;AAAQ;AACR;ADk4CA;ACj4CA;AAAQ;AACR;ADo4CA;ACn4CA;AAAQ;AACR;ADs4CA;ACr4CA;AAAQ;AACR;ADw4CA;ACv4CA;AAAQ;AACR;AAtEA;AAwEC;AACD;AACA;AAAa;AAAW;AAAyG;AAA1G;AAAX;AA/YC;AAiZb;AACC;AD+4CD;AC94CA;ADg5CA;AC/4CA;AACE;AACD;ADi5CD;ACh5CA;AAA0B;AAC1B;AACC;ADm5CD;ACj5CO;ADm5CP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AE5zEA;AF8zEA;AE7zEA;AF+zEA;AE9zEA;AFg0EA;AE/zEA;AFi0EA;AEp1EA;AFs1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AE/0EA;AFi1EA;AACA;AACA;AACA;AACA;AEj1EE;AFm1EF;AACA;AACA;AEj1EE;AACE;AACA;AAEA;AFk1EJ;AACA;AACA;AACA;AEj1EI;AAEA;AFk1EJ;AEj1EI;AAEA;AFk1EJ;AEj1EI;AACD;AAED;AFk1EF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AEr1EwB;AFu1ExB;AEt1EI;AFw1EJ;AEt1EI;AACE;AFw1EN;AEv1EM;AACE;AACD;AACC;AACD;AACF;AACD;AACD;AAED;AFw1EF;AACA;AACA;AACA;AACA;AACA;AEz1EyD;AF21EzD;AE11EI;AAEA;AACE;AACA;AACD;AAED;AAES;AAAA;AAEV;AAED;AFw1EF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AEz1EoB;AF21EpB;AE11EI;AF41EJ;AE11EI;AACE;AACA;AACA;AACA;AACA;AF41EN;AE31EM;AACE;AACD;AACC;AAAiB;AAAoB;AAArB;AACjB;AACF;AACD;AACD;AAED;AF+1EF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AEh2E0B;AFk2E1B;AEj2EI;AACA;AACA;AFm2EJ;AEl2EI;AAEA;AFm2EJ;AEh2EI;AAAkC;AFm2EtC;AEh2EM;AACE;AACD;AFk2EP;AEj2EM;AFm2EN;AEl2EM;AACE;AFo2ER;AEj2EQ;AAA4B;AAAwB;AAAzB;AAC3B;AACD;AFs2EP;AEn3EsC;AAAA;AAAA;AFu3EtC;AEx2EM;AACE;AACA;AACD;AF02EP;AEz2EM;AACD;AF22EL;AEx2EI;AAAkC;AAAA;AAAA;AAEhC;AF42EN;AE32EM;AACE;AACD;AF62EP;AACA;AE52EM;AACE;AACD;AAED;AACA;AF62EN;AACA;AE72EM;AF+2EN;AE92EM;AACE;AACA;AACA;AACA;AAGA;AAA4B;AAAwB;AAAzB;AAC5B;AACF;AAED;AAAQ;AAAgB;AAAjB;AACR;AAED;AFk3EF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AEl3EI;AFo3EJ;AEn3EI;AACE;AAAQ;AAAc;AAAf;AACR;AFw3EL;AEv3EI;AACA;AFy3EJ;AEx3EI;AACE;AAAQ;AAAc;AAAf;AACR;AF63EL;AE53EI;AAAQ;AAA0B;AAA3B;AACR;AAED;AFg4EF;AACA;AACA;AACA;AACA;AACA;AEh4EI;AACE;AACD;AACF;AAED;AFi4EF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AEj4EI;AACA;AFm4EJ;AEl4EI;AACE;AACE;AACA;AACD;AACC;AAAS;AAAoB;AAArB;AACT;AACF;AFu4EL;AEt4EI;AAAQ;AAAY;AAAb;AACR;AAED;AF04EF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AE14EI;AACA;AF44EJ;AE34EI;AACE;AACD;AACC;AAAS;AAAoB;AAArB;AACT;AFg5EL;AE/4EI;AAAQ;AAAQ;AAAT;AACR;AAED;AFm5EF;AACA;AACA;AACA;AACA;AACA;AACA;AEn5EI;AACD;AAED;AFo5EF;AACA;AACA;AACA;AACA;AACA;AACA;AEp5EI;AACD;AAED;AFq5EF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AEr5EI;AACE;AACD;AFu5EL;AEt5EI;AACE;AACE;AFw5ER;AEv5EM;AACE;AACE;AACD;AFy5ET;AEx5EQ;AF05ER;AEz5EM;AACE;AACE;AACD;AF25ET;AE15EQ;AAZJ;AFy6EJ;AE35EI;AACD;AF65EH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGrsFA;AHusFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGrsFA;AHusFA;AACA;AACA;AACA;AGrsFE;AHusFF;AACA;AACA;AACA;AGrsFE;AACE;AACA;AAEA;AHssFJ;AGrsFI;AAEA;AHssFJ;AGrsFI;AACD;AAGH;AHqsFA;AACA;AACA;AACA;AACA;AACA;AGtsFO;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjCyB;AAoC3B;AHusFA;AACA;AACA;AACA;AACA;AGvsFO;AHysFP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIlxFA;AJoxFA;AInxFA;AJqxFA;AIpxFA;AJsxFA;AIrxFA;AJuxFA;AItxFA;AJwxFA;AIvxFA;AJyxFA;AI9yFA;AJgzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AItyFA;AAEA;AJuyFA;AACA;AACA;AACA;AItyFA;AAEA;AJuyFA;AItyFA;AAEA;AJuyFA;AACA;AACA;AACA;AItyFA;AAEA;AJuyFA;AACA;AACA;AACA;AItyFA;AACE;AJwyFF;AACA;AACA;AACA;AACA;AACA;AACA;AItyFE;AACE;AACE;AACD;AJwyFL;AIvyFI;AACA;AACA;AACA;AACD;AAED;AJwyFF;AACA;AACA;AACA;AACA;AACA;AIxyFE;AACE;AJ0yFJ;AACA;AACA;AACA;AACA;AACA;AIxyFI;AACE;AACA;AACA;AACD;AJ0yFL;AIzyFI;AACD;AAED;AJ0yFF;AACA;AACA;AACA;AACA;AACA;AI1yFE;AACE;AACE;AACD;AJ4yFL;AI3yFI;AACA;AACA;AACD;AAED;AJ4yFF;AACA;AACA;AACA;AACA;AACA;AI5yFE;AACE;AJ8yFJ;AACA;AACA;AACA;AI5yFI;AACE;AACA;AACA;AACD;AJ8yFL;AI7yFI;AACD;AJ+yFH;AACA;AI7yFE;AACE;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbgB;AAelB;AACE;AACA;AACA;AACA;AAJiB;AAMnB;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZiB;AAtBE;AJm1FzB;AI5yFE;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAf4B;AAmB9B;AJ4yFF;AI3yFE;AACA;AACE;AAEA;AACA;AACE;AJ4yFN;AI3yFM;AACE;AAKA;AACD;AACC;AACA;AACD;AACF;AACF;AAGD;AJuyFF;AItyFE;AJwyFF;AIvyFE;AJyyFF;AIxyFE;AJ0yFF;AIxyFE;AACD;AAED;AJyyFA;AACA;AACA;AACA;AACA;AACA;AACA;AI3yFE;AJ6yFF;AACA;AACA;AACA;AACA;AI3yFE;AACE;AACE;AACD;AAED;AJ4yFJ;AACA;AI5yFI;AAEA;AJ6yFJ;AI5yFI;AAEA;AJ6yFJ;AI5yFI;AAEA;AJ6yFJ;AI5yFI;AJ8yFJ;AI3yFI;AACA;AJ6yFJ;AI5yFI;AACE;AAID;AACF;AAED;AJ0yFF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI5yFI;AACD;AAED;AJ6yFF;AACA;AACA;AACA;AACA;AACA;AACA;AI9yF2B;AJgzF3B;AI/yFI;AACA;AACE;AACA;AACA;AACE;AACE;AACD;AACF;AACD;AACD;AACC;AJizFN;AIhzFM;AACE;AACE;AACE;AACD;AACF;AACF;AJkzFP;AIjzFM;AACD;AACF;AAED;AJkzFF;AACA;AACA;AACA;AACA;AACA;AACA;AIlzFI;AJozFJ;AIlzFI;AACE;AACA;AACD;AJozFL;AInzFI;AACD;AAED;AJozFF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIpzFI;AACA;AJszFJ;AIlzFI;AACE;AADY;AJszFlB;AInzFM;AACE;AACD;AACC;AACA;AACA;AACD;AACF;AJqzFL;AACA;AIpzFI;AACD;AAED;AJqzFF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AItzFqB;AJwzFrB;AIvzFI;AACE;AACD;AJyzFL;AI5zFqB;AAAA;AAAA;AJg0FrB;AIxzFI;AACE;AACD;AJ0zFL;AIxzFI;AACE;AACE;AJ0zFR;AIxzFM;AACE;AACA;AAEA;AACA;AACA;AAEA;AACA;AJwzFR;AItzFQ;AACE;AJwzFV;AIvzFU;AACE;AACE;AAID;AACF;AACC;AACD;AJszFX;AIrzFU;AACE;AACD;AACF;AACC;AACE;AAIA;AACD;AJozFX;AInzFU;AACA;AJqzFV;AIpzFU;AACE;AJszFZ;AIrzFY;AACE;AACD;AACC;AACD;AACF;AJuzFX;AItzFU;AACE;AACD;AACF;AJwzFT;AItzFQ;AACE;AACE;AACE;AACD;AJwzFb;AIvzFY;AACD;AACF;AJyzFT;AIvzFQ;AJyzFR;AIvzFM;AACE;AACA;AJyzFR;AIvzFQ;AACE;AACD;AJyzFT;AIxzFQ;AJ0zFR;AIzzFQ;AACE;AACD;AJ2zFT;AI1zFQ;AJ4zFR;AI3zFQ;AACE;AACD;AJ6zFT;AI5zFQ;AACE;AACD;AJ8zFT;AI7zFQ;AJ+zFR;AI7zFM;AACE;AJ+zFR;AI7zFM;AACE;AJ+zFR;AI9zFQ;AACE;AACD;AJg0FT;AI/zFQ;AJi0FR;AI/zFM;AACA;AACE;AJi0FR;AI/zFM;AACE;AAAuB;AAAA;AJm0F/B;AIj0FM;AACE;AJm0FR;AIj0FM;AACE;AACA;AAAyB;AAAA;AAAA;AJs0FjC;AIp0FU;AACD;AACD;AJs0FR;AIp0FM;AACE;AACE;AACA;AAFK;AJy0Ff;AIp0FM;AACE;AJs0FR;AIp0FM;AACE;AJs0FR;AIp0FM;AACE;AJs0FR;AIp0FM;AACE;AJs0FR;AIp0FM;AACE;AJs0FR;AIj0FM;AACE;AJm0FR;AI9zFM;AACE;AJg0FR;AI3zFM;AACE;AJ6zFR;AIxzFM;AACE;AJ0zFR;AIxzFM;AACE;AJ0zFR;AIxzFM;AACE;AJ0zFR;AIxzFM;AACE;AJ0zFR;AIxzFM;AACE;AJ0zFR;AIxzFM;AACE;AJ0zFR;AIxzFM;AACE;AJ0zFR;AIxzFM;AACE;AJ0zFR;AIxzFM;AACE;AJ0zFR;AItzFM;AACE;AACA;AAAsB;AAAX;AAAW;AJ2zF9B;AI1zFU;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AJ2zFV;AI1zFU;AACE;AACE;AACD;AACF;AJ4zFX;AI3zFU;AACD;AJ6zFT;AI3zFM;AACE;AA7MJ;AA+MD;AAED;AJ4zFF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI5zFI;AACD;AAED;AJ6zFF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI7zFI;AACA;AACE;AACD;AJ+zFL;AI9zFI;AACD;AAED;AJ+zFF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI/zFI;AACE;AACE;AACD;AACF;AJi0FL;AIh0FI;AACD;AJk0FH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKh5GA;ALk5GA;AKl6GA;ALo6GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKh6GA;ALk6GA;AACA;AACA;AACA;AACA;AKl6GE;ALo6GF;AACA;AACA;AKl6GE;AACE;AACA;AAEA;ALm6GJ;AKl6GI;AAID;AAED;ALg6GF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKl6GI;AAAa;AAA4B;ALs6G7C;AKr6GI;AACE;AACD;ALu6GL;AKt6GI;AACD;AAED;ALu6GF;AACA;AACA;AACA;AACA;AKv6GI;AACD;ALy6GH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AM59GA;AN89GA;AM79GA;AN+9GA;AM99GA;ANg+GA;AM/9GA;ANi+GA;AMp/GA;ANs/GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AM9+GA;AAEA;AN++GA;AACA;AACA;AACA;AACA;AACA;AM9+GA;AAEA;AN++GA;AACA;AACA;AACA;AM9+GA;AACE;AACE;AADO;AAGT;AACA;AAL4B;AAQ9B;AN++GA;AACA;AACA;AACA;AM9+GA;AACE;AACA;AAFyB;AAK3B;AN++GA;AACA;AACA;AACA;AACA;AACA;AM9+GA;AAEA;AN++GA;AACA;AACA;AACA;AM9+GA;AACE;AACA;AACA;AACA;AAJqB;AAOvB;AN++GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AMh/GE;ANk/GF;AACA;AMh/GE;AACE;AACA;AACD;AAED;ANi/GF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AMn/GI;AACD;AAED;ANo/GF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AMp/GI;ANs/GJ;AMp/GI;AACE;AACD;ANs/GL;AACA;AMr/GI;AACE;AACD;ANu/GL;AACA;AMt/GI;AACE;AACD;ANw/GL;AACA;AMv/GI;AACE;ANy/GN;AMx/GM;AACE;AN0/GR;AMz/GQ;AACE;AACD;AACC;AACA;AACD;AN2/GT;AM1/GQ;AACD;AACC;AACD;AN4/GP;AM3/GM;AACE;AACE;AACD;AACF;AACF;AN6/GL;AACA;AMhiHsC;AAAA;ANmiHtC;AM9/GI;AACE;ANggHN;AM//GM;AACE;AACD;AACF;ANigHL;AM//GI;AACD;AAED;ANggHF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AMhgHI;AACA;AACE;AACE;AACD;ANkgHP;AMrgHa;ANugHb;AMlgHM;AACE;AACA;ANogHR;AMngHQ;AACE;ANqgHV;AMngHU;AACE;AACD;AACF;AACF;AACF;ANqgHL;AMpgHI;AACD;AAED;ANqgHF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AMrgHI;AACA;AACE;AACD;ANugHL;AACA;AMtgHI;AACE;AACD;ANwgHL;AMvgHI;ANygHJ;AMxgHI;AACE;AAAO;AAAiC;AAAxC;AACD;AN6gHL;AM5gHI;AN8gHJ;AM7gHI;AACE;AAAO;AAAiC;AAAxC;AACD;ANkhHL;AMjhHI;ANmhHJ;AMlhHI;AACE;AACD;ANohHL;AMnhHI;AACD;ANqhHH;AACA;AACA;AMphHA;ANshHA;AACA;AACA;AACA;AACA;AACA;AACA;AMxhHA;AACE;AACA;AACE;AACE;AACA;AACA;AACA;AACA;AACA;AACE;AACE;AADkB;AADf;AAKP;AAXW;AAab;AACE;AACE;AACE;AADkB;AADf;AADW;AAOpB;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfmB;AAiBrB;AACE;AACA;AACA;AACA;AACA;AACA;AANgB;AAQlB;AACE;AADc;AAGhB;AACE;AACA;AACA;AACE;AACE;AADkB;AADf;AAHU;AASnB;AACE;AACA;AAF2B;AAI7B;AACE;AADY;AAGd;AACE;AACA;AACA;AACE;AACE;AACA;AACA;AAHkB;AADf;AAOP;AACE;AADQ;AAVD;AAcX;AACE;AADc;AAGhB;AACE;AACE;AACE;AADkB;AADf;AAKP;AACA;AAPU;AASZ;AACE;AACA;AAFc;AAIhB;AACE;AACE;AACE;AADkB;AADf;AADI;AAOb;AACE;AACA;AAFa;AAIf;AACE;AADa;AAGf;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AACE;AADkB;AADf;AAKP;AAhBW;AAkBb;AACE;AADa;AAGf;AACE;AACE;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfkB;AADd;AADL;AAqBL;AACE;AACA;AACA;AAHQ;AAKV;AACE;AADS;AAGX;AACE;AADU;AAGZ;AACE;AACE;AACE;AACA;AAFkB;AADR;AADP;AAQT;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AADM;AAGR;AACA;AAzBO;AA2BT;AACE;AACA;AACA;AACA;AAJQ;AAMV;AACE;AACA;AAFU;AAIZ;AACE;AADS;AAGX;AACE;AACA;AACA;AACA;AACA;AALQ;AAOV;AACE;AACE;AACE;AADkB;AADf;AAKP;AANQ;AAQV;AACE;AACA;AACE;AACE;AADkB;AADf;AAKP;AAPO;AAST;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBU;AA1OA;AA+Pd;AACD;AN0hHD;AACA;AACA;AACA;AACA;AACA;AACA;AO9/HA;APggIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AO9/HA;APggIA;AACA;AACA;AO9/HO;AACL;AACA;AACA;AACA;AAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZuB;AP8gIzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQzhIA;AR2hIA;AQ3iIA;AR6iIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQziIA;AR2iIA;AACA;AACA;AACA;AACA;AACA;AQziIO;AACL;AACE;AACE;AACD;AR2iIL;AQ1iII;AACD;AACF;AR4iID;AACA;AACA;AACA;AACA;AACA;AACA;ASllIA;ATolIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASllIA;ATolIA;AACA;AACA;ASllIO;AACL;ATolIF;AACA;ASllIE;ATolIF;ASllIE;ATolIF;AACA;ASllIE;ATolIF;ASllIE;ATolIF;AACA;AACA;ASllIE;ATolIF;ASllIE;ATolIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASllIE;ATolIF;ASllIE;ATolIF;AACA;AACA;AACA;ASllIE;ATolIF;ASllIE;ATolIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ASllIE;ATolIF;ASllIE;ATolIF;AACA;ASllIE;AArD2B;AT0oI7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AUrqIA;AVuqIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AUrqIA;AVuqIA;AACA;AACA;AACA;AACA;AACA;AUrqIA;AAEA;AAKA;AAKA;AV8pIA;AU7pIO;AACL;AACA;AACA;AACA;AV+pIF;AU9pIE;AVgqIF;AACA;AU9pIE;AAEA;AACA;AAEA;AV8pIF;AU7pIE;AV+pIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AU7pIE;AAvBkB;AVurIpB;AU1pIO;AACL;AADoB;AV8pItB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AW3tIA;AX6tIA;AW5tIA;AX8tIA;AW/uIA;AXivIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AW5uIA;AX8uIA;AACA;AACA;AACA;AACA;AW5uIO;AACL;AACD;AAED;AX6uIA;AACA;AACA;AACA;AW7uIA;AAEA;AX8uIA;AACA;AACA;AACA;AW7uIO;AACL;AACD;AAED;AX8uIA;AACA;AACA;AACA;AACA;AACA;AW9uIO;AACL;AACE;AACD;AXgvIH;AW9uIE;AACD;AAED;AX+uIA;AACA;AACA;AACA;AACA;AACA;AW/uIA;AACE;AACE;AACA;AACA;AACA;AAEA;AXgvIJ;AW/uII;AAAmB;AAAO;AAC3B;AACC;AACD;AACF;AAED;AXkvIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AWlvIO;AACL;AACD;AAED;AXmvIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AWnvIO;AACL;AACD;AAED;AXovIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AWpvIO;AACL;AXsvIF;AWpvIE;AACA;AACD;AXsvID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AYx5IA;AZ05IA;AYz5IA;AZ25IA;AYt5IA;AZw5IA;AYv5IA;AZy5IA;AYx5IA;AZ05IA;AYz5IA;AZ25IA;AYp7IA;AZs7IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AYx6IA;AACE;AACA;AACA;AACA;AACA;AACA;AANwB;AAQ1B;AAEA;AZy6IA;AYx6IO;AAEP;AZy6IA;AACA;AYz6IO;AAEP;AZ06IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AY36IO;AACL;AACE;AACA;AACD;AACD;AZ66IF;AACA;AY76IE;AZ+6IF;AY96IE;AACE;AACA;AACE;AACE;AACA;AACD;AACF;AACD;AAA0B;AAAD;AAC1B;AACC;AACA;AACE;AACE;AACA;AACD;AACF;AAAE;AAAmB;AACvB;AACF;AAED;AZm7IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AYn7IO;AACL;AACE;AACD;AACF;AAED;AZo7IA;AACA;AACA;AACA;AACA;AACA;AYp7IO;AACL;AAAkC;AAAA;AACnC;AAED;AZu7IA;AACA;AACA;AACA;AACA;AACA;AYv7IO;AACL;AAA0B;AAAA;AAC3B;AAED;AZ07IA;AACA;AACA;AACA;AACA;AY17IO;AACL;AACE;AACD;AACF;AAED;AZ27IA;AACA;AACA;AACA;AACA;AY37IO;AACL;AACE;AACD;AACF;AAED;AZ47IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AY57IO;AACL;AZ87IF;AY77IE;AACE;AACD;AZ+7IH;AY97IE;AACD;AAED;AZ+7IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AY/7IO;AACL;AACA;AACD;AAED;AZg8IA;AACA;AACA;AACA;AACA;AACA;AACA;AYh8IO;AACL;AACE;AACD;AZk8IH;AYj8IE;AACD;AAED;AZk8IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AYl8IO;AACL;AACA;AACD;AAED;AZm8IA;AACA;AACA;AACA;AACA;AACA;AACA;AYn8IO;AACL;AZq8IF;AYp8IE;AACE;AACD;AZs8IH;AACA;AYp8IE;AZs8IF;AYr8IE;AACE;AZu8IJ;AYt8II;AACE;AACD;AACC;AACD;AACF;AZw8IH;AYv8IE;AACD;AAED;AZw8IA;AACA;AACA;AACA;AACA;AACA;AYx8IO;AACL;AACE;AACA;AACD;AZ08IH;AYz8IE;AZ28IF;AYz8IE;AZ28IF;AY18IE;AACD;AAED;AZ28IA;AACA;AACA;AACA;AACA;AACA;AY38IO;AACL;AACA;AACE;AACD;AAED;AZ48IF;AACA;AY58IE;AACE;AACD;AZ88IH;AY78IE;AACoB;AAAwB;AAG7C;AAED;AZ68IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AY78IO;AACL;AACE;AACE;AACD;AACF;AZ+8IH;AY98IE;AACD;AAED;AZ+8IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AY/8IO;AACL;AACE;AACE;AACD;AACF;AZi9IH;AYh9IE;AACD;AAED;AZi9IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AYj9IO;AACL;AACE;AACD;AZm9IH;AYj9IE;AACE;AACD;AACF;AAED;AZk9IA;AACA;AACA;AACA;AACA;AACA;AACA;AYl9IO;AACL;AZo9IF;AYn9IE;AAKE;AACE;AACD;AACF;AZi9IH;AYh9IE;AACD;AAED;AZi9IA;AACA;AACA;AACA;AACA;AACA;AACA;AYj9IO;AACL;AACA;AACA;AACE;AACD;AACF;AAED;AZk9IA;AACA;AACA;AACA;AACA;AACA;AACA;AYl9IO;AACL;AAKE;AACE;AACD;AACF;AZg9IH;AY/8IE;AACD;AAED;AZg9IA;AACA;AACA;AACA;AACA;AACA;AACA;AYh9IO;AACL;AZk9IF;AYj9IE;AAKE;AACE;AACD;AACF;AZ+8IH;AY98IE;AACD;AAED;AZ+8IA;AACA;AACA;AACA;AACA;AACA;AACA;AY/8IO;AACL;AAKE;AACE;AACD;AACF;AZ68IH;AY58IE;AACD;AAED;AZ68IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AY78IO;AACL;AZ+8IF;AY98IE;AACE;AACE;AACD;AACF;AZg9IH;AY/8IE;AACD;AAED;AZg9IA;AACA;AACA;AACA;AACA;AACA;AACA;AYh9IO;AACL;AACA;AAAO;AAAO;AAAd;AACD;AAED;AZo9IA;AACA;AACA;AACA;AACA;AACA;AACA;AYp9IO;AACL;AACA;AACE;AACD;AACF;AAED;AZq9IA;AACA;AACA;AACA;AACA;AACA;AACA;AYr9IO;AACL;AACA;AAAO;AAAO;AAAd;AACD;AAED;AZy9IA;AACA;AACA;AACA;AACA;AACA;AACA;AYz9IO;AACL;AACA;AAAO;AAAO;AAAd;AACD;AAED;AZ69IA;AACA;AACA;AACA;AACA;AACA;AACA;AY79IO;AACL;AACA;AAAO;AAAO;AAAd;AACD;AAED;AZi+IA;AACA;AACA;AACA;AACA;AACA;AACA;AYj+IO;AACL;AZm+IF;AY79IE;AACE;AACD;AZ+9IH;AY99IE;AACD;AAED;AZ+9IA;AACA;AACA;AACA;AACA;AACA;AACA;AY/9IO;AACL;AACA;AAAe;AAAO;AACvB;AAED;AZk+IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AYl+IA;AACE;AACA;AACA;AACA;AAAsB;AAAO;AAC7B;AACA;AACD;AAED;AZq+IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AYr+IO;AACL;AACE;AAAY;AAAO;AACpB;AZy+IH;AACA;AYv+IE;AACA;AACD;AAED;AZw+IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AYx+IO;AACL;AACE;AAAY;AAAO;AAGpB;AZ0+IH;AACA;AYx+IE;AACD;AAED;AZy+IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AYz+IO;AAKL;AAA6D;AAAA;AZy+I/D;AY1+IE;AAGA;AACA;AZ0+IF;AYz+IE;AACE;AZ2+IJ;AY1+II;AACE;AZ4+IN;AY3+IM;AACD;AACF;AZ6+IH;AY5+IE;AACD;AAED;AZ6+IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AY7+IO;AACL;AZ++IF;AY9+IE;AACE;AACE;AACD;AACF;AZg/IH;AY5+IE;AACD;AAED;AZ6+IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AY7+IO;AACL;AACE;AACD;AACC;AACA;AACA;AACD;AACF;AAED;AZ8+IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AY9+IO;AAAqC;AZi/I5C;AY/+IE;AACE;AACD;AACF;AAED;AZg/IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AYh/IO;AACL;AACA;AACA;AACA;AZk/IF;AYj/IE;AACE;AACD;AACC;AACD;AZm/IH;AACA;AYj/IE;AACE;AACD;AZm/IH;AYl/IE;AACD;AAED;AZm/IA;AACA;AACA;AACA;AACA;AACA;AYn/IO;AACL;AAKD;AAED;AZg/IA;AACA;AACA;AACA;AACA;AACA;AYh/IO;AACL;AAID;AAED;AZ8+IA;AACA;AACA;AACA;AACA;AACA;AY9+IO;AACL;AAIA;AACD;AAED;AZ4+IA;AACA;AACA;AACA;AACA;AACA;AY5+IO;AACL;AACE;AACD;AZ8+IH;AY7+IE;AACD;AAED;AZ8+IA;AACA;AACA;AACA;AACA;AY9+IA;AACE;AACD;AAED;AZ++IA;AACA;AACA;AACA;AACA;AACA;AY/+IO;AACL;AACE;AAAQ;AAAO;AAChB;AAEA;AACF;AAED;AZi/IA;AACA;AACA;AACA;AACA;AACA;AYj/IO;AACL;AACD;AAED;AZk/IA;AACA;AACA;AACA;AACA;AACA;AYl/IO;AACL;AAEA;AZm/IF;AYl/IE;AAGE;AAEH;AAED;AZg/IA;AACA;AACA;AACA;AACA;AACA;AACA;AYh/IO;AACL;AZk/IF;AYj/IE;AACE;AACA;AACD;AAED;AZk/IF;AACA;AYl/IE;AACE;AACA;AACA;AACD;AZo/IH;AYl/IE;AACD;AAED;AZm/IA;AACA;AACA;AACA;AACA;AACA;AYn/IO;AACL;AZq/IF;AY9+IE;AACE;AACD;AACF;AAED;AZ++IA;AACA;AACA;AACA;AACA;AACA;AY/+IO;AACL;AZi/IF;AY1+IE;AACE;AACA;AACD;AZ4+IH;AYv/IwC;AZy/IxC;AY5+IE;AACE;AACD;AZ8+IH;AY7+IE;AZ++IF;AYx+IE;AACE;AACD;AACF;AAED;AZy+IA;AACA;AACA;AACA;AACA;AACA;AACA;AYz+IO;AAAsC;AZ4+I7C;AY1+IE;AACE;AACD;AZ4+IH;AYh/I6C;AZk/I7C;AY5+IE;AACE;AACD;AZ8+IH;AY7+IE;AAKA;AACD;AAED;AZ0+IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AY1+IO;AACL;AACD;AAED;AZ2+IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AY3+IO;AACL;AACE;AACD;AZ6+IH;AY3+IE;AACA;AZ6+IF;AYz+IE;AACE;AACD;AZ2+IH;AACA;AYz+IE;AACD;AAED;AZ0+IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AY1+IO;AACL;AACA;AZ4+IF;AY1+IE;AACE;AACE;AACD;AACC;AACD;AACF;AZ4+IH;AY1+IE;AACD;AAED;AZ2+IA;AACA;AACA;AACA;AACA;AY3+IO;AAAwC;AAE7C;AAAwB;AAAO;AAC/B;AAAsC;AAAO;AAC7C;AACD;AZi/ID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aaz4KA;Ab24KA;Aa14KA;Ab44KA;Aal4KA;Abo4KA;Aan4KA;Abq4KA;AACA;AACA;AACA;AACA;Aar6KA;Abu6KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aav5KA;Aby5KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aav5KO;AACL;AACS;AAAA;AAEV;AAED;Abw5KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aax5KO;AACL;Ab05KF;Aaz5KE;AACE;AAAO;AAAkC;AAAzC;AACD;Ab85KH;Aa75KE;AACD;AAED;Ab85KA;AACA;AACA;AACA;AACA;AACA;Aa95KA;AACE;AACA;AACE;AACD;Abg6KH;Aa/5KE;AACD;AAED;Abg6KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aah6KO;AACL;AAKc;AAAA;AACf;AAED;Ab85KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aa95KO;AAML;Ab25KF;Aa15KE;AACE;AAAO;AAAkC;AAAzC;AACD;Ab+5KH;Aa95KE;AACA;AAEQ;AAAA;AAIJ;AACA;AACA;AACE;AACD;AACC;AACD;Ab65KP;Aa55KM;AACD;AACJ;AAED;Ab65KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aa75KO;AAKL;Ab25KF;Aa15KE;AACE;AAAO;AAAkC;AAAzC;AACD;Ab+5KH;Aa95KE;AACA;Abg6KF;Aa95KE;AACE;AACD;AACC;AACA;AACD;AACF;AAED;Ab+5KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aa/5KA;AACE;AAAO;AAAwB;AAA/B;AAUD;AAED;Ab05KA;AACA;AACA;AACA;AACA;AACA;Aa15KO;AACL;AACA;AACE;AACD;Ab45KH;Aa35KE;AAEA;Ab45KF;Aa35KE;Ab65KF;Aa15KE;AACE;AACA;AAGA;AACD;Ab05KH;Aaz5KE;AACD;AAED;Ab05KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aa15KO;AACL;AACE;AACD;AACF;AAED;Ab25KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aa35KA;AACE;AACD;AAED;Ab45KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aa55KA;AACE;Ab85KF;AACA;AACA;AACA;AACA;AACA;Aa35KE;AACA;AACA;AACE;AACD;Ab65KH;Aa35KE;AACA;AAAO;AAAkC;AAAzC;AAID;AAED;Ab45KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aa55KA;AACE;AAEQ;AAAA;AAEJ;AACA;AACA;AACE;AACD;AACC;AACD;Ab65KP;Aa55KM;AACD;AACJ;Ab85KD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AchtLA;AdktLA;AcjtLA;AdmtLA;AcltLA;AdotLA;Ac7sLA;Ad+sLA;Ac9sLA;AdgtLA;Ac/sLA;AditLA;AchtLA;AdktLA;AcjtLA;AdmtLA;AcltLA;AdotLA;AcntLA;AdqtLA;AcptLA;AdstLA;AcrtLA;AdutLA;ActtLA;AdwtLA;Ac1vLA;Ad4vLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ActuLA;AdwuLA;AACA;ActuLA;AAEA;AduuLA;AACA;AACA;ActuLA;AAEA;AduuLA;AACA;AACA;ActuLA;AAEA;AduuLA;AACA;AACA;AACA;AACA;ActuLA;AAEA;AduuLA;AACA;AACA;AACA;AACA;ActuLA;AAEA;AduuLA;AACA;AACA;AACA;ActuLA;AdwuLA;ActuLA;AAEA;AduuLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ActuLA;AACE;AACE;AACD;AdwuLH;AcvuLE;AACD;AAED;AdwuLA;AACA;AACA;AACA;AACA;AACA;AACA;AcxuLA;AACE;AACA;AACA;AACD;AAED;AdyuLA;AACA;AACA;AACA;AACA;AACA;AczuLA;AACE;AACE;AACA;AAAsB;AAA4B;AACnD;AACC;AACD;AACF;AAED;Ad4uLA;AACA;AACA;AACA;AACA;AACA;Ac5uLA;AAEA;Ad6uLA;AACA;AACA;AACA;AACA;Ac5uLO;AACL;Ad8uLF;Ac7uLE;AAME;AAAuB;AAAuB;AAC/C;AACF;AAED;Ad2uLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ac3uLO;AACL;AACE;AACA;Ad6uLJ;Ac5uLI;AACE;AACE;AAAkC;AAAuB;AACzD;AACD;AACC;AACA;AACA;AACD;AACF;AACC;AACD;AdgvLL;AACA;Ac/uLI;AACE;AACE;AAGA;AACD;AACF;Ad+uLL;Ac7uLI;AACE;AAAO;AAAuB;AAA9B;AACD;AdkvLL;AcjvLI;AdmvLJ;AchvLI;AdkvLJ;AcjvLI;AACE;AdmvLN;AclvLM;AACE;AACA;AACD;AACF;AdovLL;AACA;AclvLI;AACE;AdovLN;AcnvLM;AACE;AACD;AACC;AACE;AACD;AACC;AACD;AACC;AACD;AACF;AACF;AdqvLL;AcpvLI;AACE;AACD;AAGD;AdovLJ;AACA;AcpvLI;AAQD;AACC;AACE;AACD;AACF;Ad+uLH;Ac9uLE;AAAO;AAAuB;AAA9B;AACD;AAED;AdkvLA;AACA;AACA;AACA;AACA;AclvLO;AACL;AACD;AAED;AdmvLA;AACA;AACA;AACA;AACA;AcnvLO;AACL;AACE;AACD;AdqvLH;AcpvLE;AACE;AACD;AdsvLH;AcrvLE;AACE;AACD;AduvLH;ActvLE;AACD;AAED;AduvLA;AACA;AACA;AACA;AACA;AcvvLO;AACL;AACD;AAED;AdwvLA;AACA;AACA;AACA;AACA;AcxvLO;AACL;AACE;AACD;Ad0vLH;AczvLE;AACE;AACD;Ad2vLH;Ac1vLE;AACE;AACD;Ad4vLH;Ac3vLE;AACD;AAED;Ad4vLA;AACA;AACA;AACA;AACA;Ac5vLO;AACL;AAAc;AAA0B;AACxC;AACE;AAME;AACA;AACD;Ad2vLL;Ac1vLI;AACD;AACF;AAED;Ad2vLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ac3vLA;AAAsD;Ad8vLtD;Ac7vLE;AACA;AACE;AACD;Ad+vLH;Ac9vLE;AACE;AACD;AdgwLH;Ac/vLE;AdiwLF;AchwLE;AACE;AACD;AAEA;AdiwLH;AchwLE;AACE;AACA;AACA;AACA;AACD;AdkwLH;AcjwLE;AdmwLF;Ac3vLE;AACE;AACE;AACE;AAEE;AAA4B;AAG7B;AACF;AAEA;AACF;AACF;AACF;AAED;AdyvLA;AACA;AACA;AACA;AACA;AACA;AACA;AczvLO;AACL;AACA;AACA;AACA;AACE;AACE;AACA;AACA;AACD;AACF;AACF;AAED;Ad0vLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ac1vLO;AACL;Ad4vLF;Ac3vLE;AACE;AACD;Ad6vLH;Ac5vLE;AACA;AACA;Ad8vLF;Ac7vLE;AACE;AACD;Ad+vLH;Ac9vLE;AdgwLF;Ac/vLE;AACE;AACD;AdiwLH;AchwLE;AACE;AACE;AACD;AdkwLL;AcjwLI;AACA;AACD;AACF;AAED;AdkwLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AclwLO;AACL;AACE;AAA2B;AAC3B;AAA2B;AAC3B;AAA2B;AAC3B;AAA6B;AAC7B;AAA6B;AAC7B;AAA2B;AAC3B;Ad0wLJ;AcjxLc;AASb;AAED;Ad0wLA;AACA;AACA;AACA;AACA;AACA;Ac1wLA;AACE;AACE;AACE;AACD;AACC;AACA;AACD;AACF;Ad4wLH;Ac3wLE;AACE;AACD;Ad6wLH;Ac3wLE;AACD;AAED;Ad4wLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ac5wLO;AAQL;AAEA;AACA;AACA;AACA;AACA;AdswLF;AcrwLE;AduwLF;ActwLE;AACE;AACD;AdwwLH;AcvwLE;AACE;AACD;AdywLH;AcvwLE;AACA;AAGA;AduwLF;ActwLE;AAGE;AACA;AAEA;AACA;AAEA;AdowLJ;AclwLI;AACE;AACD;AACF;AdowLH;AclwLE;AdowLF;AcjwLE;AACE;AACD;AAGD;AACA;AACA;AdiwLF;AACA;AcjwLE;AAAa;AAA4B;AACzC;AACA;AACA;AACA;AAGA;AdmwLF;AclwLE;AACA;AAEA;AdmwLF;AclwLE;AACE;AACA;AACD;AACC;AACD;AdowLH;AclwLE;AACE;AACD;AdowLH;AclwLE;AdowLF;AcjwLE;AACE;AACD;AAGD;AdiwLF;AACA;AcjwLE;AdmwLF;AchwLE;AdkwLF;AchwLE;AACE;AACD;AdkwLH;AcjwLE;AACE;AACD;AdmwLH;AACA;AclwLE;AACE;AACD;AdowLH;AclwLE;AACE;AACA;AdowLJ;AcnwLI;AACE;AACD;AdqwLL;AcpwLI;AACE;AACD;AACF;AdswLH;AcpwLE;AACE;AACD;AdswLH;AcrwLE;AAEA;AACA;AdswLF;AcrwLE;AACE;AACA;AACD;AduwLH;ActwLE;AdwwLF;ActwLE;AACE;AdwwLJ;AcrwLI;AduwLJ;AcrwLI;AACE;AACD;AduwLL;AcrwLI;AACE;AACD;AduwLL;AACA;AcrwLI;AACE;AACD;AACF;AACC;AACA;AACA;AACD;AduwLH;ActwLE;AACA;AACA;AAEA;AAEA;AACD;AAED;AdqwLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AcrwLO;AACL;AACE;AACD;AduwLH;ActwLE;AdwwLF;AcvwLE;AACE;AACE;AACD;AACF;AdywLH;AcxwLE;AACD;AAED;AdywLA;AACA;AACA;AACA;AczwLO;AACL;AACD;AAED;Ad0wLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ac1wLO;AACL;AACA;Ad4wLF;Ac3wLE;AACE;AACD;Ad6wLH;Ac5wLE;Ad8wLF;Ac7wLE;AACE;AACD;AAAW;AdgxLd;Ac5wLI;AACE;AACD;Ad8wLL;AACA;Ac5wLI;AACE;AACD;AAGD;AACA;AACA;AACA;AACA;Ad4wLJ;AACA;Ac5wLI;Ad8wLJ;Ac7wLI;AACE;AACD;Ad+wLL;AACA;Ac7wLI;AACE;AACD;AACF;Ad+wLH;Ac7wLE;AACD;AAED;Ad8wLA;AACA;AACA;AACA;AACA;Ac9wLO;AACL;AACA;AACA;AACE;AACE;AACA;AAFgB;AAIlB;AACD;AACF;AAED;Ad+wLA;AACA;AACA;AACA;AACA;AACA;Ac/wLA;AACE;AdixLF;Ac9wLE;AACD;AdgxLD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aex+MA;Af0+MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aex+MA;Af0+MA;AACA;AACA;AACA;Aex+MA;AAEA;Afy+MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aex+MO;AAML;AACA;AACA;Afq+MF;AACA;AACA;Aep+ME;Afs+MF;Aep+ME;AACE;AACE;AACD;AACC;AACA;Afs+MN;Aer+MM;AACD;AACF;Afu+MH;Aet+ME;AACA;Afw+MF;Aev+ME;AACE;AACD;Afy+MH;Aex+ME;AAKA;AACE;AACE;AAKD;Afk+ML;AACA;Aej+MI;AACA;AACA;AACD;AACF;AAED;Afk+MA;AACA;AACA;AACA;AACA;AACA;AACA;Ael+MO;AACL;AACA;AACE;AACD;Afo+MH;Ael+ME;Afo+MF;Aen+ME;AACE;AACA;AACE;AACE;AACD;Afq+MP;Aex+MoB;AAKhB;AACA;AACD;AAEA;Afq+MH;Aep+ME;AACD;AAED;Afq+MA;AACA;AACA;AACA;Aer+MO;AACL;AACD;Afu+MD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB1lNA;AhB4lNA;AgB3lNA;AhB6lNA;AgB5lNA;AhB8lNA;AgBhnNA;AhBknNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB5mNA;AACA;AAEA;AhB6mNA;AgB5mNO;AAEP;AhB6mNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB9mNO;AACL;AAAkB;AAAiC;AAAC;AAAD;AACnD;AAEA;AhBmnNF;AgBlnNE;AACE;AACD;AACC;AACA;AACA;AAMA;AACD;AACF;AAED;AhB8mNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB9mNO;AACL;AAMD;AAED;AhB0mNA;AACA;AACA;AACA;AACA;AACA;AgB1mNO;AACL;AAAO;AAA6C;AAApD;AACD;AAED;AhB8mNA;AACA;AACA;AACA;AACA;AACA;AgB9mNO;AACL;AAAO;AAA6C;AAApD;AACD;AAED;AhBknNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBlnNO;AACL;AACA;AAII;AACE;AACD;AACC;AACA;AACA;AACD;AACF;AAGH;AACD;AAED;AhB8mNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB9mNO;AAML;AACA;AACE;AACD;AACD;AhB2mNF;AgB1mNE;AACE;AACD;AhB4mNH;AgB3mNE;AACD;AAED;AhB4mNA;AACA;AACA;AACA;AACA;AACA;AgB5mNO;AACL;AAKE;AACC;AAEJ;AAED;AhBwmNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBxmNO;AACL;AACA;AhB0mNF;AgBzmNE;AACE;AACD;AhB2mNH;AgB1mNE;AhB4mNF;AgB3mNE;AAIE;AACD;AhB0mNH;AgBzmNE;AACE;AACA;AACA;AACE;AACA;AACA;AACE;AADgE;AAGnE;AACC;AACD;AhB2mNL;AACA;AgB1mNI;AACE;AACD;AhB4mNL;AgB3mNI;AAEA;AACA;AhB4mNJ;AgB3mNI;AACE;AAEO;AAAA;AhB6mNb;AgB3mNM;AACE;AACD;AACF;AhB6mNL;AgB5mNI;AACD;AAED;AAEI;AACE;AACD;AhB4mNP;AgB3mNM;AACD;AAEC;AACE;AACD;AhB4mNP;AgB3mNM;AACD;AAEJ;AAED;AhB2mNA;AACA;AACA;AACA;AACA;AACA;AgB3mNA;AACE;AACA;AACA;AACA;AACE;AAED;AAGD;AhB0mNF;AACA;AgB1mNE;AhB4mNF;AgB3mNE;AACE;AACD;AhB6mNH;AgB5mNE;AACD;AAED;AhB6mNA;AACA;AACA;AACA;AACA;AACA;AgB7mNA;AACE;AACD;AAED;AhB8mNA;AACA;AACA;AACA;AACA;AACA;AgB9mNO;AACL;AACD;AhBgnND;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiBv3NA;AjBy3NA;AiBx3NA;AjB03NA;AiBz3NA;AjB23NA;AiB13NA;AjB43NA;AiBt5NA;AjBw5NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiBt5NA;AjBw5NA;AACA;AACA;AACA;AACA;AACA;AiBj5NA;AACA;AAEA;AjBk5NA;AiBj5NA;AAEA;AjBk5NA;AiBj5NA;AAEA;AjBk5NA;AACA;AACA;AACA;AACA;AACA;AiBj5NO;AAEP;AjBk5NA;AACA;AACA;AACA;AACA;AACA;AACA;AiBn5NO;AACL;AACD;AAED;AjBo5NA;AACA;AACA;AACA;AACA;AACA;AiBp5NO;AACL;AAGD;AAED;AjBm5NA;AACA;AACA;AACA;AACA;AACA;AACA;AiBn5NO;AACL;AACA;AACD;AAED;AjBo5NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiBp5NO;AAML;AAAwC;AAAO;AAC/C;AjBm5NF;AiBl5NE;AACE;AACA;AjBo5NJ;AiBl5NI;AACE;AACA;AACA;AjBo5NN;AiBl5NM;AACE;AAOD;AACF;AACF;AjB84NH;AiB74NE;AACD;AAED;AjB84NA;AACA;AACA;AACA;AACA;AACA;AACA;AiB94NO;AACL;AACE;AACD;AjBg5NH;AiB/4NE;AACA;AjBi5NF;AiB94NE;AACE;AACE;AjBg5NN;AiB/4NM;AACE;AACD;AACF;AACF;AjBi5NH;AACA;AiBh5NE;AAKE;AACA;AjB84NJ;AiB34NI;AACE;AjB64NN;AiB54NM;AACE;AACE;AACD;AACF;AACF;AACF;AjB84NH;AiB54NE;AjB84NF;AiB54NE;AAKE;AACA;AACA;AjB04NJ;AiBz4NI;AACE;AjB24NN;AiB14NM;AACE;AACD;AjB44NP;AiB34NM;AACE;AACD;AACF;AACF;AjB64NH;AiB54NE;AACD;AAED;AjB64NA;AACA;AACA;AACA;AACA;AACA;AACA;AiB74NO;AACL;AACD;AAED;AjB84NA;AACA;AACA;AACA;AACA;AACA;AiB94NA;AACE;AjBg5NF;AiB/4NE;AACE;AACE;AACD;AACF;AACC;AACD;AjBi5NH;AiBh5NE;AAEA;AjBi5NF;AiBh5NE;AACE;AACE;AACD;AjBk5NL;AiBj5NI;AACE;AACD;AACC;AACD;AACF;AjBm5NH;AiBl5NE;AACD;AAED;AjBm5NA;AACA;AACA;AACA;AACA;AACA;AiBn5NA;AACE;AjBq5NF;AiBp5NE;AACE;AACD;AjBs5NH;AiBr5NE;AACE;AACE;AACD;AACF;AACC;AACD;AACF;AAED;AjBs5NA;AACA;AACA;AACA;AACA;AACA;AACA;AiBt5NO;AACL;AACD;AAED;AjBu5NA;AACA;AACA;AACA;AACA;AACA;AiBv5NO;AACL;AACA;AACD;AAED;AjBw5NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiBx5NA;AACE;AACA;AACD;AAED;AjBy5NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiBz5NO;AACL;AADsC;AAIxC;AjB05NA;AACA;AACA;AACA;AACA;AACA;AACA;AiB35NA;AACE;AACA;AACD;AAED;AjB45NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiB55NO;AACL;AACA;AjB85NF;AiB75NE;AACE;AACA;AACA;AACE;AACD;AjB+5NL;AiB95NI;AACE;AAEA;AACD;AjB+5NL;AiB75NI;AAIE;AACA;AACD;AAGD;AACA;AjB05NJ;AACA;AiB15NI;AAEsB;AAAO;AAC3B;AAEA;AAGA;AAED;AACF;AjBw5NH;AiBv5NE;AACD;AAED;AjBw5NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiBx5NO;AACL;AAGD;AAED;AjBu5NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiBv5NO;AACL;AACA;AACA;AACD;AjBy5ND;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkBnyOA;AlBqyOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkBnyOA;AlBqyOA;AACA;AACA;AACA;AACA;AACA;AkBnyOO;AACL;AACA;AACE;AACD;AACF;AAED;AlBoyOA;AACA;AACA;AACA;AACA;AACA;AkBpyOO;AACL;AACA;AACA;AACE;AACA;AACA;AACD;AACF;AAED;AlBqyOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkBryOO;AACL;AACA;AlBuyOF;AkBtyOE;AACE;AACD;AlBwyOH;AkBvyOE;AACD;AlByyOD;AACA;AACA;AACA;AACA;AACA;AACA;AmB52OA;AnB82OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmB52OA;AnB82OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmB52OO;AACL;AACD;AnB82OD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBl4OA;ApBo4OA;AoBn4OA;ApBq4OA;AoB35OA;ApB65OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoB35OA;ApB65OA;AACA;AACA;AoBv5OA;AACA;ApBy5OA;AoBv5OA;ApBy5OA;AACA;AACA;AoBv5OA;AAEA;ApBw5OA;AACA;AACA;AACA;AoBv5OA;AAEA;ApBw5OA;AACA;AACA;AACA;AoBv5OA;AAEA;ApBw5OA;AACA;AACA;AACA;AoBv5OA;AAEA;ApBw5OA;AACA;AACA;AACA;AACA;AoBv5OO;AACL;ApBy5OF;AoBx5OE;AACE;AACE;AACD;ApB05OL;AoBz5OI;AACA;AACD;ApB25OH;AoB15OE;AAAO;AAA4B;AAAnC;AACD;AAED;ApB85OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoB95OO;AACL;AACA;AACE;AACD;ApBg6OH;AACA;AoB/5OE;AACA;ApBi6OF;AoBh6OE;AACE;ApBk6OJ;AoBj6OI;AAME;AACA;AACD;ApB85OL;AoB75OI;AACA;AACD;ApB+5OH;AoB95OE;AACD;AAED;ApB+5OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoB/5OO;AACL;AAAO;AAA4B;AAAW;AAAuB;AAArE;AACD;AAED;ApBq6OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBr6OO;AACL;AACE;AACD;AACC;AACE;AACD;ApBu6OL;AoBt6OI;AACD;AACF;AAED;ApBu6OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBv6OO;AACL;AACA;ApBy6OF;AoBx6OE;AACE;AACD;ApB06OH;AoBz6OE;ApB26OF;AoB16OE;AACE;AACD;ApB46OH;AoB36OE;AACE;AACD;AACC;AACD;AACF;AAED;ApB46OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoB56OO;AAAqC;AAAX;AAAW;ApBi7O5C;AoBh7OE;AACE;AACD;ApBk7OH;AoBj7OE;AACE;AACD;AACD;ApBm7OF;AACA;AoBn7OE;AAAgB;AAAG;AAAG;AAAP;ApBy7OjB;AoBx7OE;AAAyB;AAAA;AAAA;AAAA;ApB87O3B;AACA;AoB57OI;AACE;AACE;AACD;AACC;AACE;AACD;ApB87OT;AoB77OQ;AACE;AAAY;AAAS;AAAS;AAAnB;AACZ;ApBm8OT;AoBl8OQ;AACD;AACC;AAA0B;AAAwB;AAClD;AAA0B;AAAwB;ApBw8O1D;AoBv8OQ;AACE;AACD;ApBy8OT;AoBx8OQ;AACE;AACA;AAAY;AAAS;AAAS;AAAnB;AACZ;ApB88OT;AoB78OQ;AACD;AACF;ApB+8OL;AACA;AoB98OI;AACE;AACD;AACF;ApBg9OH;AoB/8OE;AACD;AAED;ApBg9OA;AACA;AACA;AACA;AACA;AACA;AoBh9OA;AACE;AACE;AACD;ApBk9OH;AoBj9OE;AACE;AAAwB;AAG3B;AAED;ApBi9OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBj9OO;AACL;AAAO;AAA4B;AAAnC;AACD;AAED;ApBq9OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBr9OO;AACL;AAAO;AAA4C;AAAnD;AACD;AAED;ApBy9OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBz9OO;AACL;AACD;ApB29OD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqBpuPA;ArBsuPA;AqBruPA;ArBuuPA;AqBtuPA;ArBwuPA;AqBvuPA;ArByuPA;AqBxuPA;ArB0uPA;AqBzuPA;ArB2uPA;AqBhwPA;ArBkwPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqBxvPA;AAEA;ArByvPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqBzvPO;AAEP;ArB0vPA;AACA;AACA;AACA;AACA;AACA;AqB1vPO;AAEP;ArB2vPA;AACA;AACA;AACA;AACA;AACA;AqB5vPO;AACL;AACD;AAED;ArB6vPA;AACA;AACA;AACA;AACA;AqB7vPO;AACL;AACD;AAED;ArB8vPA;AACA;AACA;AACA;AACA;AqB9vPO;AACL;AACA;AACA;AACA;AACA;AALsB;AAQxB;ArB+vPA;AACA;AACA;AACA;AACA;AACA;AACA;AqBhwPO;AACL;AACD;AAED;ArBiwPA;AACA;AACA;AACA;AACA;AqBjwPA;AAEA;ArBkwPA;AACA;AACA;AqBjwPO;AACL;AACD;AAED;ArBkwPA;AACA;AACA;AACA;AACA;AACA;AACA;AqBlwPA;AAAsB;AAAA;AAEtB;ArBqwPA;AACA;AACA;AACA;AACA;AACA;AACA;AqBrwPA;AAA2B;AAEvB;AAAA;AAFuB;AAM3B;ArBswPA;AACA;AACA;AACA;AACA;AACA;AqBtwPA;AAAuC;AAAA;AAGvC;ArBwwPA;AACA;AACA;AACA;AACA;AqBxwPA;AAAwC;AAAA;AAGxC;ArB0wPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqB5wPE;ArB8wPF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqB5wPE;AAA6C;ArB+wP/C;AqB/wP+C;AAAjB;AAAiB;ArBmxP/C;AqBlxPI;ArBoxPJ;AACA;AACA;AACA;AqBlxPI;AAEA;ArBmxPJ;AqBlxPI;AAEA;ArBmxPJ;AqBlxPI;AAEA;ArBmxPJ;AqBlxPI;AAEA;ArBmxPJ;AqBlxPI;AAEA;AACE;AAEgB;AAAA;AAEZ;AACE;AAAiB;AAA4B;AAC9C;AACF;AACJ;AACF;AAED;ArBmxPF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqBrxPI;AACD;AAED;ArBsxPF;AACA;AACA;AACA;AACA;AACA;AqBtxPI;AACA;AACE;AACD;ArBwxPL;AACA;AqBtxPI;AACE;AACD;ArBwxPL;AACA;AqBtxPI;AACE;AACD;ArBwxPL;AACA;AqBtxPI;AACE;AACD;ArBwxPL;AACA;AqBtxPI;AACD;AAED;ArBuxPF;AACA;AACA;AACA;AACA;AACA;AACA;AqBvxPI;AACE;ArByxPN;AqBxxPM;AACE;AACD;AACC;AACD;AACC;AACD;ArB0xPP;AqBzxPM;ArB2xPN;AqBzxPM;ArB2xPN;AqB1xPM;AACE;AACA;AACD;AACC;AACD;ArB4xPP;AqB3xPM;AACD;AACF;AAED;ArB4xPF;AACA;AACA;AACA;AACA;AACA;AqB5xPI;AACD;AAED;ArB6xPF;AACA;AACA;AACA;AACA;AACA;AACA;AqB7xPI;AACE;AACD;AACF;AAED;ArB8xPF;AACA;AACA;AACA;AACA;AACA;AACA;AqB9xPI;AACE;AACD;AACF;AAED;ArB+xPF;AACA;AACA;AACA;AACA;AACA;AACA;AqB/xPI;AACE;AACD;AACF;AAED;ArBgyPF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqBhyPI;AACE;AACD;AACC;AAIA;AACA;AACD;AACF;AAED;ArB8xPF;AACA;AACA;AACA;AACA;AACA;AACA;AqB9xPI;ArBgyPJ;AqB/xPI;AACE;ArBiyPN;AqB/xPM;AACD;AACF;AAED;ArBgyPF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqBhyPI;ArBkyPJ;AqBjyPI;AACE;ArBmyPN;AqBjyPM;AACD;AACF;AAED;ArBkyPF;AACA;AACA;AACA;AACA;AACA;AACA;AqBlyPI;AACA;AACA;AACD;AAED;ArBmyPF;AACA;AACA;AACA;AACA;AACA;AACA;AqBnyPI;AACA;AACA;AACA;AACD;AAED;ArBoyPF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqBpyPI;ArBsyPJ;AqBryPI;AACE;AAG4B;AAAuB;AAGpD;ArBoyPL;AqBnyPI;AACE;AACA;AACA;AACA;AACA;AACA;AACA;ArBqyPN;AqBpyPM;AACE;AACA;ArBsyPR;AqBryPQ;AACE;AACD;ArBuyPT;AqBtyPQ;AACA;AACA;AACD;ArBwyPP;AqBvyPM;AACA;AACA;AACA;AACA;ArByyPN;AqBvyPM;ArByyPN;AqBxyPM;AACD;ArB0yPL;AqBzyPI;AACD;AAED;ArB0yPF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqB1yPI;AACA;AAMA;AAAO;AAAyB;AAAhC;AACD;AAED;ArByyPF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqBzyPI;AAMA;AAAO;AAAuB;AAA9B;AACD;AAED;ArBwyPF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqBxyPI;AAMA;AAAO;AAAuB;AAA9B;AACD;AAED;ArBuyPF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqBvyPI;AAMA;AAAO;AAAuB;AAA9B;AACD;AAED;ArBsyPF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqBtyPI;AAMA;AAAO;AAAwB;AAA/B;AACD;AAED;ArBqyPF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqBryPI;AACE;AACD;ArBuyPL;AqBtyPI;AACD;AAED;ArBuyPF;AACA;AACA;AACA;AACA;AACA;AqBvyPI;ArByyPJ;AqBxyPI;AACE;AACE;AACD;AACC;AACD;AACF;AACC;AACD;AACF;AAED;ArByyPF;AACA;AACA;AACA;AACA;AACA;AACA;AqBzyPI;AACE;AAA+B;AAAuB;AACvD;ArB6yPL;AqB5yPI;AACD;AAED;ArB6yPF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqB7yPI;AACA;AAEA;AACA;AACA;ArB8yPJ;AqB7yPI;AACE;AACD;ArB+yPL;AqB9yPI;AACE;AACD;ArBgzPL;AqB/yPI;AACD;AAED;ArBgzPF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqBhzPI;AACE;AACD;AACC;AACD;AACF;ArBkzPH;AACA;AACA;AqBjzPA;ArBmzPA;AACA;AACA;AACA;AACA;AACA;AACA;AqBrzPA;AAAiC;AAC/B;AAAuB;AADQ;AAAA;AAGjC;ArB0zPA;AACA;AACA;AACA;AACA;AqB1zPA;AACE;AACA;AACE;AACD;ArB4zPH;AqB3zPE;AACD;AAED;ArB4zPA;AACA;AACA;AACA;AACA;AqB5zPA;AACE;AACE;AACD;AACF;AAED;ArB6zPA;AACA;AACA;AACA;AACA;AACA;AqB7zPO;AACL;ArB+zPF;AqB9zPE;AACE;AACD;ArBg0PH;AqBp0PiD;AAAA;AAO/C;ArBi0PF;AqB/zPE;AACE;AACD;ArBi0PH;AACA;AqBh0PE;AACA;AACD;AAED;ArBi0PA;AACA;AACA;AACA;AACA;AACA;AqBj0PO;AACL;AACA;ArBm0PF;AqBl0PE;AACE;ArBo0PJ;AqBn0PI;AACE;AACD;AACC;AACE;AACD;ArBq0PP;AqBp0PM;AACD;AACF;ArBs0PH;AqBp0PE;AACE;AACD;AACC;AACD;ArBs0PH;AqBr0PE;AACD;AAED;ArBs0PA;AACA;AACA;AACA;AACA;AACA;AqBt0PO;AACL;AACA;AACE;AACA;ArBw0PJ;AqBv0PI;AACD;AACF;AAED;ArBw0PA;AACA;AACA;AACA;AACA;AACA;AqBx0PA;AACE;AACA;AACA;AAHiC;AAMnC;AAEA;ArBw0PA;AACA;AACA;AACA;AACA;AACA;AqBv0PA;AAEA;ArBw0PA;AACA;AACA;AqBv0PO;AACL;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;ArBw0PF;AqBv0PE;AACA;AACD;AAED;ArBw0PA;AACA;AACA;AACA;AqBx0PO;AACL;AACD;AAED;ArBy0PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqBz0PO;AACL;AACE;AACD;ArB20PH;AqB10PE;AACE;AACD;AACC;AACE;AACD;ArB40PL;AqB30PI;AACD;AACF;AAED;ArB40PA;AACA;AACA;AACA;AACA;AACA;AqB50PA;AACE;AACE;AACD;ArB80PH;AqB70PE;AAGI;ArB60PN;AqB50PM;AACE;AACD;ArB80PP;AqB70PM;AACD;AAGJ;AAED;ArB40PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqB50PO;AACL;AACE;AACD;ArB80PH;AqB70PE;AACE;AACD;ArB+0PH;AqB90PE;AACE;ArBg1PJ;AqB/0PI;AACE;AACD;ArBi1PL;AqBh1PI;AACE;AACD;ArBk1PL;AqBj1PI;AACD;AACF;AAED;ArBk1PA;AACA;AACA;AACA;AACA;AACA;AqBl1PO;AACL;AACE;AACD;ArBo1PH;AqBn1PE;AACD;AAED;ArBo1PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqBp1PO;AAaL;AACE;AACD;ArB00PH;AqBz0PE;AAAa;AAAc;AAa5B;AAED;ArBg0PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqBh0PO;AAaL;AAAc;AAAc;AAa7B;ArB4yPD;AACA;AACA;AACA;AACA;AACA;AACA;AsB1wRA;AtB4wRA;AsB5xRA;AtB8xRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsB1xRA;AtB4xRA;AACA;AACA;AACA;AACA;AsB1xRO;AACL;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVK;AAYR;AtB4xRD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuB1zRA;AvB4zRA;AuB3zRA;AvB6zRA;AuB90RA;AvBg1RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuB30RA;AvB60RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuB30RO;AAEP;AvB40RA;AACA;AACA;AACA;AACA;AACA;AuB50RA;AAEA;AvB60RA;AACA;AACA;AACA;AACA;AuB50RO;AACL;AvB80RF;AuB70RE;AACE;AACD;AvB+0RH;AuB90RE;AACD;AAED;AvB+0RA;AACA;AACA;AACA;AACA;AACA;AuB/0RA;AACE;AACA;AAGA;AACA;AACA;AvB+0RF;AuB90RE;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEE;AACA;AAEF;AAEA;AvB20RF;AuBz0RE;AACE;AACD;AAGD;AACA;AACA;AvBy0RF;AACA;AuBz0RE;AACE;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzBK;AA2BR;AAED;AvBs0RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuBt0RA;AACE;AACA;AACA;AACE;AACD;AvBw0RH;AuBt0RE;AACE;AACD;AAGD;AACA;AACA;AACA;AvBs0RF;AACA;AuBt0RE;AACD;AAED;AvBu0RA;AACA;AACA;AACA;AACA;AACA;AACA;AuBv0RO;AACL;AACD;AAED;AvBw0RA;AACA;AuBx0RO;AACL;AACD;AvB00RD;AACA;AACA;AACA;AACA;AACA;AACA;AwBn/RA;AxBq/RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBn/RA;AxBq/RA;AACA;AACA;AACA;AACA;AACA;AACA;AwBn/RA;AACE;AACA;AACA;AxBq/RF;AwBp/RE;AACE;AxBs/RJ;AwBp/RI;AxBs/RJ;AwBr/RI;AACE;AACD;AACF;AxBu/RH;AwBt/RE;AACD;AAED;AxBu/RA;AACA;AACA;AACA;AACA;AwBv/RO;AACL;AACE;AACE;AACA;AACA;AACA;AAJqD;AAMxD;AACF;AxBy/RD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyBpjSA;AzBsjSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyBpjSA;AzBsjSA;AACA;AACA;AACA;AACA;AACA;AACA;AyBpjSO;AACL;AzBsjSF;AyBnjSE;AACE;AACD;AzBqjSH;AyBnjSE;AACD;AAED;AzBojSA;AACA;AACA;AACA;AACA;AyBpjSO;AACL;AACE;AACE;AACA;AACA;AACA;AAJ0C;AAM7C;AACF;AzBsjSD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0B7mSA;A1B+mSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0B3mSA;A1B6mSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0B5mSO;AACL;AACE;AACD;A1B8mSH;A0B5mSE;A1B8mSF;A0B7mSE;AACE;A1B+mSJ;A0B9mSI;AACE;AACE;AACE;AACD;AACF;AACF;AACF;A1BgnSH;A0B/mSE;AACD;AAED;A1BgnSA;AACA;AACA;AACA;AACA;A0BhnSO;AACL;AACE;AACE;AACA;AACA;AACA;AAJ8C;AAMjD;AACF;A1BknSD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2BnrSA;A3BqrSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2BnrSA;A3BqrSA;AACA;AACA;AACA;AACA;AACA;A2BnrSO;AACL;AAAgC;AAAA;AACjC;AAED;A3BsrSA;AACA;AACA;AACA;AACA;A2BtrSO;AACL;AACE;AACE;AACA;AACA;AAH8C;AAKjD;AACF;A3BwrSD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4BztSA;A5B2tSA;A4B1tSA;A5B4tSA;A4B3tSA;A5B6tSA;A4B/uSA;A5BivSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4B3uSA;A5B6uSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4B3uSA;AACE;AACA;AACA;AAHe;AAMjB;A5B4uSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4BjvSE;A5BmvSF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4BlvSA;A5BovSA;AACA;AACA;AACA;AACA;AACA;A4BrvSA;AAEA;A5BsvSA;AACA;AACA;AACA;AACA;AACA;AACA;A4BrvSO;AACL;AACE;AAEI;AACE;AACE;AACD;AACF;A5BsvST;A4BrvSQ;AACD;AAGH;AAKD;AACD;AACD;AAED;A5BgvSA;AACA;AACA;AACA;AACA;AACA;A4BhvSO;AACL;AACD;AAED;A5BivSA;AACA;AACA;AACA;AACA;AACA;AACA;A4BjvSO;AACL;AAAmC;AAAsC;AACzE;AACD;AAED;A5BovSA;AACA;AACA;AACA;AACA;AACA;A4BpvSO;AACL;AACA;AACA;AAEA;AACE;AACD;AACF;A5BqvSD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Bh4SA;A7Bk4SA;A6Bj4SA;A7Bm4SA;A6Bl4SA;A7Bo4SA;A6Bn4SA;A7Bq4SA;A6B95SA;A7Bg6SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6B95SA;A7Bg6SA;AACA;AACA;AACA;AACA;A6Bz5SA;A7B25SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Bz5SA;AAEA;A7B05SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6B/5SE;A7Bi6SF;AACA;AACA;AACA;AACA;AACA;AACA;A6Bh6SA;A7Bk6SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Bx6SE;A7B06SF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Bz6SA;A7B26SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6B76SO;AACL;AACA;AACA;AACA;A7B+6SF;A6B76SE;AACA;A7B+6SF;A6B96SE;AACE;AACE;AACD;A7Bg7SL;AACA;A6B/6SI;AACD;AACC;AACA;AACD;AACF;AAED;A7Bg7SA;AACA;AACA;AACA;AACA;AACA;AACA;A6Bh7SO;AACL;AACA;AAKA;AAKA;A7B06SF;A6Bz6SE;AACE;AACA;AAIE;AAAA;AACA;AAAe;AAElB;AACC;AAAgD;AAAA;AAChD;AACD;AACF;AAED;A7B06SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6B16SO;AACL;AACA;A7B46SF;A6B36SE;AACE;AACD;AACF;AAED;A7B46SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6B56SO;AAML;AACA;AACA;A7By6SF;A6Bx6SE;AACE;AACD;AACF;AAED;A7By6SA;AACA;AACA;AACA;AACA;AACA;AACA;A6Bz6SO;AACL;AACA;AACA;AACD;AAED;A7B06SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6B16SO;AACL;AACA;AACD;AAED;A7B26SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6B36SO;AACL;AACD;AAED;A7B46SA;AACA;AACA;AACA;AACA;AACA;AACA;A6B56SO;AACL;A7B86SF;A6B76SE;AACE;AACD;AACC;AACD;AACF;AAED;A7B86SA;AACA;AACA;AACA;AACA;AACA;AACA;A6B96SO;AACL;AACD;AAED;A7B+6SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6B/6SO;AACL;AACA;AACA;AACD;AAED;A7Bg7SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Bh7SA;AACE;AACA;A7Bk7SF;A6Bj7SE;AACE;AACD;AACC;AACD;AACF;AAED;A7Bk7SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Bl7SO;AACL;AACD;AAED;A7Bm7SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Bn7SO;AACL;AAID;AAED;A7Bi7SA;AACA;AACA;AACA;AACA;AACA;A6Bj7SO;AACL;AACA;AACD;AAED;A7Bk7SA;AACA;AACA;AACA;AACA;AACA;A6Bl7SO;AACL;AACD;AAED;A7Bm7SA;AACA;AACA;AACA;AACA;AACA;AACA;A6Bn7SO;AACL;AACD;AAED;A7Bo7SA;AACA;AACA;AACA;AACA;AACA;AACA;A6Bp7SO;AACL;AACA;A7Bs7SF;A6Br7SE;AACE;AACE;AAAO;AAAmC;AAA1C;AACD;AAEA;AACF;A7By7SH;A6Bx7SE;AACD;AAED;A7By7SA;AACA;AACA;AACA;AACA;A6Bz7SO;AACL;AACE;AACE;AAAyB;AAG3B;AAAuC;AAAsB;AAC9D;A7B47SH;A6B37SE;AAAO;AAA8C;AAArD;AACD;AAED;A7B+7SA;AACA;AACA;AACA;AACA;A6B/7SA;AACE;AACA;AACD;AAED;A7Bg8SA;AACA;AACA;AACA;AACA;AACA;AACA;A6Bh8SA;AACE;AAAO;AAAqD;AAA5D;AAID;AAED;A7Bi8SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Bj8SA;AACE;AAIA;AACA;A7Bg8SF;A6B/7SE;AACE;AACA;AACA;AACA;AACA;AACA;AAEA;A7Bg8SJ;A6B/7SI;AACE;AACD;AACF;A7Bi8SH;A6Bh8SE;AACD;AAED;A7Bi8SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Bj8SA;AACE;AACA;A7Bm8SF;A6Bj8SE;AACE;AACE;AACA;AACA;AACA;AACA;AACA;AANiB;AAQpB;A7Bm8SH;A6Bj8SE;AACE;AACA;AACD;A7Bm8SH;A6Bj8SE;AACA;AAGA;A7Bi8SF;A6Bh8SE;AACE;AACA;AACD;AACF;AAED;A7Bi8SA;AACA;AACA;AACA;AACA;AACA;A6Bj8SA;AACE;A7Bm8SF;A6Bl8SE;AACE;AACD;AAGD;AACA;A7Bk8SF;AACA;A6Bl8SE;AACA;AACA;AAAO;AAAkC;AAAzC;AACD;AAED;A7Bs8SA;AACA;AACA;AACA;AACA;AACA;A6Bt8SA;AACE;AACA;A7Bw8SF;A6Bv8SE;AACE;AACE;AACD;A7By8SL;A6Bx8SI;AACD;A7B08SH;A6Bx8SE;AACA;AACD;AAED;A7By8SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Bz8SA;AACE;AACA;A7B28SF;A6B18SE;AACE;AACE;AACD;AACC;AACA;AACA;AAAoC;AAAwB;AAC7D;AACF;A7B88SH;A6B78SE;AACD;AAED;A7B88SA;AACA;AACA;AACA;AACA;AACA;A6B98SA;AACE;A7Bg9SF;A6B/8SE;AACE;AACD;A7Bi9SH;A6Bh9SE;AACD;AAED;A7Bi9SA;AACA;AACA;AACA;AACA;AACA;A6Bj9SO;AACL;AACD;AAED;A7Bk9SA;AACA;AACA;AACA;AACA;AACA;AACA;A6Bl9SO;AACL;AACA;AAAO;AAA4B;AAAnC;AACD;AAED;A7Bs9SA;AACA;AACA;AACA;AACA;AACA;A6Bt9SO;AACL;AACD;AAED;A7Bu9SA;AACA;AACA;AACA;AACA;AACA;A6Bv9SO;AACL;AACD;AAED;A7Bw9SA;AACA;AACA;AACA;A6Bx9SA;AACE;AACA;AACA;A7B09SF;A6B79SyC;AAKrC;AACE;AACD;A7B29SL;A6B19SI;A7B49SJ;A6B39SI;AACE;AACD;AACC;AAAmC;AAAA;AAGpC;AAfoC;A7B6+SzC;A6Bz+SE;AAA2B;A7B4+S7B;A6B5+S6B;AAY1B;AACF;AAED;A7Bk+SA;AACA;AACA;AACA;AACA;A6Bl+SA;AACE;AACE;AACD;A7Bo+SH;A6Bn+SE;AACE;AACD;AACC;AACA;AACA;AACD;AACF;AAED;A7Bo+SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Bp+SO;AACL;A7Bs+SF;A6Bp+SE;AACE;AACD;A7Bs+SH;A6Br+SE;AAIA;AACA;AACA;AACD;AAED;A7Bm+SA;AACA;AACA;AACA;AACA;A6Bn+SO;AACL;AAIA;AAIE;AAAA;AAEH;AAED;A7B89SA;AACA;AACA;AACA;AACA;AACA;A6B99SO;AACL;AACE;AACD;AACF;AAED;A7B+9SA;AACA;AACA;AACA;AACA;AACA;A6B/9SA;AACE;A7Bi+SF;A6B/9SE;AACD;AAED;A7Bg+SA;AACA;A6Bh+SA;AACE;AADuC;AAAA;AAAA;AAGvC;A7Bo+SF;A6Bn+SE;AACE;AACA;AACA;AACA;AACA;AACA;AANK;AAQR;A7Bq+SD;AACA;AACA;AACA;AACA;AACA;AACA;A8B5nUA;A9B8nUA;A8BtnUA;A9BwnUA;A8BhpUA;A9BkpUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8BjoUA;AACO;A9BmoUP;AACA;AACA;AACA;AACA;AACA;AACA;A8BtoUE;A9BwoUF;AACA;AACA;AACA;A8BtoUE;A9BwoUF;AACA;AACA;AACA;AACA;A8BtoUI;AAAO;AAAiF;AAAxF;AAKD;AAED;A9BsoUF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8BtoUI;AAAO;AAAiF;AAAxF;AAKD;AAED;A9BsoUF;AACA;AACA;AACA;AACA;AACA;AACA;A8BtoUI;AAAO;AAA+C;AAAtD;AAKD;AAED;A9BsoUF;AACA;AACA;AACA;AACA;AACA;AACA;A8BtoUI;AAAO;AAA+C;AAAtD;AAKD;AAED;A9BsoUF;AACA;AACA;AACA;AACA;AACA;A8BtoUI;AAAO;AAAqD;AAA5D;AAID;AAED;A9BuoUF;AACA;AACA;AACA;AACA;AACA;A8BvoUI;AAAO;AAAiE;AAAxE;AAID;AAED;A9BwoUF;AACA;AACA;AACA;AACA;AACA;A8BxoUI;AAAO;AAAkF;AAAzF;AAKD;AAED;A9BwoUF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8BxoUI;AAAO;AAAqD;AAA5D;AAID;AAED;A9ByoUF;AACA;AACA;AACA;AACA;AACA;AACA;A8BzoUI;AACD;AAED;A9B0oUF;AACA;AACA;AACA;AACA;AACA;AACA;A8B3oUyD;AAAvB;AAAuB;A9B+oUzD;A8B9oUI;AACE;AACA;AACA;AAAmC;AAAO;AAI3C;A9B+oUL;A8B9oUI;AAAO;AAAkG;AAAzG;AAKD;AAED;A9B8oUF;AACA;AACA;AACA;AACA;AACA;A8B9oUI;AAAO;AAAkG;AAAzG;AAKD;AAED;A9B8oUF;AACA;AACA;AACA;AACA;AACA;A8B9oUI;AAAO;AAAuD;AAA9D;AAID;AAED;A9B+oUF;AACA;AACA;AACA;AACA;AACA;A8B/oUI;AAAO;AAAqE;AAA5E;AAKD;AAED;A9B+oUF;AACA;AACA;AACA;AACA;AACA;A8B/oUI;AAAO;AAAqD;AAA5D;AAID;AAED;A9BgpUF;AACA;AACA;AACA;AACA;AACA;A8BhpUI;AAAO;AAAiD;AAAxD;AAID;AAED;A9BipUF;AACA;AACA;AACA;AACA;AACA;A8BjpUI;AAAO;AAAiF;AAAxF;AAKD;AAED;A9BipUF;AACA;AACA;AACA;AACA;AACA;A8BjpUI;AAAO;AAA6F;AAApG;AAKD;AAED;A9BipUF;AACA;AACA;AACA;AACA;AACA;A8BjpUI;AAAO;AAA8C;AAArD;AAID;AAED;A9BkpUF;AACA;AACA;AACA;AACA;AACA;A8BlpUI;AAAO;AAAsD;AAA7D;AAID;AAED;A9BmpUF;AACA;AACA;AACA;AACA;AACA;A8BnpUI;AAAO;AAAsD;AAA7D;AAID;AAED;A9BopUF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8BppUI;AAAO;AAA2F;AAAlG;AAID;AAED;A9BqpUF;AACA;AACA;AACA;AACA;AACA;AACA;A8BrpUI;AAAO;AAA+D;AAAtE;AAID;AAED;A9BspUF;AACA;AACA;AACA;AACA;AACA;AACA;A8BtpUI;AAAO;AAAgD;AAAvD;AAID;AAED;A9BupUF;AACA;AACA;AACA;AACA;AACA;A8BvpUI;AACD;AAED;A9BwpUF;AACA;AACA;AACA;AACA;AACA;AACA;A8BxpUI;AAAO;AAA6F;AAApG;AAKD;AAED;A9BwpUF;AACA;AACA;AACA;AACA;AACA;A8BxpUI;AAAO;AAA4D;AAAnE;AAID;AAED;A9BypUF;AACA;AACA;AACA;AACA;AACA;A8BzpUI;AAAO;AAAuD;AAA9D;AAID;AAED;A9B0pUF;AACA;AACA;AACA;AACA;AACA;A8B1pUI;AAAO;AAAuD;AAA9D;AAID;AAED;A9B2pUF;AACA;AACA;AACA;AACA;AACA;A8B3pUI;AAAO;AAAkD;AAAzD;AAID;AAED;A9B4pUF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8B5pUI;AAAO;AAAqF;AAA5F;AAID;AAED;A9B6pUF;AACA;AACA;AACA;AACA;AACA;A8B7pUI;AAAO;AAAkE;AAAzE;AAID;AAED;A9B8pUF;AACA;AACA;AACA;AACA;AACA;A8B9pUI;AAAO;AAA4E;AAAnF;AAID;AAED;A9B+pUF;AACA;AACA;AACA;AACA;AACA;A8B/pUI;AAAO;AAAgF;AAAvF;AAMD;AAED;A9B8pUF;AACA;AACA;AACA;AACA;AACA;AACA;A8B9pUI;AACE;AACC;AAFH;AAID;AAED;A9B+pUF;AACA;AACA;AACA;AACA;AACA;A8B/pUI;AACE;AACC;AAFH;AAID;AAED;A9BgqUF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8BhqUI;AACE;AACC;AAFH;AAID;AAED;A9BiqUF;AACA;AACA;AACA;AACA;AACA;A8BjqUI;AACE;AACC;AAFH;AAID;AAED;A9BkqUF;AACA;AACA;AACA;AACA;AACA;A8BlqUI;AACE;AACC;AAFH;AAID;AAED;A9BmqUF;AACA;AACA;AACA;AACA;AACA;A8BnqUI;AACE;AACC;AAFH;AAID;AAED;A9BoqUF;AACA;AACA;AACA;AACA;AACA;A8BpqUI;AACE;AACC;AAFH;AAID;AAED;A9BqqUF;AACA;AACA;AACA;AACA;AACA;A8BrqUI;AACE;AACC;AAFH;AAID;AAED;A9BsqUF;AACA;AACA;AACA;AACA;AACA;A8BtqUI;AACD;AAED;A9BuqUF;AACA;AACA;AACA;AACA;AACA;AACA;A8BvqUI;AACE;AACC;AAFH;AAID;AAED;A9BwqUF;AACA;AACA;AACA;AACA;AACA;A8BxqUI;AACE;AACC;AAFH;AAID;AAED;A9ByqUF;AACA;AACA;AACA;AACA;AACA;AACA;A8BzqUI;AACD;AAED;A9B0qUF;AACA;AACA;AACA;AACA;AACA;AACA;A8B1qUI;AACD;AAED;A9B2qUF;AACA;AACA;AACA;AACA;AACA;AACA;A8B3qUI;AACE;AACC;AAFH;AAID;AAED;A9B4qUF;AACA;AACA;AACA;AACA;AACA;AACA;A8B5qUI;AACD;AAED;A9B6qUF;AACA;AACA;AACA;AACA;AACA;A8B7qUI;AACE;AACC;AAFH;AASD;AAED;A9ByqUF;AACA;AACA;AACA;AACA;AACA;A8BzqUI;AACE;AACC;AAFH;AAID;AAED;A9B0qUF;AACA;AACA;AACA;AACA;AACA;A8B1qUI;AAAO;AAA0D;AAAjE;AAID;AAED;A9B2qUF;AACA;AACA;AACA;AACA;AACA;A8B3qUI;AAAO;AAAmD;AAA1D;AAID;AAED;A9B4qUF;AACA;AACA;AACA;AACA;AACA;A8B5qUI;AACA;AAAO;AAA4C;AAAnD;AAID;AAED;A9B6qUF;AACA;AACA;AACA;AACA;AACA;A8B7qUI;AAAO;AAAiE;AAAxE;AAID;AAED;A9B8qUF;AACA;AACA;AACA;AACA;AACA;A8B9qUI;AACE;AACC;AAFH;AAQD;AAED;A9B2qUF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8B3qUI;AACE;AACC;AAFH;AAQD;AAED;A9BwqUF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8BxqUI;AAAO;AAAoE;AAA3E;AAMD;AAED;A9BuqUF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8BvqUI;AAAO;AAAyG;AAAhH;AAMD;AAED;A9BsqUF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8BtqUI;AAAO;AAAwC;AAA/C;AAID;AAED;A9BuqUF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8BvqUI;AAAO;AAA6E;AAApF;AAMD;AAED;A9BsqUF;AACA;AACA;AACA;AACA;AACA;A8BtqUI;AAAO;AAA2D;AAAlE;AAID;AAED;A9BuqUF;AACA;AACA;AACA;AACA;AACA;A8BvqUI;AACE;AACC;AAFH;AAQD;AAED;A9BoqUF;AACA;AACA;AACA;AACA;AACA;A8BpqUI;AAAO;AAA4D;AAAnE;AAID;AAED;A9BqqUF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8BrqUI;AAAO;AAAsE;AAA7E;AAID;AAED;A9BsqUF;AACA;AACA;AACA;AACA;AACA;A8BtqUI;AAAO;AAA4C;AAAnD;AAID;AAED;A9BuqUF;AACA;AACA;AACA;AACA;AACA;A8BvqUI;AAAO;AAAyE;AAAhF;AAID;AAED;A9BwqUF;AACA;AACA;AACA;AACA;AACA;A8BxqUI;AAAO;AAAwC;AAA/C;AACD;A9B6qUH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+Bh/VA;A/Bk/VA;A+BlgWA;A/BogWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+BhgWA;A/BkgWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+BhgWA;AAEA;A/BigWA;AACA;AACA;AACA;AACA;AACA;A+BhgWA;AAEA;A/BigWA;AACA;AACA;AACA;AACA;A+BhgWO;AACL;A/BkgWF;A+BjgWE;AACE;AACD;AAED;AACA;A/BkgWF;AACA;A+BlgWE;AAKA;AACD;AAED;A/B+/VA;AACA;AACA;AACA;AACA;AACA;A+B//VO;AACL;AAAoB;AAAU;AAAkB;AAA7B;AACpB;AAED;A/BogWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+BpgWO;AACL;AACA;A/BsgWF;A+BrgWE;AACE;AACA;AAAA;A/BwgWJ;A+BvgWI;AACE;A/BygWN;A+BxgWM;AACE;AACD;AACC;AACD;AACC;AACD;AACF;AACC;AACA;AACD;A/B0gWL;A+BzgWI;AAAc;AAAK;AAAO;AAAb;AACd;A/B+gWH;A+B9gWE;AACD;AAED;A/B+gWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+BjhWE;A/BmhWF;AACA;A+BjhWE;AACE;AACA;A/BmhWJ;A+BlhWI;A/BohWJ;A+BjhWI;AACA;A/BmhWJ;A+BlhWI;AACE;AACA;AACA;AACD;A/BohWL;A+BnhWI;A/BqhWJ;A+B/gWI;AAEA;A/BghWJ;A+B/gWI;AACD;AAED;A/BghWF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+BlhWI;AACA;AACA;A/BohWJ;A+BnhWI;AACE;AACD;AACC;AACD;A/BqhWL;A+BphWI;AACD;AAED;A/BqhWF;AACA;AACA;AACA;AACA;AACA;AACA;A+BrhWI;AACA;AACA;AACA;A/BuhWJ;A+BrhWI;AACE;AACA;AAGA;AACA;A/BqhWN;A+BphWM;AACE;AACA;AACA;AACD;AACC;AACD;AACF;A/BshWL;A+BrhWI;AACD;AAED;A/BshWF;AACA;AACA;AACA;AACA;AACA;AACA;A+BthWI;AACA;AACA;A/BwhWJ;A+BthWI;AACE;A/BwhWN;A+BvhWM;AACE;AACA;AACD;AACC;AACD;AACF;A/ByhWL;A+BxhWI;AACD;AAED;A/ByhWF;AACA;AACA;AACA;AACA;AACA;A+BzhWI;AAA0B;AAAA;AAC3B;AAED;A/B4hWF;AACA;AACA;AACA;AACA;AACA;AACA;A+B5hWI;AACA;A/B8hWJ;A+B7hWI;AACE;AACA;A/B+hWN;A+B9hWM;AACE;AACD;A/BgiWP;A+B/hWM;AACE;AACD;AACC;AACD;A/BiiWP;A+BhiWM;AACD;A/BkiWL;A+BjiWI;AACD;A/BmiWH;AACA;AACA;A+BliWA;A/BoiWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+BtiWA;AACE;AACA;AACD;AAED;A/BuiWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+BviWA;AACE;AACA;AACD;A/ByiWD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgCr1WA;AhCu1WA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgCr1WA;AhCu1WA;AACA;AACA;AACA;AgCr1WA;AACE;AACD;AAED;AhCs1WA;AACA;AACA;AACA;AACA;AgCt1WA;AACE;AACD;AAED;AhCu1WA;AACA;AACA;AACA;AACA;AACA;AgCv1WO;AACL;AACD;AAED;AhCw1WA;AACA;AACA;AACA;AACA;AACA;AACA;AgCx1WO;AACL;AACD;AAED;AhCy1WA;AACA;AACA;AACA;AACA;AgCz1WO;AACL;AACD;AAED;AhC01WA;AACA;AACA;AACA;AACA;AACA;AACA;AgC11WO;AACL;AACA;AACD;AAED;AhC21WA;AACA;AACA;AACA;AACA;AACA;AACA;AgC31WO;AACL;AACE;AACD;AhC61WH;AgC51WE;AACD;AAED;AhC61WA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgC71WO;AACL;AACE;AACD;AhC+1WH;AgC91WE;AACE;AACD;AhCg2WH;AgC/1WE;AACD;AAED;AhCg2WA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgCh2WO;AACL;AhCk2WF;AgCn2WoE;AAGhE;AACA;AACE;AACA;AACD;AhCm2WL;AgCl2WI;AACE;AACD;AAV+D;AhC+2WpE;AgC72WE;AAAwC;AhCg3W1C;AgCh3W0C;AASvC;AhC02WH;AgCz2WE;AACD;AAED;AhC02WA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgC12WO;AAA2B;AAEhC;AhC42WF;AgC32WE;AACE;AACD;AhC62WH;AACA;AgC52WE;AACD;AAED;AhC62WA;AACA;AACA;AACA;AACA;AACA;AgC72WO;AACL;AACA;AACE;AACD;AhC+2WH;AgC72WE;AACD;AAED;AhC82WA;AACA;AACA;AACA;AACA;AACA;AgC92WO;AACL;AACE;AACD;AhCg3WH;AgC92WE;AACD;AAED;AhC+2WA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgC/2WO;AACL;AACE;AACD;AhCi3WH;AgCh3WE;AACA;AhCk3WF;AgCj3WE;AACE;AACD;AhCm3WH;AgCl3WE;AACD;AhCo3WD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiChjXA;AjCkjXA;AiCjjXA;AjCmjXA;AiCljXA;AjCojXA;AiCnjXA;AjCqjXA;AiCpjXA;AjCsjXA;AiCrjXA;AjCujXA;AiCtjXA;AjCwjXA;AiCvjXA;AjCyjXA;AiChlXA;AjCklXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiCtkXA;AACA;AAEA;AjCukXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiCtkXO;AAOL;AACA;AjCkkXF;AiC3jXE;AACE;AAEA;AACA;AACA;AACA;AjC4jXJ;AiC3jXI;AACE;AACA;AACD;AjC6jXL;AACA;AiC5jXI;AACE;AACE;AACA;AACD;AACF;AACF;AjC8jXH;AiC7jXE;AACD;AAED;AjC8jXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiC9jXO;AAOL;AjC0jXF;AiCnjXE;AACE;AACA;AACA;AACA;AACA;AACA;AACE;AACA;AACD;AjCqjXL;AACA;AiCpjXI;AACE;AACE;AACA;AACD;AACF;AACF;AjCsjXH;AiCrjXE;AACD;AAED;AjCsjXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiCtjXA;AACE;AjCwjXF;AiCvjXE;AACE;AACD;AjCyjXH;AiCvjXE;AAEA;AjCwjXF;AiCjjXE;AACE;AjCmjXJ;AiCljXI;AACE;AACE;AACD;AjCojXP;AiCnjXM;AACD;AACF;AjCqjXH;AACA;AiCnjXE;AACA;AACA;AAAM;AAAO;AACb;AAEA;AjCsjXF;AiCrjXE;AACE;AACD;AACC;AACA;AAGD;AACC;AACE;AACD;AjCqjXL;AiCpjXI;AACD;AjCsjXH;AiCrjXE;AjCujXF;AiCtjXE;AACE;AACD;AjCwjXH;AiCvjXE;AACD;AAED;AjCwjXA;AACA;AACA;AACA;AACA;AACA;AACA;AiCxjXA;AACE;AACA;AACE;AACD;AjC0jXH;AACA;AiCzjXE;AAAyB;AAAO;AjC6jXlC;AiC5jXE;AACE;AACA;AACD;AjC8jXH;AACA;AiC7jXE;AACD;AAED;AjC8jXA;AACA;AACA;AACA;AACA;AACA;AiC9jXO;AACL;AACD;AAED;AjC+jXA;AACA;AACA;AACA;AACA;AACA;AACA;AiC/jXA;AACE;AACA;AACD;AAED;AjCgkXA;AACA;AiChkXA;AAEA;AjCikXA;AACA;AACA;AACA;AiChkXO;AACL;AACD;AAED;AjCikXA;AACA;AACA;AACA;AACA;AACA;AACA;AiCjkXO;AACL;AACA;AAAY;AAAwB;AACpC;AAEI;AACD;AAEC;AACA;AACD;AAEC;AACA;AACA;AACA;AjCkkXN;AiCjkXM;AACE;AjCmkXR;AiClkXQ;AAAU;AAAO;AAAgB;AAAkB;AACpD;AjCwkXP;AiCvkXM;AACE;AjCykXR;AiCxkXQ;AACA;AACD;AACF;AACJ;AAED;AjCykXA;AACA;AACA;AACA;AACA;AiCzkXO;AACL;AjC2kXF;AiC1kXE;AACE;AACD;AjC4kXH;AiC3kXE;AACA;AACD;AAED;AjC4kXA;AACA;AACA;AACA;AACA;AiC5kXA;AACE;AACE;AACA;AACA;AAHuC;AAK1C;AAED;AjC6kXA;AACA;AACA;AACA;AACA;AACA;AACA;AiC7kXO;AACL;AACD;AAED;AjC8kXA;AACA;AACA;AACA;AACA;AACA;AACA;AiC9kXA;AACE;AjCglXF;AiC/kXE;AACE;AjCilXJ;AiChlXI;AACE;AACD;AACF;AjCklXH;AiCjlXE;AACD;AjCmlXD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkCr6XA;AlCu6XA;AkCt6XA;AlCw6XA;AkCv6XA;AlCy6XA;AkC57XA;AlC87XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkC37XA;AlC67XA;AkCx7XA;AACA;AAEA;AlCy7XA;AkCx7XA;AAEA;AlCy7XA;AACA;AACA;AACA;AACA;AkCx7XO;AACL;AACD;AAED;AlCy7XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkCz7XA;AACE;AACE;AlC27XJ;AkC17XI;AACE;AACD;AACF;AlC47XH;AkC37XE;AACD;AAED;AlC47XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkC57XO;AACL;AACE;AACA;AACD;AlC87XH;AkC77XE;AACE;AACD;AlC+7XH;AkC97XE;AlCg8XF;AkC/7XE;AACE;AlCi8XJ;AkCh8XI;AACE;AACA;AlCk8XN;AkCh8XM;AACE;AACD;AACF;AlCk8XL;AkCj8XI;AACE;AACD;AACF;AlCm8XH;AkCl8XE;AACD;AAED;AlCm8XA;AACA;AACA;AACA;AACA;AACA;AACA;AkCn8XO;AAA6C;AlCs8XpD;AkCp8XE;AACE;AAKD;AACF;AAED;AlCi8XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkCj8XO;AACL;AlCm8XF;AkC97XE;AACE;AAA8B;AAAuB;AAGtD;AACF;AAED;AlC+7XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkC/7XO;AACL;AlCi8XF;AkC57XE;AACE;AACD;AlC87XH;AkC77XE;AACD;AAED;AlC87XA;AACA;AACA;AACA;AACA;AACA;AACA;AkC97XO;AACL;AACE;AACD;AACF;AAED;AlC+7XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkC/7XO;AACL;AACE;AAID;AlC87XH;AkC77XE;AACD;AAED;AlC87XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkC97XO;AACL;AACE;AAID;AlC67XH;AkC57XE;AACD;AAED;AlC67XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkC77XO;AAAsC;AAE3C;AAIA;AAMA;AACD;AAED;AlCs7XA;AACA;AACA;AACA;AACA;AACA;AkCt7XO;AACL;AACE;AACD;AlCw7XH;AkCv7XE;AACE;AACD;AACC;AACD;AACF;AAED;AlCw7XA;AACA;AACA;AACA;AACA;AACA;AkCx7XO;AACL;AACD;AAED;AlCy7XA;AACA;AACA;AACA;AACA;AACA;AkCz7XO;AACL;AACD;AAED;AlC07XA;AACA;AACA;AACA;AACA;AACA;AkC17XO;AACL;AACE;AACD;AlC47XH;AkC37XE;AACD;AAED;AlC47XA;AACA;AACA;AACA;AACA;AACA;AACA;AkC57XO;AACL;AACE;AACD;AlC87XH;AkC77XE;AACE;AACD;AlC+7XH;AkC97XE;AACE;AACD;AlCg8XH;AkC/7XE;AACD;AAED;AlCg8XA;AACA;AACA;AACA;AACA;AACA;AkCh8XO;AACL;AACD;AAED;AlCi8XA;AACA;AACA;AACA;AACA;AACA;AkCj8XO;AACL;AACE;AACD;AlCm8XH;AkCl8XE;AACD;AAED;AlCm8XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkCn8XO;AACL;AAID;AAED;AlCi8XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkCj8XO;AACL;AAAc;AAAqC;AACnD;AAAO;AAAwC;AAA/C;AACD;AAED;AlCu8XA;AACA;AACA;AACA;AACA;AACA;AkCv8XO;AACL;AACE;AACD;AACF;AAED;AlCw8XA;AACA;AACA;AACA;AACA;AACA;AkCx8XO;AACL;AACE;AACD;AlC08XH;AkCx8XE;AACE;AACD;AACF;AlC08XD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmC9zYA;AnCg0YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmC9zYA;AACA;AAEA;AnC+zYA;AACA;AACA;AACA;AACA;AmC9zYA;AACE;AACD;AAED;AnC+zYA;AACA;AACA;AACA;AACA;AACA;AmC/zYO;AACL;AACD;AAED;AnCg0YA;AACA;AACA;AACA;AACA;AACA;AACA;AmCh0YO;AACL;AACD;AAED;AnCi0YA;AACA;AACA;AACA;AACA;AACA;AmCj0YO;AACL;AACD;AAED;AnCk0YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmCl0YO;AACL;AACD;AAED;AnCm0YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmCn0YO;AACL;AACE;AACE;AACD;AACF;AnCq0YH;AmCp0YE;AACD;AAED;AnCq0YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmCr0YO;AACL;AAAO;AAAwB;AAA/B;AACD;AnC00YD;AACA;AACA;AACA;AACA;AACA;AACA;AoCh6YA;ApCk6YA;AoCl7YA;ApCo7YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoC/6YA;AAEA;ApCg7YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoC/6YO;AACL;AAAe;AAA4B;ApCm7Y7C;AoCl7YE;AACE;AACD;ApCo7YH;AoCl7YE;ApCo7YF;AoCn7YE;AACE;AACA;AAGA;AACD;ApCm7YH;AoCl7YE;AACD;ApCo7YD;AACA;AACA;AACA;AACA;AACA;AACA;AqCv+YA;ArCy+YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqCv+YA;ArCy+YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqCv+YO;AAA0D;AAAf;AAAe;ArC4+YjE;AqC3+YE;AACE;AACD;AACC;AACD;AACF;ArC6+YD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsChiZA;AtCkiZA;AsCjiZA;AtCmiZA;AsCliZA;AtCoiZA;AsCniZA;AtCqiZA;AsCpiZA;AtCsiZA;AsCriZA;AtCuiZA;AsCtiZA;AtCwiZA;AsCviZA;AtCyiZA;AsCxiZA;AtC0iZA;AsClkZA;AtCokZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsCxjZA;AtC0jZA;AACA;AsCxjZA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAV+B;AAajC;AtCyjZA;AACA;AACA;AACA;AsCxjZA;AAEA;AtCyjZA;AACA;AACA;AACA;AACA;AACA;AsCxjZA;AAEA;AtCyjZA;AsCxjZA;AAEA;AtCyjZA;AsCxjZA;AAEA;AtCyjZA;AsCxjZA;AAEA;AtCyjZA;AsCxjZA;AAEA;AtCyjZA;AsCxjZA;AAEA;AACE;AAA4B;AAC5B;AAA4B;AAC5B;AAA4B;AAG9B;AtC0jZA;AsCzjZO;AAEP;AtC0jZA;AACA;AACA;AACA;AACA;AACA;AACA;AsC3jZO;AACL;AACD;AAED;AtC4jZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsC5jZO;AACL;AACE;AAAI;AAAmC;AACvC;AACD;AtCgkZH;AsC9jZE;AACD;AAED;AtC+jZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsC/jZO;AACL;AACE;AACD;AtCikZH;AsC/jZE;AAGA;AtC+jZF;AsC9jZE;AACE;AACD;AtCgkZH;AsC9jZE;AAAa;AAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AtCkkZJ;AsC3kZyC;AAavC;AtCikZF;AsChkZE;AACE;AACD;AAGD;AtCgkZF;AACA;AsChkZE;AAIE;AACA;AACD;AAGD;AtC6jZF;AACA;AsC7jZE;AtC+jZF;AsC9jZE;AACE;AACD;AACC;AACD;AACC;AACD;AtCgkZH;AsC/jZE;AtCikZF;AsC9jZE;AtCgkZF;AsC9jZE;AACE;AACD;AtCgkZH;AsC9jZE;AACD;AAED;AtC+jZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsC/jZO;AAKL;AACE;AACD;AtC6jZH;AsC5jZE;AACA;AAEA;AAOA;AACA;AACD;AACD;AtCujZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsCvjZO;AACL;AACA;AACD;AAED;AtCwjZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsCxjZO;AACL;AACD;AAED;AtCyjZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsCzjZO;AACL;AACA;AACA;AACA;AtC2jZF;AsC1jZE;AACE;AACE;AACD;AACF;AtC4jZH;AsC3jZE;AACD;AAED;AtC4jZA;AACA;AACA;AACA;AACA;AACA;AACA;AsC5jZO;AACL;AtC8jZF;AsC7jZE;AACE;AtC+jZJ;AsC9jZI;AACE;AACD;AACC;AACE;AAAW;AAAuB;AAClC;AACD;AACF;AACC;AAAW;AAAuB;AAClC;AACD;AACF;AtCokZH;AsCnkZE;AACD;AAED;AtCokZA;AACA;AACA;AACA;AACA;AACA;AsCpkZO;AACL;AACE;AACD;AtCskZH;AsCrkZE;AAMD;AAED;AtCikZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsCjkZO;AAIL;AADA;AACA;AtCkkZF;AsCjkZE;AtCmkZF;AsC5jZE;AAAqB;AAAuB;AAC5C;AASA;AACD;AAED;AtCujZA;AACA;AACA;AACA;AACA;AACA;AsCvjZO;AACL;AAKA;AACD;AAED;AtCojZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsCpjZO;AACL;AACD;AAED;AtCqjZA;AACA;AACA;AACA;AACA;AACA;AACA;AsCrjZO;AACL;AtCujZF;AsCtjZE;AACE;AACD;AtCwjZH;AsCvjZE;AACD;AAED;AtCwjZA;AACA;AACA;AACA;AACA;AACA;AACA;AsCxjZO;AACL;AtC0jZF;AsCzjZE;AACE;AACD;AtC2jZH;AsC1jZE;AACD;AAED;AtC2jZA;AACA;AACA;AACA;AACA;AACA;AsC3jZO;AACL;AACE;AACD;AtC6jZH;AsC5jZE;AACD;AAED;AtC6jZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsC7jZO;AACL;AACE;AACD;AtC+jZH;AsC9jZE;AACE;AACD;AtCgkZH;AsC/jZE;AACA;AACD;AAED;AtCgkZA;AACA;AACA;AACA;AACA;AACA;AsChkZO;AACL;AACE;AACD;AtCkkZH;AsCjkZE;AACD;AAED;AtCkkZA;AACA;AACA;AACA;AACA;AACA;AACA;AsClkZO;AACL;AACE;AACD;AtCokZH;AsCnkZE;AACE;AACD;AtCqkZH;AsCpkZE;AACD;AAED;AtCqkZA;AACA;AACA;AACA;AACA;AACA;AsCrkZO;AACL;AACA;AACA;AACD;AAED;AtCskZA;AACA;AACA;AACA;AACA;AACA;AsCtkZO;AACL;AtCwkZF;AsCvkZE;AACE;AACD;AtCykZH;AsCxkZE;AACA;AACD;AAED;AtCykZA;AACA;AACA;AACA;AACA;AACA;AACA;AsCzkZA;AACE;AACE;AACD;AtC2kZH;AsC1kZE;AtC4kZF;AsCrkZE;AACD;AAED;AtCskZA;AACA;AACA;AACA;AACA;AACA;AACA;AsCtkZO;AACL;AACA;AACA;AACE;AACD;AtCwkZH;AsCvkZE;AACA;AACA;AACD;AAED;AtCwkZA;AACA;AACA;AACA;AACA;AACA;AACA;AsCxkZO;AACL;AACE;AACD;AtC0kZH;AACA;AsCxkZE;AACE;AACD;AAGD;AACA;AACA;AtCwkZF;AACA;AsCxkZE;AACA;AACA;AAKA;AACA;AtCskZF;AsCjkZE;AACA;AACA;AAMD;AAED;AtC6jZA;AACA;AACA;AACA;AACA;AACA;AACA;AsC7jZO;AACL;AACD;AAED;AtC8jZA;AACA;AACA;AACA;AACA;AACA;AACA;AsC9jZO;AACL;AACE;AACD;AtCgkZH;AsC/jZE;AACE;AACD;AtCikZH;AsChkZE;AACD;AAED;AtCikZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsCjkZO;AACL;AACE;AACD;AtCmkZH;AsClkZE;AACA;AtCokZF;AsCjkZE;AACE;AACD;AtCmkZH;AACA;AsCjkZE;AACE;AACD;AtCmkZH;AACA;AsCjkZE;AACE;AACD;AtCmkZH;AACA;AsCjkZE;AAKD;AAED;AtC8jZA;AACA;AACA;AACA;AACA;AACA;AACA;AsC9jZO;AACL;AACA;AACA;AACD;AAED;AtC+jZA;AACA;AACA;AACA;AACA;AsC/jZO;AACL;AACA;AACA;AAKD;AAED;AtC4jZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsC5jZO;AACL;AACD;AtC8jZD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuCptaA;AvCstaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuCptaA;AvCstaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuCptaO;AACL;AACE;AACD;AvCstaH;AuCrtaE;AACE;AACE;AACD;AACF;AvCutaH;AuCttaE;AACD;AAED;AvCutaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuCvtaO;AACL;AACA;AvCytaF;AuCxtaE;AACE;AvC0taJ;AuCztaI;AACE;AACD;AACC;AACE;AACD;AvC2taP;AuC1taM;AACD;AACF;AvC4taH;AuC3taE;AACE;AACD;AvC6taH;AuC5taE;AACD;AAED;AvC6taA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuC7taO;AACL;AACE;AACE;AACD;AACF;AvC+taH;AuC9taE;AACD;AAED;AvC+taA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuC/taO;AACL;AvCiuaF;AuChuaE;AACE;AACD;AvCkuaH;AuCjuaE;AACD;AAED;AvCkuaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuCluaO;AACL;AACE;AACD;AACF;AAED;AvCmuaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuCnuaO;AACL;AACD;AvCquaD;AACA;AACA;AACA;AACA;AACA;AACA;AwCn2aA;AxCq2aA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwCl2aA;AxCo2aA;AwCn2aA;AxCq2aA;AwCn2aA;AxCq2aA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwCn2aO;AACL;AACA;AACA;AACA;AACE;AAAgB;AADP;AACO;AxCw2apB;AwCv2aM;AACA;AACA;AACD;AxCy2aL;AwCx2aI;AACD;AACF;AxC02aD;AACA;AACA;AACA;AACA;AACA;AACA;AyC34aA;AzC64aA;AyC75aA;AzC+5aA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyC35aA;AACA;AAEA;AzC45aA;AACA;AACA;AACA;AACA;AACA;AyC75aE;AzC+5aF;AACA;AyC75aE;AACE;AACA;AAEA;AzC85aJ;AyC75aI;AAEA;AzC85aJ;AACA;AACA;AACA;AyC75aI;AAEA;AzC85aJ;AyC75aI;AACD;AAED;AzC85aF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyCh6aI;AACD;AAED;AzCi6aF;AACA;AACA;AACA;AACA;AACA;AyCj6aI;AzCm6aJ;AyCl6aI;AACE;AACA;AACD;AzCo6aL;AyCn6aI;AACD;AAED;AzCo6aF;AACA;AACA;AACA;AACA;AACA;AyCp6aI;AACE;AACD;AzCs6aL;AyCr6aI;AAAoB;AAAS;AAAV;AACnB;AACD;AAED;AzCy6aF;AACA;AACA;AACA;AACA;AyCz6aI;AACE;AACD;AzC26aL;AyCz6aI;AACA;AACA;AACA;AzC26aJ;AyC16aI;AAAyB;AzC66a7B;AyC36aM;AACE;AACA;AACD;AACF;AzC66aL;AyC36aI;AACE;AACA;AACD;AACF;AzC66aH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0CrhbA;A1CuhbA;A0CvibA;A1CyibA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0CribA;AACA;AAEA;A1CsibA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0CribO;AACL;A1CuibF;A0CtibE;AACE;AACD;A1CwibH;A0CvibE;AACD;AAED;A1CwibA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0CxibO;AACL;AACA;AACA;AAAO;AAA4B;AAAnC;AACD;AAED;A1C4ibA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0C5ibO;AACL;AACD;AAED;A1C6ibA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0C7ibO;AACL;AACE;AACD;AACC;AACD;AACF;AAED;A1C8ibA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0C9ibO;AAA+C;AAAZ;AAAY;A1CmjbtD;A0CljbE;AACA;AAEA;A1CmjbF;A0CljbE;AACA;AAAY;AAAW;AAAW;AAAvB;A1Cwjbb;A0C9jbsD;AAAA;AAAA;AAAA;AAAA;A1CokbtD;A0CzjbI;AACE;AACD;A1C2jbL;A0C1jbI;A1C4jbJ;A0C3jbI;AACE;AACD;A1C6jbL;A0C5jbI;AACE;AACA;AACD;A1C8jbL;A0C7jbI;AACE;AAEA;A1C8jbN;A0C7jbM;AACE;A1C+jbR;A0C9jbQ;AACE;AAAY;AAAa;AAAa;AAA3B;AACX;AACD;AACF;A1CokbP;A0CnkbM;AACD;AAlCiD;A1CwmbtD;A0C/lbE;AAAyB;A1Ckmb3B;A0Clmb2B;AA0BxB;A1C2kbH;A0C1kbE;AACD;AAED;A1C2kbA;AACA;AACA;AACA;AACA;AACA;A0C3kbO;AACL;AACE;AACE;AACD;A1C6kbL;A0C5kbI;AACD;AACF;A1C8kbD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2CtubA;A3CwubA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2CtubA;A3CwubA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2CtubE;A3CwubF;AACA;A2CtubE;AACE;AAEA;A3CuubJ;AACA;AACA;A2CtubI;AAAmB;AAAO;AACxB;AACA;AACD;AAED;A3CyubJ;AACA;AACA;A2CxubI;AAEA;A3CyubJ;AACA;AACA;A2CxubI;AACD;AAGH;A3CwubA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2C1ubO;AACL;AACE;AACD;AACF;AAED;A3C2ubA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2C3ubO;AAAmC;AAAX;AAAW;A3Cgvb1C;A2C/ubE;AACE;AACA;A3CivbJ;A2ChvbI;AACE;AACD;A3CkvbL;A2CjvbI;AACE;AACD;A3CmvbL;A2ClvbI;AACA;A3CovbJ;A2ClvbI;AACE;AACE;AACD;A3CovbP;A2CnvbM;AACE;AACD;AACF;A3CqvbL;A2CpvbI;AACE;AACE;AACD;A3CsvbP;A2CrvbM;AACE;AACD;AACF;A3CuvbL;A2CtvbI;AACE;AACD;AACF;AACF;AAED;A3CuvbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2CzvbE;A3C2vbF;AACA;A2CzvbE;AACE;AACA;A3C2vbJ;A2C1vbI;AACE;AACA;AACD;AAED;A3C2vbJ;A2C1vbI;AAEA;A3C2vbJ;A2C1vbI;AAEA;A3C2vbJ;A2C1vbI;A3C4vbJ;A2C1vbI;AACE;AACE;AACD;AACF;AACF;AAED;A3C2vbF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2C9vbe;A3Cgwbf;A2C/vbI;AACA;AAEI;AACE;AACD;AACF;AAEC;AACA;AACA;AACE;AACD;AACF;AAEH;AACD;AAED;A3C6vbF;AACA;AACA;A2C7vbI;AACD;A3C+vbH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4Cv6bA;A5Cy6bA;A4Cx6bA;A5C06bA;A4Cz6bA;A5C26bA;A4C16bA;A5C46bA;A4Cp8bA;A5Cs8bA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4Cp8bA;A5Cs8bA;AACA;AACA;A4C97bA;AACA;AACA;AACA;A5Cg8bA;AACA;AACA;AACA;A6Cz8bA;A7C28bA;A6C18bA;A7C48bA;A6C38bA;A7C68bA;A6C58bA;A7C88bA;A6C78bA;A7C+8bA;A6C98bA;A7Cg9bA;A6C5+bA;A7C8+bA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6C5+bA;A7C8+bA;AACA;AACA;AACA;AACA;A6Cp+bA;AACA;AAEA;A7Cq+bA;A6Cp+bA;AAEA;A7Cq+bA;AACA;AACA;AACA;AACA;A6Cp+bA;AAEA;A7Cq+bA;AACA;AACA;A6Cp+bA;AACE;AAAS;AAAA;AACV;AAED;A7Cu+bA;AACA;AACA;AACA;AACA;A6Cv+bA;AAGA;A7Cu+bA;A6Ct+bA;AACA;AAEA;AAAiD;AAM3C;AAAmC;AANQ;AAAA;AAAA;AAAA;AAO/C;A7Cw+bF;A6Cr+bE;AACE;AACA;AAAuC;AAAyB;AACjE;A7Cy+bH;A6Cx+bE;A7C0+bF;A6Cx+bE;AACE;AACE;AACE;AACD;A7C0+bP;A6Cz+bM;AACA;AACA;AACA;A7C2+bN;A6C1+bI;AACE;AACA;A7C4+bN;A6C3+bI;AACE;AACA;AACA;A7C6+bN;A6C5+bI;AACE;AACA;A7C8+bN;A6C7+bI;AACE;AACA;A7C++bN;A6C9+bI;AACE;AACA;A7Cg/bN;A6C/+bI;AACE;AA1BJ;A7C4gcF;A6C/+bE;AAAgB;AAAqC;AACnD;AACA;AACA;AAHmD;AAMrD;AACA;A7Ck/bF;A6Cj/bE;AAAK;AAAO;AACb;AAED;A7Co/bA;AACA;AACA;AACA;A6Cn/bA;AACE;AACA;AACE;AACD;A7Cq/bH;A6Cp/bE;AACE;AACD;A7Cs/bH;A6Cr/bE;AACA;AAIE;AAQF;AAEE;AAA6B;AAC3B;AACA;AAF2B;AAK7B;AAAQ;AAAO;AAChB;AACF;A7C8+bD;AACA;AACA;AACA;AACA;AACA;AACA;A8C3ocA;A9C6ocA;A8C1ocA;A9C4ocA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8C1ocA;A9C4ocA;A8C1ocA;AACE;AACA;AACE;AACD;A9C4ocH;AACA;A8C3ocE;AACE;AACD;AAED;AACA;A9C4ocF;AACA;A8C5ocE;AACE;AACD;AAED;A9C6ocF;AACA;A8C7ocE;AACD;AAED;A9C8ocA;AACA;AACA;AACA;AACA;AACA;A8C9ocO;AACL;AACD;A9CgpcD;AACA;AACA","file":"ww.max.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.bindParser = void 0;\n\nvar _bindExprDefines = require(\"../../extensions/amp-bind/0.1/bind-expr-defines\");\n\nvar _json = require(\"../../src/json\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @fileoverview @suppress {checkTypes, suspiciousCode, uselessCode} */\n\n/* parser generated by jison 0.4.18 */\n\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = function () {\n  var o = function o(k, v, _o, l) {\n    for (_o = _o || {}, l = k.length; l--; _o[k[l]] = v) {\n      ;\n    }\n\n    return _o;\n  },\n      $V0 = [1, 7],\n      $V1 = [1, 10],\n      $V2 = [1, 11],\n      $V3 = [1, 12],\n      $V4 = [1, 13],\n      $V5 = [1, 23],\n      $V6 = [1, 17],\n      $V7 = [1, 18],\n      $V8 = [1, 19],\n      $V9 = [1, 20],\n      $Va = [1, 21],\n      $Vb = [1, 22],\n      $Vc = [1, 26],\n      $Vd = [1, 25],\n      $Ve = [1, 27],\n      $Vf = [1, 28],\n      $Vg = [1, 29],\n      $Vh = [1, 30],\n      $Vi = [1, 31],\n      $Vj = [1, 32],\n      $Vk = [1, 33],\n      $Vl = [1, 34],\n      $Vm = [1, 35],\n      $Vn = [1, 36],\n      $Vo = [1, 37],\n      $Vp = [1, 38],\n      $Vq = [1, 39],\n      $Vr = [1, 41],\n      $Vs = [5, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 33, 38, 39, 49],\n      $Vt = [2, 40],\n      $Vu = [1, 47],\n      $Vv = [1, 52],\n      $Vw = [1, 54],\n      $Vx = [5, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 39, 49],\n      $Vy = [1, 75],\n      $Vz = [33, 49],\n      $VA = [10, 33, 39],\n      $VB = [5, 10, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 39, 49],\n      $VC = [5, 10, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 39, 49],\n      $VD = [5, 10, 19, 20, 25, 26, 27, 28, 33, 39, 49],\n      $VE = [10, 33];\n\n  var parser = {\n    trace: function trace() {},\n    yy: {},\n    symbols_: {\n      \"error\": 2,\n      \"result\": 3,\n      \"expr\": 4,\n      \"EOF\": 5,\n      \"operation\": 6,\n      \"invocation\": 7,\n      \"member_access\": 8,\n      \"(\": 9,\n      \")\": 10,\n      \"variable\": 11,\n      \"literal\": 12,\n      \"!\": 13,\n      \"-\": 14,\n      \"+\": 15,\n      \"*\": 16,\n      \"/\": 17,\n      \"%\": 18,\n      \"&&\": 19,\n      \"||\": 20,\n      \"<=\": 21,\n      \"<\": 22,\n      \">=\": 23,\n      \">\": 24,\n      \"!=\": 25,\n      \"==\": 26,\n      \"?\": 27,\n      \":\": 28,\n      \"NAME\": 29,\n      \"args\": 30,\n      \".\": 31,\n      \"arrow_function\": 32,\n      \",\": 33,\n      \"=>\": 34,\n      \"params\": 35,\n      \"array\": 36,\n      \"member\": 37,\n      \"[\": 38,\n      \"]\": 39,\n      \"primitive\": 40,\n      \"object_literal\": 41,\n      \"array_literal\": 42,\n      \"STRING\": 43,\n      \"NUMBER\": 44,\n      \"TRUE\": 45,\n      \"FALSE\": 46,\n      \"NULL\": 47,\n      \"{\": 48,\n      \"}\": 49,\n      \"object\": 50,\n      \"key_value\": 51,\n      \"key\": 52,\n      \"$accept\": 0,\n      \"$end\": 1\n    },\n    terminals_: {\n      2: \"error\",\n      5: \"EOF\",\n      9: \"(\",\n      10: \")\",\n      13: \"!\",\n      14: \"-\",\n      15: \"+\",\n      16: \"*\",\n      17: \"/\",\n      18: \"%\",\n      19: \"&&\",\n      20: \"||\",\n      21: \"<=\",\n      22: \"<\",\n      23: \">=\",\n      24: \">\",\n      25: \"!=\",\n      26: \"==\",\n      27: \"?\",\n      28: \":\",\n      29: \"NAME\",\n      31: \".\",\n      33: \",\",\n      34: \"=>\",\n      38: \"[\",\n      39: \"]\",\n      43: \"STRING\",\n      44: \"NUMBER\",\n      45: \"TRUE\",\n      46: \"FALSE\",\n      47: \"NULL\",\n      48: \"{\",\n      49: \"}\"\n    },\n    productions_: [0, [3, 2], [3, 1], [4, 1], [4, 1], [4, 1], [4, 3], [4, 1], [4, 1], [6, 2], [6, 2], [6, 2], [6, 3], [6, 3], [6, 3], [6, 3], [6, 3], [6, 3], [6, 3], [6, 3], [6, 3], [6, 3], [6, 3], [6, 3], [6, 3], [6, 5], [7, 2], [7, 4], [7, 6], [7, 8], [32, 4], [32, 3], [32, 5], [35, 3], [35, 3], [30, 2], [30, 3], [8, 2], [37, 2], [37, 3], [11, 1], [12, 1], [12, 1], [12, 1], [40, 1], [40, 1], [40, 1], [40, 1], [40, 1], [42, 2], [42, 3], [42, 4], [36, 1], [36, 3], [41, 2], [41, 3], [41, 4], [50, 1], [50, 3], [51, 3], [52, 1], [52, 1], [52, 3]],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate\n    /* action[1] */\n    , $$\n    /* vstack */\n    , _$\n    /* lstack */\n    ) {\n      /* this == yyval */\n      var $0 = $$.length - 1;\n\n      switch (yystate) {\n        case 1:\n          return $$[$0 - 1];\n          break;\n\n        case 2:\n          return '';\n          break;\n\n        case 3:\n        case 4:\n        case 5:\n        case 7:\n        case 8:\n          this.$ = $$[$0];\n          break;\n\n        case 6:\n          this.$ = $$[$0 - 1];\n          break;\n\n        case 9:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.NOT, [$$[$0]]);\n          break;\n\n        case 10:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.UNARY_MINUS, [$$[$0]]);\n          break;\n\n        case 11:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.UNARY_PLUS, [$$[$0]]);\n          break;\n\n        case 12:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.PLUS, [$$[$0 - 2], $$[$0]]);\n          break;\n\n        case 13:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.MINUS, [$$[$0 - 2], $$[$0]]);\n          break;\n\n        case 14:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.MULTIPLY, [$$[$0 - 2], $$[$0]]);\n          break;\n\n        case 15:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.DIVIDE, [$$[$0 - 2], $$[$0]]);\n          break;\n\n        case 16:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.MODULO, [$$[$0 - 2], $$[$0]]);\n          break;\n\n        case 17:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.LOGICAL_AND, [$$[$0 - 2], $$[$0]]);\n          break;\n\n        case 18:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.LOGICAL_OR, [$$[$0 - 2], $$[$0]]);\n          break;\n\n        case 19:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.LESS_OR_EQUAL, [$$[$0 - 2], $$[$0]]);\n          break;\n\n        case 20:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.LESS, [$$[$0 - 2], $$[$0]]);\n          break;\n\n        case 21:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.GREATER_OR_EQUAL, [$$[$0 - 2], $$[$0]]);\n          break;\n\n        case 22:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.GREATER, [$$[$0 - 2], $$[$0]]);\n          break;\n\n        case 23:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.NOT_EQUAL, [$$[$0 - 2], $$[$0]]);\n          break;\n\n        case 24:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.EQUAL, [$$[$0 - 2], $$[$0]]);\n          break;\n\n        case 25:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.TERNARY, [$$[$0 - 4], $$[$0 - 2], $$[$0]]);\n          break;\n\n        case 26:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.INVOCATION, [undefined, $$[$0]], $$[$0 - 1]);\n          break;\n\n        case 27:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.INVOCATION, [$$[$0 - 3], $$[$0]], $$[$0 - 1]);\n          break;\n\n        case 28:\n          {\n            var array = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.ARRAY, [$$[$0 - 1]]);\n            this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.INVOCATION, [$$[$0 - 5], array], $$[$0 - 3]);\n          }\n          break;\n\n        case 29:\n          {\n            var _array = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.ARRAY, [$$[$0 - 3], $$[$0 - 1]]);\n\n            this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.INVOCATION, [$$[$0 - 7], _array], $$[$0 - 5]);\n          }\n          break;\n\n        case 30:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.ARROW_FUNCTION, [undefined, $$[$0]]);\n          break;\n\n        case 31:\n          var param = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.LITERAL, null, [$$[$0 - 2]]);\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.ARROW_FUNCTION, [param, $$[$0]]);\n          break;\n\n        case 32:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.ARROW_FUNCTION, [$$[$0 - 3], $$[$0]]);\n          break;\n\n        case 33:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.LITERAL, null, [$$[$0 - 2], $$[$0]]);\n          break;\n\n        case 34:\n          this.$ = $$[$0 - 2];\n          this.$.value.push($$[$0]);\n          break;\n\n        case 35:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.ARGS, []);\n          break;\n\n        case 36:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.ARGS, [$$[$0 - 1]]);\n          break;\n\n        case 37:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.MEMBER_ACCESS, [$$[$0 - 1], $$[$0]]);\n          break;\n\n        case 38:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.MEMBER, null, $$[$0]);\n          break;\n\n        case 39:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.MEMBER, [$$[$0 - 1]]);\n          break;\n\n        case 40:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.VARIABLE, null, $$[$0]);\n          break;\n\n        case 41:\n        case 42:\n        case 43:\n        case 61:\n          this.$ = $$[$0];\n          break;\n\n        case 44:\n          // Use JSON.parse() to process special chars e.g. '\\n'.\n          // JSON doesn't recognize single-quotes, so use double-quote in\n          // leading/trailing chars and escape double-quote in the string.\n          var string = yytext.substr(1, yyleng - 2);\n          var parsed = (0, _json.tryParseJson)(\"\\\"\" + string.replace(/\"/g, '\\\\\"') + \"\\\"\");\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.LITERAL, null, parsed || string);\n          break;\n\n        case 45:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.LITERAL, null, Number(yytext));\n          break;\n\n        case 46:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.LITERAL, null, true);\n          break;\n\n        case 47:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.LITERAL, null, false);\n          break;\n\n        case 48:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.LITERAL, null, null);\n          break;\n\n        case 49:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.ARRAY_LITERAL, []);\n          break;\n\n        case 50:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.ARRAY_LITERAL, [$$[$0 - 1]]);\n          break;\n\n        case 51:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.ARRAY_LITERAL, [$$[$0 - 2]]);\n          break;\n\n        case 52:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.ARRAY, [$$[$0]]);\n          break;\n\n        case 53:\n        case 58:\n          this.$ = $$[$0 - 2];\n          this.$.args.push($$[$0]);\n          break;\n\n        case 54:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.OBJECT_LITERAL, []);\n          break;\n\n        case 55:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.OBJECT_LITERAL, [$$[$0 - 1]]);\n          break;\n\n        case 56:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.OBJECT_LITERAL, [$$[$0 - 2]]);\n          break;\n\n        case 57:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.OBJECT, [$$[$0]]);\n          break;\n\n        case 59:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.KEY_VALUE, [$$[$0 - 2], $$[$0]]);\n          break;\n\n        case 60:\n          this.$ = new _bindExprDefines.AstNode(_bindExprDefines.AstNodeType.LITERAL, null, $$[$0]);\n          break;\n\n        case 62:\n          this.$ = $$[$0 - 1];\n          break;\n      }\n    },\n    table: [{\n      3: 1,\n      4: 2,\n      5: [1, 3],\n      6: 4,\n      7: 5,\n      8: 6,\n      9: $V0,\n      11: 8,\n      12: 9,\n      13: $V1,\n      14: $V2,\n      15: $V3,\n      29: $V4,\n      38: $V5,\n      40: 14,\n      41: 15,\n      42: 16,\n      43: $V6,\n      44: $V7,\n      45: $V8,\n      46: $V9,\n      47: $Va,\n      48: $Vb\n    }, {\n      1: [3]\n    }, {\n      5: [1, 24],\n      14: $Vc,\n      15: $Vd,\n      16: $Ve,\n      17: $Vf,\n      18: $Vg,\n      19: $Vh,\n      20: $Vi,\n      21: $Vj,\n      22: $Vk,\n      23: $Vl,\n      24: $Vm,\n      25: $Vn,\n      26: $Vo,\n      27: $Vp,\n      31: $Vq,\n      37: 40,\n      38: $Vr\n    }, {\n      1: [2, 2]\n    }, o($Vs, [2, 3]), o($Vs, [2, 4]), o($Vs, [2, 5]), {\n      4: 42,\n      6: 4,\n      7: 5,\n      8: 6,\n      9: $V0,\n      11: 8,\n      12: 9,\n      13: $V1,\n      14: $V2,\n      15: $V3,\n      29: $V4,\n      38: $V5,\n      40: 14,\n      41: 15,\n      42: 16,\n      43: $V6,\n      44: $V7,\n      45: $V8,\n      46: $V9,\n      47: $Va,\n      48: $Vb\n    }, o($Vs, [2, 7]), o($Vs, [2, 8]), {\n      4: 43,\n      6: 4,\n      7: 5,\n      8: 6,\n      9: $V0,\n      11: 8,\n      12: 9,\n      13: $V1,\n      14: $V2,\n      15: $V3,\n      29: $V4,\n      38: $V5,\n      40: 14,\n      41: 15,\n      42: 16,\n      43: $V6,\n      44: $V7,\n      45: $V8,\n      46: $V9,\n      47: $Va,\n      48: $Vb\n    }, {\n      4: 44,\n      6: 4,\n      7: 5,\n      8: 6,\n      9: $V0,\n      11: 8,\n      12: 9,\n      13: $V1,\n      14: $V2,\n      15: $V3,\n      29: $V4,\n      38: $V5,\n      40: 14,\n      41: 15,\n      42: 16,\n      43: $V6,\n      44: $V7,\n      45: $V8,\n      46: $V9,\n      47: $Va,\n      48: $Vb\n    }, {\n      4: 45,\n      6: 4,\n      7: 5,\n      8: 6,\n      9: $V0,\n      11: 8,\n      12: 9,\n      13: $V1,\n      14: $V2,\n      15: $V3,\n      29: $V4,\n      38: $V5,\n      40: 14,\n      41: 15,\n      42: 16,\n      43: $V6,\n      44: $V7,\n      45: $V8,\n      46: $V9,\n      47: $Va,\n      48: $Vb\n    }, o($Vs, $Vt, {\n      30: 46,\n      9: $Vu\n    }), o($Vs, [2, 41]), o($Vs, [2, 42]), o($Vs, [2, 43]), o($Vs, [2, 44]), o($Vs, [2, 45]), o($Vs, [2, 46]), o($Vs, [2, 47]), o($Vs, [2, 48]), {\n      29: $Vv,\n      38: $Vw,\n      40: 53,\n      43: $V6,\n      44: $V7,\n      45: $V8,\n      46: $V9,\n      47: $Va,\n      49: [1, 48],\n      50: 49,\n      51: 50,\n      52: 51\n    }, {\n      4: 57,\n      6: 4,\n      7: 5,\n      8: 6,\n      9: $V0,\n      11: 8,\n      12: 9,\n      13: $V1,\n      14: $V2,\n      15: $V3,\n      29: $V4,\n      36: 56,\n      38: $V5,\n      39: [1, 55],\n      40: 14,\n      41: 15,\n      42: 16,\n      43: $V6,\n      44: $V7,\n      45: $V8,\n      46: $V9,\n      47: $Va,\n      48: $Vb\n    }, {\n      1: [2, 1]\n    }, {\n      4: 58,\n      6: 4,\n      7: 5,\n      8: 6,\n      9: $V0,\n      11: 8,\n      12: 9,\n      13: $V1,\n      14: $V2,\n      15: $V3,\n      29: $V4,\n      38: $V5,\n      40: 14,\n      41: 15,\n      42: 16,\n      43: $V6,\n      44: $V7,\n      45: $V8,\n      46: $V9,\n      47: $Va,\n      48: $Vb\n    }, {\n      4: 59,\n      6: 4,\n      7: 5,\n      8: 6,\n      9: $V0,\n      11: 8,\n      12: 9,\n      13: $V1,\n      14: $V2,\n      15: $V3,\n      29: $V4,\n      38: $V5,\n      40: 14,\n      41: 15,\n      42: 16,\n      43: $V6,\n      44: $V7,\n      45: $V8,\n      46: $V9,\n      47: $Va,\n      48: $Vb\n    }, {\n      4: 60,\n      6: 4,\n      7: 5,\n      8: 6,\n      9: $V0,\n      11: 8,\n      12: 9,\n      13: $V1,\n      14: $V2,\n      15: $V3,\n      29: $V4,\n      38: $V5,\n      40: 14,\n      41: 15,\n      42: 16,\n      43: $V6,\n      44: $V7,\n      45: $V8,\n      46: $V9,\n      47: $Va,\n      48: $Vb\n    }, {\n      4: 61,\n      6: 4,\n      7: 5,\n      8: 6,\n      9: $V0,\n      11: 8,\n      12: 9,\n      13: $V1,\n      14: $V2,\n      15: $V3,\n      29: $V4,\n      38: $V5,\n      40: 14,\n      41: 15,\n      42: 16,\n      43: $V6,\n      44: $V7,\n      45: $V8,\n      46: $V9,\n      47: $Va,\n      48: $Vb\n    }, {\n      4: 62,\n      6: 4,\n      7: 5,\n      8: 6,\n      9: $V0,\n      11: 8,\n      12: 9,\n      13: $V1,\n      14: $V2,\n      15: $V3,\n      29: $V4,\n      38: $V5,\n      40: 14,\n      41: 15,\n      42: 16,\n      43: $V6,\n      44: $V7,\n      45: $V8,\n      46: $V9,\n      47: $Va,\n      48: $Vb\n    }, {\n      4: 63,\n      6: 4,\n      7: 5,\n      8: 6,\n      9: $V0,\n      11: 8,\n      12: 9,\n      13: $V1,\n      14: $V2,\n      15: $V3,\n      29: $V4,\n      38: $V5,\n      40: 14,\n      41: 15,\n      42: 16,\n      43: $V6,\n      44: $V7,\n      45: $V8,\n      46: $V9,\n      47: $Va,\n      48: $Vb\n    }, {\n      4: 64,\n      6: 4,\n      7: 5,\n      8: 6,\n      9: $V0,\n      11: 8,\n      12: 9,\n      13: $V1,\n      14: $V2,\n      15: $V3,\n      29: $V4,\n      38: $V5,\n      40: 14,\n      41: 15,\n      42: 16,\n      43: $V6,\n      44: $V7,\n      45: $V8,\n      46: $V9,\n      47: $Va,\n      48: $Vb\n    }, {\n      4: 65,\n      6: 4,\n      7: 5,\n      8: 6,\n      9: $V0,\n      11: 8,\n      12: 9,\n      13: $V1,\n      14: $V2,\n      15: $V3,\n      29: $V4,\n      38: $V5,\n      40: 14,\n      41: 15,\n      42: 16,\n      43: $V6,\n      44: $V7,\n      45: $V8,\n      46: $V9,\n      47: $Va,\n      48: $Vb\n    }, {\n      4: 66,\n      6: 4,\n      7: 5,\n      8: 6,\n      9: $V0,\n      11: 8,\n      12: 9,\n      13: $V1,\n      14: $V2,\n      15: $V3,\n      29: $V4,\n      38: $V5,\n      40: 14,\n      41: 15,\n      42: 16,\n      43: $V6,\n      44: $V7,\n      45: $V8,\n      46: $V9,\n      47: $Va,\n      48: $Vb\n    }, {\n      4: 67,\n      6: 4,\n      7: 5,\n      8: 6,\n      9: $V0,\n      11: 8,\n      12: 9,\n      13: $V1,\n      14: $V2,\n      15: $V3,\n      29: $V4,\n      38: $V5,\n      40: 14,\n      41: 15,\n      42: 16,\n      43: $V6,\n      44: $V7,\n      45: $V8,\n      46: $V9,\n      47: $Va,\n      48: $Vb\n    }, {\n      4: 68,\n      6: 4,\n      7: 5,\n      8: 6,\n      9: $V0,\n      11: 8,\n      12: 9,\n      13: $V1,\n      14: $V2,\n      15: $V3,\n      29: $V4,\n      38: $V5,\n      40: 14,\n      41: 15,\n      42: 16,\n      43: $V6,\n      44: $V7,\n      45: $V8,\n      46: $V9,\n      47: $Va,\n      48: $Vb\n    }, {\n      4: 69,\n      6: 4,\n      7: 5,\n      8: 6,\n      9: $V0,\n      11: 8,\n      12: 9,\n      13: $V1,\n      14: $V2,\n      15: $V3,\n      29: $V4,\n      38: $V5,\n      40: 14,\n      41: 15,\n      42: 16,\n      43: $V6,\n      44: $V7,\n      45: $V8,\n      46: $V9,\n      47: $Va,\n      48: $Vb\n    }, {\n      4: 70,\n      6: 4,\n      7: 5,\n      8: 6,\n      9: $V0,\n      11: 8,\n      12: 9,\n      13: $V1,\n      14: $V2,\n      15: $V3,\n      29: $V4,\n      38: $V5,\n      40: 14,\n      41: 15,\n      42: 16,\n      43: $V6,\n      44: $V7,\n      45: $V8,\n      46: $V9,\n      47: $Va,\n      48: $Vb\n    }, {\n      4: 71,\n      6: 4,\n      7: 5,\n      8: 6,\n      9: $V0,\n      11: 8,\n      12: 9,\n      13: $V1,\n      14: $V2,\n      15: $V3,\n      29: $V4,\n      38: $V5,\n      40: 14,\n      41: 15,\n      42: 16,\n      43: $V6,\n      44: $V7,\n      45: $V8,\n      46: $V9,\n      47: $Va,\n      48: $Vb\n    }, {\n      29: [1, 72]\n    }, o($Vs, [2, 37]), {\n      4: 73,\n      6: 4,\n      7: 5,\n      8: 6,\n      9: $V0,\n      11: 8,\n      12: 9,\n      13: $V1,\n      14: $V2,\n      15: $V3,\n      29: $V4,\n      38: $V5,\n      40: 14,\n      41: 15,\n      42: 16,\n      43: $V6,\n      44: $V7,\n      45: $V8,\n      46: $V9,\n      47: $Va,\n      48: $Vb\n    }, {\n      10: [1, 74],\n      14: $Vc,\n      15: $Vd,\n      16: $Ve,\n      17: $Vf,\n      18: $Vg,\n      19: $Vh,\n      20: $Vi,\n      21: $Vj,\n      22: $Vk,\n      23: $Vl,\n      24: $Vm,\n      25: $Vn,\n      26: $Vo,\n      27: $Vp,\n      31: $Vq,\n      37: 40,\n      38: $Vr\n    }, o($Vx, [2, 9], {\n      37: 40,\n      31: $Vq,\n      38: $Vr\n    }), o($Vx, [2, 10], {\n      37: 40,\n      31: $Vq,\n      38: $Vr\n    }), o($Vx, [2, 11], {\n      37: 40,\n      31: $Vq,\n      38: $Vr\n    }), o($Vs, [2, 26]), {\n      4: 57,\n      6: 4,\n      7: 5,\n      8: 6,\n      9: $V0,\n      10: $Vy,\n      11: 8,\n      12: 9,\n      13: $V1,\n      14: $V2,\n      15: $V3,\n      29: $V4,\n      36: 76,\n      38: $V5,\n      40: 14,\n      41: 15,\n      42: 16,\n      43: $V6,\n      44: $V7,\n      45: $V8,\n      46: $V9,\n      47: $Va,\n      48: $Vb\n    }, o($Vs, [2, 54]), {\n      33: [1, 78],\n      49: [1, 77]\n    }, o($Vz, [2, 57]), {\n      28: [1, 79]\n    }, {\n      28: [2, 60]\n    }, {\n      28: [2, 61]\n    }, {\n      4: 80,\n      6: 4,\n      7: 5,\n      8: 6,\n      9: $V0,\n      11: 8,\n      12: 9,\n      13: $V1,\n      14: $V2,\n      15: $V3,\n      29: $V4,\n      38: $V5,\n      40: 14,\n      41: 15,\n      42: 16,\n      43: $V6,\n      44: $V7,\n      45: $V8,\n      46: $V9,\n      47: $Va,\n      48: $Vb\n    }, o($Vs, [2, 49]), {\n      33: [1, 82],\n      39: [1, 81]\n    }, o($VA, [2, 52], {\n      37: 40,\n      14: $Vc,\n      15: $Vd,\n      16: $Ve,\n      17: $Vf,\n      18: $Vg,\n      19: $Vh,\n      20: $Vi,\n      21: $Vj,\n      22: $Vk,\n      23: $Vl,\n      24: $Vm,\n      25: $Vn,\n      26: $Vo,\n      27: $Vp,\n      31: $Vq,\n      38: $Vr\n    }), o($VB, [2, 12], {\n      37: 40,\n      16: $Ve,\n      17: $Vf,\n      18: $Vg,\n      31: $Vq,\n      38: $Vr\n    }), o($VB, [2, 13], {\n      37: 40,\n      16: $Ve,\n      17: $Vf,\n      18: $Vg,\n      31: $Vq,\n      38: $Vr\n    }), o($Vx, [2, 14], {\n      37: 40,\n      31: $Vq,\n      38: $Vr\n    }), o($Vx, [2, 15], {\n      37: 40,\n      31: $Vq,\n      38: $Vr\n    }), o($Vx, [2, 16], {\n      37: 40,\n      31: $Vq,\n      38: $Vr\n    }), o([5, 10, 19, 20, 27, 28, 33, 39, 49], [2, 17], {\n      37: 40,\n      14: $Vc,\n      15: $Vd,\n      16: $Ve,\n      17: $Vf,\n      18: $Vg,\n      21: $Vj,\n      22: $Vk,\n      23: $Vl,\n      24: $Vm,\n      25: $Vn,\n      26: $Vo,\n      31: $Vq,\n      38: $Vr\n    }), o([5, 10, 20, 27, 28, 33, 39, 49], [2, 18], {\n      37: 40,\n      14: $Vc,\n      15: $Vd,\n      16: $Ve,\n      17: $Vf,\n      18: $Vg,\n      19: $Vh,\n      21: $Vj,\n      22: $Vk,\n      23: $Vl,\n      24: $Vm,\n      25: $Vn,\n      26: $Vo,\n      31: $Vq,\n      38: $Vr\n    }), o($VC, [2, 19], {\n      37: 40,\n      14: $Vc,\n      15: $Vd,\n      16: $Ve,\n      17: $Vf,\n      18: $Vg,\n      31: $Vq,\n      38: $Vr\n    }), o($VC, [2, 20], {\n      37: 40,\n      14: $Vc,\n      15: $Vd,\n      16: $Ve,\n      17: $Vf,\n      18: $Vg,\n      31: $Vq,\n      38: $Vr\n    }), o($VC, [2, 21], {\n      37: 40,\n      14: $Vc,\n      15: $Vd,\n      16: $Ve,\n      17: $Vf,\n      18: $Vg,\n      31: $Vq,\n      38: $Vr\n    }), o($VC, [2, 22], {\n      37: 40,\n      14: $Vc,\n      15: $Vd,\n      16: $Ve,\n      17: $Vf,\n      18: $Vg,\n      31: $Vq,\n      38: $Vr\n    }), o($VD, [2, 23], {\n      37: 40,\n      14: $Vc,\n      15: $Vd,\n      16: $Ve,\n      17: $Vf,\n      18: $Vg,\n      21: $Vj,\n      22: $Vk,\n      23: $Vl,\n      24: $Vm,\n      31: $Vq,\n      38: $Vr\n    }), o($VD, [2, 24], {\n      37: 40,\n      14: $Vc,\n      15: $Vd,\n      16: $Ve,\n      17: $Vf,\n      18: $Vg,\n      21: $Vj,\n      22: $Vk,\n      23: $Vl,\n      24: $Vm,\n      31: $Vq,\n      38: $Vr\n    }), {\n      14: $Vc,\n      15: $Vd,\n      16: $Ve,\n      17: $Vf,\n      18: $Vg,\n      19: $Vh,\n      20: $Vi,\n      21: $Vj,\n      22: $Vk,\n      23: $Vl,\n      24: $Vm,\n      25: $Vn,\n      26: $Vo,\n      27: $Vp,\n      28: [1, 83],\n      31: $Vq,\n      37: 40,\n      38: $Vr\n    }, o($Vs, [2, 38], {\n      30: 84,\n      9: [1, 85]\n    }), {\n      14: $Vc,\n      15: $Vd,\n      16: $Ve,\n      17: $Vf,\n      18: $Vg,\n      19: $Vh,\n      20: $Vi,\n      21: $Vj,\n      22: $Vk,\n      23: $Vl,\n      24: $Vm,\n      25: $Vn,\n      26: $Vo,\n      27: $Vp,\n      31: $Vq,\n      37: 40,\n      38: $Vr,\n      39: [1, 86]\n    }, o($Vs, [2, 6]), o($Vs, [2, 35]), {\n      10: [1, 87],\n      33: [1, 88]\n    }, o($Vs, [2, 55]), {\n      29: $Vv,\n      38: $Vw,\n      40: 53,\n      43: $V6,\n      44: $V7,\n      45: $V8,\n      46: $V9,\n      47: $Va,\n      49: [1, 89],\n      51: 90,\n      52: 51\n    }, {\n      4: 91,\n      6: 4,\n      7: 5,\n      8: 6,\n      9: $V0,\n      11: 8,\n      12: 9,\n      13: $V1,\n      14: $V2,\n      15: $V3,\n      29: $V4,\n      38: $V5,\n      40: 14,\n      41: 15,\n      42: 16,\n      43: $V6,\n      44: $V7,\n      45: $V8,\n      46: $V9,\n      47: $Va,\n      48: $Vb\n    }, {\n      14: $Vc,\n      15: $Vd,\n      16: $Ve,\n      17: $Vf,\n      18: $Vg,\n      19: $Vh,\n      20: $Vi,\n      21: $Vj,\n      22: $Vk,\n      23: $Vl,\n      24: $Vm,\n      25: $Vn,\n      26: $Vo,\n      27: $Vp,\n      31: $Vq,\n      37: 40,\n      38: $Vr,\n      39: [1, 92]\n    }, o($Vs, [2, 50]), {\n      4: 94,\n      6: 4,\n      7: 5,\n      8: 6,\n      9: $V0,\n      11: 8,\n      12: 9,\n      13: $V1,\n      14: $V2,\n      15: $V3,\n      29: $V4,\n      38: $V5,\n      39: [1, 93],\n      40: 14,\n      41: 15,\n      42: 16,\n      43: $V6,\n      44: $V7,\n      45: $V8,\n      46: $V9,\n      47: $Va,\n      48: $Vb\n    }, {\n      4: 95,\n      6: 4,\n      7: 5,\n      8: 6,\n      9: $V0,\n      11: 8,\n      12: 9,\n      13: $V1,\n      14: $V2,\n      15: $V3,\n      29: $V4,\n      38: $V5,\n      40: 14,\n      41: 15,\n      42: 16,\n      43: $V6,\n      44: $V7,\n      45: $V8,\n      46: $V9,\n      47: $Va,\n      48: $Vb\n    }, o($Vs, [2, 27]), {\n      4: 57,\n      6: 4,\n      7: 5,\n      8: 6,\n      9: [1, 97],\n      10: $Vy,\n      11: 8,\n      12: 9,\n      13: $V1,\n      14: $V2,\n      15: $V3,\n      29: [1, 98],\n      32: 96,\n      36: 76,\n      38: $V5,\n      40: 14,\n      41: 15,\n      42: 16,\n      43: $V6,\n      44: $V7,\n      45: $V8,\n      46: $V9,\n      47: $Va,\n      48: $Vb\n    }, o($Vs, [2, 39]), o($Vs, [2, 36]), {\n      4: 94,\n      6: 4,\n      7: 5,\n      8: 6,\n      9: $V0,\n      11: 8,\n      12: 9,\n      13: $V1,\n      14: $V2,\n      15: $V3,\n      29: $V4,\n      38: $V5,\n      40: 14,\n      41: 15,\n      42: 16,\n      43: $V6,\n      44: $V7,\n      45: $V8,\n      46: $V9,\n      47: $Va,\n      48: $Vb\n    }, o($Vs, [2, 56]), o($Vz, [2, 58]), o($Vz, [2, 59], {\n      37: 40,\n      14: $Vc,\n      15: $Vd,\n      16: $Ve,\n      17: $Vf,\n      18: $Vg,\n      19: $Vh,\n      20: $Vi,\n      21: $Vj,\n      22: $Vk,\n      23: $Vl,\n      24: $Vm,\n      25: $Vn,\n      26: $Vo,\n      27: $Vp,\n      31: $Vq,\n      38: $Vr\n    }), {\n      28: [2, 62]\n    }, o($Vs, [2, 51]), o($VA, [2, 53], {\n      37: 40,\n      14: $Vc,\n      15: $Vd,\n      16: $Ve,\n      17: $Vf,\n      18: $Vg,\n      19: $Vh,\n      20: $Vi,\n      21: $Vj,\n      22: $Vk,\n      23: $Vl,\n      24: $Vm,\n      25: $Vn,\n      26: $Vo,\n      27: $Vp,\n      31: $Vq,\n      38: $Vr\n    }), o([5, 10, 28, 33, 39, 49], [2, 25], {\n      37: 40,\n      14: $Vc,\n      15: $Vd,\n      16: $Ve,\n      17: $Vf,\n      18: $Vg,\n      19: $Vh,\n      20: $Vi,\n      21: $Vj,\n      22: $Vk,\n      23: $Vl,\n      24: $Vm,\n      25: $Vn,\n      26: $Vo,\n      27: $Vp,\n      31: $Vq,\n      38: $Vr\n    }), {\n      10: [1, 99],\n      33: [1, 100]\n    }, {\n      4: 42,\n      6: 4,\n      7: 5,\n      8: 6,\n      9: $V0,\n      10: [1, 101],\n      11: 8,\n      12: 9,\n      13: $V1,\n      14: $V2,\n      15: $V3,\n      29: [1, 103],\n      35: 102,\n      38: $V5,\n      40: 14,\n      41: 15,\n      42: 16,\n      43: $V6,\n      44: $V7,\n      45: $V8,\n      46: $V9,\n      47: $Va,\n      48: $Vb\n    }, o([10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 33, 38], $Vt, {\n      30: 46,\n      9: $Vu,\n      34: [1, 104]\n    }), o($Vs, [2, 28]), {\n      4: 105,\n      6: 4,\n      7: 5,\n      8: 6,\n      9: $V0,\n      11: 8,\n      12: 9,\n      13: $V1,\n      14: $V2,\n      15: $V3,\n      29: $V4,\n      38: $V5,\n      40: 14,\n      41: 15,\n      42: 16,\n      43: $V6,\n      44: $V7,\n      45: $V8,\n      46: $V9,\n      47: $Va,\n      48: $Vb\n    }, {\n      34: [1, 106]\n    }, {\n      10: [1, 107],\n      33: [1, 108]\n    }, o([10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 38], $Vt, {\n      30: 46,\n      9: $Vu,\n      33: [1, 109]\n    }), {\n      4: 110,\n      6: 4,\n      7: 5,\n      8: 6,\n      9: $V0,\n      11: 8,\n      12: 9,\n      13: $V1,\n      14: $V2,\n      15: $V3,\n      29: $V4,\n      38: $V5,\n      40: 14,\n      41: 15,\n      42: 16,\n      43: $V6,\n      44: $V7,\n      45: $V8,\n      46: $V9,\n      47: $Va,\n      48: $Vb\n    }, {\n      10: [1, 111],\n      14: $Vc,\n      15: $Vd,\n      16: $Ve,\n      17: $Vf,\n      18: $Vg,\n      19: $Vh,\n      20: $Vi,\n      21: $Vj,\n      22: $Vk,\n      23: $Vl,\n      24: $Vm,\n      25: $Vn,\n      26: $Vo,\n      27: $Vp,\n      31: $Vq,\n      37: 40,\n      38: $Vr\n    }, {\n      4: 112,\n      6: 4,\n      7: 5,\n      8: 6,\n      9: $V0,\n      11: 8,\n      12: 9,\n      13: $V1,\n      14: $V2,\n      15: $V3,\n      29: $V4,\n      38: $V5,\n      40: 14,\n      41: 15,\n      42: 16,\n      43: $V6,\n      44: $V7,\n      45: $V8,\n      46: $V9,\n      47: $Va,\n      48: $Vb\n    }, {\n      34: [1, 113]\n    }, {\n      29: [1, 114]\n    }, {\n      29: [1, 115]\n    }, o($VE, [2, 31], {\n      37: 40,\n      14: $Vc,\n      15: $Vd,\n      16: $Ve,\n      17: $Vf,\n      18: $Vg,\n      19: $Vh,\n      20: $Vi,\n      21: $Vj,\n      22: $Vk,\n      23: $Vl,\n      24: $Vm,\n      25: $Vn,\n      26: $Vo,\n      27: $Vp,\n      31: $Vq,\n      38: $Vr\n    }), o($Vs, [2, 29]), o($VE, [2, 30], {\n      37: 40,\n      14: $Vc,\n      15: $Vd,\n      16: $Ve,\n      17: $Vf,\n      18: $Vg,\n      19: $Vh,\n      20: $Vi,\n      21: $Vj,\n      22: $Vk,\n      23: $Vl,\n      24: $Vm,\n      25: $Vn,\n      26: $Vo,\n      27: $Vp,\n      31: $Vq,\n      38: $Vr\n    }), {\n      4: 116,\n      6: 4,\n      7: 5,\n      8: 6,\n      9: $V0,\n      11: 8,\n      12: 9,\n      13: $V1,\n      14: $V2,\n      15: $V3,\n      29: $V4,\n      38: $V5,\n      40: 14,\n      41: 15,\n      42: 16,\n      43: $V6,\n      44: $V7,\n      45: $V8,\n      46: $V9,\n      47: $Va,\n      48: $Vb\n    }, o($VE, [2, 34]), o($VE, [2, 33]), o($VE, [2, 32], {\n      37: 40,\n      14: $Vc,\n      15: $Vd,\n      16: $Ve,\n      17: $Vf,\n      18: $Vg,\n      19: $Vh,\n      20: $Vi,\n      21: $Vj,\n      22: $Vk,\n      23: $Vl,\n      24: $Vm,\n      25: $Vn,\n      26: $Vo,\n      27: $Vp,\n      31: $Vq,\n      38: $Vr\n    })],\n    defaultActions: {\n      3: [2, 2],\n      24: [2, 1],\n      52: [2, 60],\n      53: [2, 61],\n      92: [2, 62]\n    },\n    parseError: function parseError(str, hash) {\n      if (hash.recoverable) {\n        this.trace(str);\n      } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n      }\n    },\n    parse: function parse(input) {\n      var self = this,\n          stack = [0],\n          tstack = [],\n          vstack = [null],\n          lstack = [],\n          table = this.table,\n          yytext = '',\n          yylineno = 0,\n          yyleng = 0,\n          recovering = 0,\n          TERROR = 2,\n          EOF = 1;\n      var args = lstack.slice.call(arguments, 1);\n      var lexer = Object.create(this.lexer);\n      var sharedState = {\n        yy: {}\n      };\n\n      for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n          sharedState.yy[k] = this.yy[k];\n        }\n      }\n\n      lexer.setInput(input, sharedState.yy);\n      sharedState.yy.lexer = lexer;\n      sharedState.yy.parser = this;\n\n      if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n      }\n\n      var yyloc = lexer.yylloc;\n      lstack.push(yyloc);\n      var ranges = lexer.options && lexer.options.ranges;\n\n      if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n      } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n      }\n\n      function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n      }\n\n      var lex = function lex() {\n        var token;\n        token = lexer.lex() || EOF;\n\n        if (typeof token !== 'number') {\n          token = self.symbols_[token] || token;\n        }\n\n        return token;\n      };\n\n      var symbol,\n          preErrorSymbol,\n          state,\n          action,\n          a,\n          r,\n          yyval = {},\n          p,\n          len,\n          newState,\n          expected;\n\n      while (true) {\n        state = stack[stack.length - 1];\n\n        if (this.defaultActions[state]) {\n          action = this.defaultActions[state];\n        } else {\n          if (symbol === null || typeof symbol == 'undefined') {\n            symbol = lex();\n          }\n\n          action = table[state] && table[state][symbol];\n        }\n\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\n          var errStr = '';\n          expected = [];\n\n          for (p in table[state]) {\n            if (this.terminals_[p] && p > TERROR) {\n              expected.push('\\'' + this.terminals_[p] + '\\'');\n            }\n          }\n\n          if (lexer.showPosition) {\n            errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n          } else {\n            errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n          }\n\n          this.parseError(errStr, {\n            text: lexer.match,\n            token: this.terminals_[symbol] || symbol,\n            line: lexer.yylineno,\n            loc: yyloc,\n            expected: expected\n          });\n        }\n\n        if (action[0] instanceof Array && action.length > 1) {\n          throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n\n        switch (action[0]) {\n          case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n\n            if (!preErrorSymbol) {\n              yyleng = lexer.yyleng;\n              yytext = lexer.yytext;\n              yylineno = lexer.yylineno;\n              yyloc = lexer.yylloc;\n\n              if (recovering > 0) {\n                recovering--;\n              }\n            } else {\n              symbol = preErrorSymbol;\n              preErrorSymbol = null;\n            }\n\n            break;\n\n          case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n              first_line: lstack[lstack.length - (len || 1)].first_line,\n              last_line: lstack[lstack.length - 1].last_line,\n              first_column: lstack[lstack.length - (len || 1)].first_column,\n              last_column: lstack[lstack.length - 1].last_column\n            };\n\n            if (ranges) {\n              yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n            }\n\n            r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\n\n            if (typeof r !== 'undefined') {\n              return r;\n            }\n\n            if (len) {\n              stack = stack.slice(0, -1 * len * 2);\n              vstack = vstack.slice(0, -1 * len);\n              lstack = lstack.slice(0, -1 * len);\n            }\n\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n\n          case 3:\n            return true;\n        }\n      }\n\n      return true;\n    }\n  };\n  /* generated by jison-lex 0.3.4 */\n\n  var lexer = function () {\n    var lexer = {\n      EOF: 1,\n      parseError: function parseError(str, hash) {\n        if (this.yy.parser) {\n          this.yy.parser.parseError(str, hash);\n        } else {\n          throw new Error(str);\n        }\n      },\n      // resets the lexer, sets new input\n      setInput: function setInput(input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n          first_line: 1,\n          first_column: 0,\n          last_line: 1,\n          last_column: 0\n        };\n\n        if (this.options.ranges) {\n          this.yylloc.range = [0, 0];\n        }\n\n        this.offset = 0;\n        return this;\n      },\n      // consumes and returns one char from the input\n      input: function input() {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n\n        if (lines) {\n          this.yylineno++;\n          this.yylloc.last_line++;\n        } else {\n          this.yylloc.last_column++;\n        }\n\n        if (this.options.ranges) {\n          this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n      },\n      // unshifts one char (or a string) into the input\n      unput: function unput(ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len); //this.yyleng -= len;\n\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n          this.yylineno -= lines.length - 1;\n        }\n\n        var r = this.yylloc.range;\n        this.yylloc = {\n          first_line: this.yylloc.first_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.first_column,\n          last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n          this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n\n        this.yyleng = this.yytext.length;\n        return this;\n      },\n      // When called from action, caches matched text and appends it on next action\n      more: function more() {\n        this._more = true;\n        return this;\n      },\n      // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n      reject: function reject() {\n        if (this.options.backtrack_lexer) {\n          this._backtrack = true;\n        } else {\n          return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n\n        return this;\n      },\n      // retain first n characters of the match\n      less: function less(n) {\n        this.unput(this.match.slice(n));\n      },\n      // displays already matched input, i.e. for error messages\n      pastInput: function pastInput() {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, \"\");\n      },\n      // displays upcoming input, i.e. for error messages\n      upcomingInput: function upcomingInput() {\n        var next = this.match;\n\n        if (next.length < 20) {\n          next += this._input.substr(0, 20 - next.length);\n        }\n\n        return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n      },\n      // displays the character position where the lexing error occurred, i.e. for error messages\n      showPosition: function showPosition() {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n      },\n      // test the lexed token: return FALSE when not a match, otherwise return token\n      test_match: function test_match(match, indexed_rule) {\n        var token, lines, backup;\n\n        if (this.options.backtrack_lexer) {\n          // save context\n          backup = {\n            yylineno: this.yylineno,\n            yylloc: {\n              first_line: this.yylloc.first_line,\n              last_line: this.last_line,\n              first_column: this.yylloc.first_column,\n              last_column: this.yylloc.last_column\n            },\n            yytext: this.yytext,\n            match: this.match,\n            matches: this.matches,\n            matched: this.matched,\n            yyleng: this.yyleng,\n            offset: this.offset,\n            _more: this._more,\n            _input: this._input,\n            yy: this.yy,\n            conditionStack: this.conditionStack.slice(0),\n            done: this.done\n          };\n\n          if (this.options.ranges) {\n            backup.yylloc.range = this.yylloc.range.slice(0);\n          }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n\n        if (lines) {\n          this.yylineno += lines.length;\n        }\n\n        this.yylloc = {\n          first_line: this.yylloc.last_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.last_column,\n          last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n\n        if (this.options.ranges) {\n          this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n\n        if (this.done && this._input) {\n          this.done = false;\n        }\n\n        if (token) {\n          return token;\n        } else if (this._backtrack) {\n          // recover context\n          for (var k in backup) {\n            this[k] = backup[k];\n          }\n\n          return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n\n        return false;\n      },\n      // return next match in input\n      next: function next() {\n        if (this.done) {\n          return this.EOF;\n        }\n\n        if (!this._input) {\n          this.done = true;\n        }\n\n        var token, match, tempMatch, index;\n\n        if (!this._more) {\n          this.yytext = '';\n          this.match = '';\n        }\n\n        var rules = this._currentRules();\n\n        for (var i = 0; i < rules.length; i++) {\n          tempMatch = this._input.match(this.rules[rules[i]]);\n\n          if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n            match = tempMatch;\n            index = i;\n\n            if (this.options.backtrack_lexer) {\n              token = this.test_match(tempMatch, rules[i]);\n\n              if (token !== false) {\n                return token;\n              } else if (this._backtrack) {\n                match = false;\n                continue; // rule action called reject() implying a rule MISmatch.\n              } else {\n                // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                return false;\n              }\n            } else if (!this.options.flex) {\n              break;\n            }\n          }\n        }\n\n        if (match) {\n          token = this.test_match(match, rules[index]);\n\n          if (token !== false) {\n            return token;\n          } // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n\n\n          return false;\n        }\n\n        if (this._input === \"\") {\n          return this.EOF;\n        } else {\n          return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n      },\n      // return next match that has a token\n      lex: function lex() {\n        var r = this.next();\n\n        if (r) {\n          return r;\n        } else {\n          return this.lex();\n        }\n      },\n      // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n      begin: function begin(condition) {\n        this.conditionStack.push(condition);\n      },\n      // pop the previously active lexer condition state off the condition stack\n      popState: function popState() {\n        var n = this.conditionStack.length - 1;\n\n        if (n > 0) {\n          return this.conditionStack.pop();\n        } else {\n          return this.conditionStack[0];\n        }\n      },\n      // produce the lexer rule set which is active for the currently active lexer condition state\n      _currentRules: function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n          return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n          return this.conditions[\"INITIAL\"].rules;\n        }\n      },\n      // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n      topState: function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n\n        if (n >= 0) {\n          return this.conditionStack[n];\n        } else {\n          return \"INITIAL\";\n        }\n      },\n      // alias for begin(condition)\n      pushState: function pushState(condition) {\n        this.begin(condition);\n      },\n      // return the number of states currently on the stack\n      stateStackSize: function stateStackSize() {\n        return this.conditionStack.length;\n      },\n      options: {},\n      performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n        var YYSTATE = YY_START;\n\n        switch ($avoiding_name_collisions) {\n          case 0:\n            /* skip whitespace */\n            break;\n\n          case 1:\n            return 47;\n            break;\n\n          case 2:\n            return 45;\n            break;\n\n          case 3:\n            return 46;\n            break;\n\n          case 4:\n            return 44;\n            break;\n\n          case 5:\n            return 29;\n            break;\n\n          case 6:\n            return 43;\n            break;\n\n          case 7:\n            return 43;\n            break;\n\n          case 8:\n            return 34;\n            break;\n\n          case 9:\n            return 15;\n            break;\n\n          case 10:\n            return 14;\n            break;\n\n          case 11:\n            return 16;\n            break;\n\n          case 12:\n            return 17;\n            break;\n\n          case 13:\n            return 19;\n            break;\n\n          case 14:\n            return 20;\n            break;\n\n          case 15:\n            return 25;\n            break;\n\n          case 16:\n            return 26;\n            break;\n\n          case 17:\n            return 21;\n            break;\n\n          case 18:\n            return 22;\n            break;\n\n          case 19:\n            return 23;\n            break;\n\n          case 20:\n            return 24;\n            break;\n\n          case 21:\n            return 13;\n            break;\n\n          case 22:\n            return 27;\n            break;\n\n          case 23:\n            return 28;\n            break;\n\n          case 24:\n            return 18;\n            break;\n\n          case 25:\n            return 38;\n            break;\n\n          case 26:\n            return 39;\n            break;\n\n          case 27:\n            return 48;\n            break;\n\n          case 28:\n            return 49;\n            break;\n\n          case 29:\n            return 9;\n            break;\n\n          case 30:\n            return 10;\n            break;\n\n          case 31:\n            return 33;\n            break;\n\n          case 32:\n            return 31;\n            break;\n\n          case 33:\n            return 'INVALID';\n            break;\n\n          case 34:\n            return 5;\n            break;\n        }\n      },\n      rules: [/^(?:\\s+)/, /^(?:null\\b)/, /^(?:true\\b)/, /^(?:false\\b)/, /^(?:[0-9]+(\\.[0-9]+)?\\b)/, /^(?:[a-zA-Z_][a-zA-Z0-9_]*)/, /^(?:'[^\\']*')/, /^(?:\"[^\\\"]*\")/, /^(?:=>)/, /^(?:\\+)/, /^(?:-)/, /^(?:\\*)/, /^(?:\\/)/, /^(?:&&)/, /^(?:\\|\\|)/, /^(?:!=)/, /^(?:==)/, /^(?:<=)/, /^(?:<)/, /^(?:>=)/, /^(?:>)/, /^(?:!)/, /^(?:\\?)/, /^(?::)/, /^(?:%)/, /^(?:\\[)/, /^(?:\\])/, /^(?:\\{)/, /^(?:\\})/, /^(?:\\()/, /^(?:\\))/, /^(?:,)/, /^(?:\\.)/, /^(?:.)/, /^(?:$)/],\n      conditions: {\n        \"INITIAL\": {\n          \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34],\n          \"inclusive\": true\n        }\n      }\n    };\n    return lexer;\n  }();\n\n  parser.lexer = lexer;\n\n  function Parser() {\n    this.yy = {};\n  }\n\n  Parser.prototype = parser;\n  parser.Parser = Parser;\n  return new Parser();\n}();\n\nvar bindParser = parser;\nexports.bindParser = bindParser;\n\n},{\"../../extensions/amp-bind/0.1/bind-expr-defines\":3,\"../../src/json\":20}],2:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.BindEvaluator = void 0;\n\nvar _bindExpression = require(\"./bind-expression\");\n\nvar _bindMacro = require(\"./bind-macro\");\n\nvar _bindValidator = require(\"./bind-validator\");\n\nvar _array = require(\"../../../src/utils/array\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Asynchronously evaluates a set of Bind expressions.\n */\nvar BindEvaluator =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of BindEvaluator.\n   * @param {boolean} allowUrlProperties\n   */\n  function BindEvaluator(allowUrlProperties) {\n    /** @const @private {!Array<!BindBindingDef>} */\n    this.bindings_ = [];\n    /**\n     * Maps `id` to parsed BindMacro objects for all <amp-bind-macro> on page.\n     * @private @const {!Object<string, !./bind-macro.BindMacro>}\n     */\n\n    this.macros_ = Object.create(null);\n    /** @const @private {!./bind-validator.BindValidator} */\n\n    this.validator_ = new _bindValidator.BindValidator(allowUrlProperties);\n    /** @const @private {!Object<string, !BindExpression>} */\n\n    this.expressions_ = Object.create(null);\n  }\n  /**\n   * Parses and stores given bindings into expression objects and returns map\n   * of expression string to parse errors.\n   * @param {!Array<!BindBindingDef>} bindings\n   * @return {!Object<string, !BindEvaluatorErrorDef>},\n   */\n\n\n  var _proto = BindEvaluator.prototype;\n\n  _proto.addBindings = function addBindings(bindings) {\n    var _this = this;\n\n    var errors = Object.create(null); // Create BindExpression objects from expression strings.\n\n    bindings.forEach(function (binding) {\n      var parsed = _this.parse_(binding.expressionString);\n\n      if (parsed.error) {\n        errors[binding.expressionString] = parsed.error;\n      } else {\n        _this.bindings_.push(binding);\n      }\n    });\n    return errors;\n  }\n  /**\n   * Removes all parsed bindings for the provided expressions.\n   * @param {!Array<string>} expressionStrings\n   */\n  ;\n\n  _proto.removeBindingsWithExpressionStrings = function removeBindingsWithExpressionStrings(expressionStrings) {\n    var _this2 = this;\n\n    var expressionsToRemove = Object.create(null);\n    expressionStrings.forEach(function (expressionString) {\n      delete _this2.expressions_[expressionString];\n      expressionsToRemove[expressionString] = true;\n    });\n    (0, _array.remove)(this.bindings_, function (binding) {\n      return !!expressionsToRemove[binding.expressionString];\n    });\n  }\n  /**\n   * Parses and stores the given macros and returns map of macro `id` to\n   * parse errors.\n   * @param {!Array<!BindMacroDef>} macros\n   * @return {!Object<string, !BindEvaluatorErrorDef>}\n   */\n  ;\n\n  _proto.addMacros = function addMacros(macros) {\n    var _this3 = this;\n\n    var errors = []; // Create BindMacro objects from BindMacroDef.\n\n    macros.forEach(function (macro, index) {\n      // Only allow a macro to reference macros defined before it to prevent\n      // cycles and recursion.\n      // TODO(willchou): Would be better if cycle/recursion errors are thrown\n      // at creation instead of evaluation.\n      var referableMacros = Object.assign(Object.create(null), _this3.macros_);\n\n      try {\n        _this3.macros_[macro.id] = new _bindMacro.BindMacro(macro, referableMacros);\n      } catch (e) {\n        errors[index] = {\n          message: e.message,\n          stack: e.stack\n        };\n      }\n    });\n    return errors;\n  }\n  /**\n   * Evaluates all expressions with the given `scope` data returns two maps:\n   * expression strings to results and expression strings to errors.\n   * @param {!JsonObject} scope\n   * @return {!BindEvaluateBindingsResultDef}\n   */\n  ;\n\n  _proto.evaluateBindings = function evaluateBindings(scope) {\n    var _this4 = this;\n\n    /** @type {!Object<string, BindExpressionResultDef>} */\n    var cache = Object.create(null);\n    /** @type {!Object<string, !BindEvaluatorErrorDef>} */\n\n    var errors = Object.create(null);\n    this.setGlobals_(scope); // First, evaluate all of the expression strings in the bindings.\n\n    this.bindings_.forEach(function (binding) {\n      var expressionString = binding.expressionString; // Skip if we've already evaluated this expression string.\n\n      if (cache[expressionString] !== undefined || errors[expressionString]) {\n        return;\n      }\n\n      var expression = _this4.expressions_[expressionString];\n\n      if (!expression) {\n        var _error = new Error(\"Expression \\\"\" + expressionString + \"\\\"\\\" is not cached.\");\n\n        errors[expressionString] = {\n          message: _error.message,\n          stack: _error.stack\n        };\n        return;\n      }\n\n      var _this4$evaluate_ = _this4.evaluate_(expression, scope),\n          result = _this4$evaluate_.result,\n          error = _this4$evaluate_.error;\n\n      if (error) {\n        errors[expressionString] = error;\n        return;\n      }\n\n      cache[expressionString] = result;\n    }); // Then, validate each binding and delete invalid expression results.\n\n    this.bindings_.forEach(function (binding) {\n      var tagName = binding.tagName,\n          property = binding.property,\n          expressionString = binding.expressionString;\n      var result = cache[expressionString];\n\n      if (result === undefined) {\n        return;\n      } // Don't validate non-primitive expression results e.g. arrays, objects.\n\n\n      if (result !== null && typeof result === 'object') {\n        return;\n      } // IMPORTANT: We need to validate expression results on each binding\n      // since validity depends on the `tagName` and `property` rather than\n      // just the `result`.\n\n\n      var resultString = _this4.stringValueOf_(property, result);\n\n      if (!_this4.validator_.isResultValid(tagName, property, resultString)) {\n        // TODO(choumx): If this expression string is used in another\n        // tagName/property which is valid, we ought to allow it.\n        delete cache[expressionString];\n        var error = new Error(\"\\\"\" + result + \"\\\" is not a valid result for [\" + property + \"].\");\n        errors[expressionString] = {\n          message: error.message,\n          stack: error.stack\n        };\n      }\n    });\n    return {\n      results: cache,\n      errors: errors\n    };\n  }\n  /**\n   * Evaluates and returns a single expression string.\n   * @param {string} expressionString\n   * @param {!JsonObject} scope\n   * @return {!BindEvaluateExpressionResultDef}\n   */\n  ;\n\n  _proto.evaluateExpression = function evaluateExpression(expressionString, scope) {\n    var parsed = this.parse_(expressionString);\n\n    if (!parsed.expression) {\n      return {\n        result: null,\n        error: parsed.error\n      };\n    }\n\n    this.setGlobals_(scope);\n    var evaluated = this.evaluate_(parsed.expression, scope);\n\n    if (!evaluated.result) {\n      return {\n        result: null,\n        error: evaluated.error\n      };\n    }\n\n    return {\n      result: evaluated.result,\n      error: null\n    };\n  }\n  /**\n   * Sets global references in scope if they're not already set or overriden.\n   * @param {!JsonObject} scope\n   */\n  ;\n\n  _proto.setGlobals_ = function setGlobals_(scope) {\n    if (!('global' in scope)) {\n      scope['global'] = scope;\n    }\n  }\n  /**\n   * Parses a single expression string, caches and returns it.\n   * @param {string} expressionString\n   * @return {{expression: ?BindExpression, error: ?BindEvaluatorErrorDef}}\n   * @private\n   */\n  ;\n\n  _proto.parse_ = function parse_(expressionString) {\n    var expression = this.expressions_[expressionString];\n    var error = null;\n\n    if (!expression) {\n      try {\n        expression = new _bindExpression.BindExpression(expressionString, this.macros_);\n        this.expressions_[expressionString] = expression;\n      } catch (e) {\n        error = {\n          message: e.message,\n          stack: e.stack\n        };\n      }\n    }\n\n    return {\n      expression: expression,\n      error: error\n    };\n  }\n  /**\n   * Evaluate a single expression with the given scope.\n   * @param {!BindExpression} expression\n   * @param {!JsonObject} scope\n   * @return {{result: ?BindExpressionResultDef, error: ?BindEvaluatorErrorDef}}\n   * @private\n   */\n  ;\n\n  _proto.evaluate_ = function evaluate_(expression, scope) {\n    var result = null;\n    var error = null;\n\n    try {\n      result = expression.evaluate(scope);\n    } catch (e) {\n      error = {\n        message: e.message,\n        stack: e.stack\n      };\n    }\n\n    return {\n      result: result,\n      error: error\n    };\n  }\n  /**\n   * Return parsed bindings for testing.\n   * @return {!Array<!BindBindingDef>}\n   * @visibleForTesting\n   */\n  ;\n\n  _proto.bindingsForTesting = function bindingsForTesting() {\n    return this.bindings_;\n  }\n  /**\n   * Returns the expression cache for testing.\n   * @return {!Object<string, !BindExpression>}\n   * @visibleForTesting\n   */\n  ;\n\n  _proto.expressionsForTesting = function expressionsForTesting() {\n    return this.expressions_;\n  }\n  /**\n   * Returns the expression result string for a binding to `property`.\n   * @param {string} property\n   * @param {BindExpressionResultDef} result\n   * @return {?string}\n   * @private\n   */\n  ;\n\n  _proto.stringValueOf_ = function stringValueOf_(property, result) {\n    if (result === null) {\n      return null;\n    }\n\n    switch (property) {\n      case 'text':\n        break;\n\n      case 'class':\n        if (Array.isArray(result)) {\n          return result.join(' ');\n        }\n\n        break;\n\n      default:\n        if (typeof result === 'boolean') {\n          return result ? '' : null;\n        }\n\n        break;\n    }\n\n    return String(result);\n  };\n\n  return BindEvaluator;\n}();\n\nexports.BindEvaluator = BindEvaluator;\n\n},{\"../../../src/utils/array\":39,\"./bind-expression\":4,\"./bind-macro\":5,\"./bind-validator\":6}],3:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.AstNodeValue = exports.AstNodeType = exports.AstNode = void 0;\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A single node in the AST of a `BindExpression`.\n * @struct\n */\nvar AstNode =\n/**\n * @param {AstNodeType} type\n * @param {?Array<AstNode>} args\n * @param {(AstNodeValue|undefined)=} opt_value\n */\nfunction AstNode(type, args, opt_value) {\n  /** @const {AstNodeType} */\n  this.type = type;\n  /** @const {?Array<AstNode>} */\n\n  this.args = args;\n  /** @const {(AstNodeValue|undefined)} */\n\n  this.value = opt_value;\n};\n/**\n * Type of a node in the AST of a `BindExpression`.\n * @enum {number}\n */\n\n\nexports.AstNode = AstNode;\nvar AstNodeType = {\n  // Grammar rules.\n  EXPRESSION: 0,\n  INVOCATION: 1,\n  ARGS: 2,\n  MEMBER_ACCESS: 3,\n  MEMBER: 4,\n  VARIABLE: 5,\n  LITERAL: 6,\n  ARRAY_LITERAL: 7,\n  ARRAY: 8,\n  OBJECT_LITERAL: 9,\n  OBJECT: 10,\n  KEY_VALUE: 11,\n  // Instead of using having an OPERATION type with subtypes, flatten and use\n  // the operation types directly.\n  NOT: 12,\n  UNARY_MINUS: 13,\n  UNARY_PLUS: 14,\n  PLUS: 15,\n  MINUS: 16,\n  MULTIPLY: 17,\n  DIVIDE: 18,\n  MODULO: 19,\n  LOGICAL_AND: 20,\n  LOGICAL_OR: 21,\n  LESS_OR_EQUAL: 22,\n  LESS: 23,\n  GREATER_OR_EQUAL: 24,\n  GREATER: 25,\n  NOT_EQUAL: 26,\n  EQUAL: 27,\n  TERNARY: 28,\n  ARROW_FUNCTION: 29\n};\n/**\n * Value of a primitive or variable node.\n * @typedef {(boolean|string|number|null)}\n */\n\nexports.AstNodeType = AstNodeType;\nvar AstNodeValue;\nexports.AstNodeValue = AstNodeValue;\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.BindExpression = void 0;\n\nvar _bindExprDefines = require(\"./bind-expr-defines\");\n\nvar _log = require(\"../../../src/log\");\n\nvar _object = require(\"../../../src/utils/object\");\n\nvar _mode = require(\"../../../src/mode\");\n\nvar _types = require(\"../../../src/types\");\n\nvar _bindExprImpl = require(\"../../../build/parsers/bind-expr-impl\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar TAG = 'amp-bind';\n/**\n * Maximum number of nodes in an expression AST.\n * @const @private {number}\n */\n\nvar MAX_AST_SIZE = 100;\n/** @const @private {string} */\n\nvar CUSTOM_FUNCTIONS = 'custom-functions';\n/**\n * Map of object type to function name to whitelisted function.\n * @private {!Object<string, !Object<string, Function>>}\n */\n\nvar FUNCTION_WHITELIST;\n/**\n * @return {!Object<string, !Object<string, Function>>}\n * @private\n */\n\nfunction generateFunctionWhitelist() {\n  /**\n   * Deprecated. Static, not-in-place variant of Array#splice.\n   * @param {!Array} array\n   * @param {number=} unusedStart\n   * @param {number=} unusedDeleteCount\n   * @param {...?} unusedItems\n   * @return {!Array}\n   */\n  function splice(array, unusedStart, unusedDeleteCount, unusedItems) {\n    if (!(0, _types.isArray)(array)) {\n      throw new Error(\"splice: \" + array + \" is not an array.\");\n    }\n\n    var copy = Array.prototype.slice.call(array);\n    var args = Array.prototype.slice.call(arguments, 1);\n    Array.prototype.splice.apply(copy, args);\n    return copy;\n  }\n  /**\n   * Needs to be wrapped to avoid a duplicate name conflict with the deprecated\n   * splice function above.\n   * @return {!Function}\n   */\n\n\n  function instanceSplice() {\n    /**\n     * @param {number=} unusedStart\n     * @param {number=} unusedDeleteCount\n     * @param {...?} unusedItems\n     * @return {!Array}\n     * @this {!Array}\n     */\n    function splice(unusedStart, unusedDeleteCount, unusedItems) {\n      var copy = Array.prototype.slice.call(this);\n      Array.prototype.splice.apply(copy, arguments);\n      return copy;\n    }\n\n    return splice;\n  }\n  /**\n   * Deprecated. Static, not-in-place variant of Array#sort.\n   * @param {!Array} array\n   * @return {!Array}\n   */\n\n\n  function sort(array) {\n    if (!(0, _types.isArray)(array)) {\n      throw new Error(\"sort: \" + array + \" is not an array.\");\n    }\n\n    var copy = Array.prototype.slice.call(array);\n    Array.prototype.sort.call(copy);\n    return copy;\n  }\n  /**\n   * Needs to be wrapped to avoid a duplicate name conflict with the deprecated\n   * sort function above.\n   * @return {!Function}\n   */\n\n\n  function instanceSort() {\n    /**\n     * @param {!Function} compareFunction\n     * @return {!Array}\n     * @this {!Array}\n     */\n    function sort(compareFunction) {\n      var copy = Array.prototype.slice.call(this);\n      Array.prototype.sort.call(copy, compareFunction);\n      return copy;\n    }\n\n    return sort;\n  } // Prototype functions.\n\n\n  var whitelist = (0, _object.dict)({\n    '[object Array]': {\n      // TODO(choumx): Polyfill Array#find and Array#findIndex for IE.\n      'concat': Array.prototype.concat,\n      'filter': Array.prototype.filter,\n      'indexOf': Array.prototype.indexOf,\n      'join': Array.prototype.join,\n      'lastIndexOf': Array.prototype.lastIndexOf,\n      'map': Array.prototype.map,\n      'reduce': Array.prototype.reduce,\n      'slice': Array.prototype.slice,\n      'some': Array.prototype.some,\n      'sort': instanceSort(),\n      'splice': instanceSplice(),\n      'includes': Array.prototype.includes\n    },\n    '[object Number]': {\n      'toExponential': Number.prototype.toExponential,\n      'toFixed': Number.prototype.toFixed,\n      'toPrecision': Number.prototype.toPrecision,\n      'toString': Number.prototype.toString\n    },\n    '[object String]': {\n      'charAt': String.prototype.charAt,\n      'charCodeAt': String.prototype.charCodeAt,\n      'concat': String.prototype.concat,\n      'indexOf': String.prototype.indexOf,\n      'lastIndexOf': String.prototype.lastIndexOf,\n      'replace': String.prototype.replace,\n      'slice': String.prototype.slice,\n      'split': String.prototype.split,\n      'substr': String.prototype.substr,\n      'substring': String.prototype.substring,\n      'toLowerCase': String.prototype.toLowerCase,\n      'toUpperCase': String.prototype.toUpperCase\n    }\n  }); // Un-namespaced static functions.\n\n  whitelist[CUSTOM_FUNCTIONS] = {\n    'encodeURI': encodeURI,\n    'encodeURIComponent': encodeURIComponent,\n    'abs': Math.abs,\n    'ceil': Math.ceil,\n    'floor': Math.floor,\n    'sqrt': Math.sqrt,\n    'log': Math.log,\n    'max': Math.max,\n    'min': Math.min,\n    'pow': Math.pow,\n    'random': Math.random,\n    'round': Math.round,\n    'sign': Math.sign,\n    'keys': Object.keys,\n    'values': Object.values\n  }; // Creates a map of function name to the function itself.\n  // This makes function lookups faster (compared to Array.indexOf).\n\n  var out = (0, _object.map)();\n  Object.keys(whitelist).forEach(function (type) {\n    out[type] = (0, _object.map)();\n    var functionsForType = whitelist[type];\n    Object.keys(functionsForType).forEach(function (name) {\n      var func = functionsForType[name];\n\n      if (func) {\n        (0, _log.devAssert)(!func.name || name === func.name, 'Listed function name ' + (\"\\\"\" + name + \"\\\" doesn't match name property \\\"\" + func.name + \"\\\".\"));\n        out[type][name] = func;\n      } else {\n        // This can happen if a browser doesn't support a built-in function.\n        throw new Error(\"Unsupported function: \" + type + \".\" + name);\n      }\n    });\n  }); // Custom functions (non-JS-built-ins) must be added manually as their names\n  // will be minified at compile time.\n\n  out[CUSTOM_FUNCTIONS]['copyAndSplice'] = splice; // Deprecated.\n\n  out[CUSTOM_FUNCTIONS]['sort'] = sort; // Deprecated.\n\n  out[CUSTOM_FUNCTIONS]['splice'] = splice; // Deprecated.\n\n  return out;\n}\n/**\n * A single Bind expression.\n */\n\n\nvar BindExpression =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {string} expressionString\n   * @param {!Object<string, !./bind-macro.BindMacro>} macros\n   * @param {number=} opt_maxAstSize\n   * @throws {Error} On malformed expressions.\n   */\n  function BindExpression(expressionString, macros, opt_maxAstSize) {\n    if (!FUNCTION_WHITELIST) {\n      FUNCTION_WHITELIST = generateFunctionWhitelist();\n    }\n    /** @const {string} */\n\n\n    this.expressionString = expressionString;\n    /** @private @const {!Object<string, !./bind-macro.BindMacro>} */\n\n    this.macros_ = macros;\n    /** @const @private {!./bind-expr-defines.AstNode} */\n\n    this.ast_ = _bindExprImpl.bindParser.parse(this.expressionString);\n    /** @const {number} */\n\n    this.expressionSize = this.numberOfNodesInAst_(this.ast_); // Check if this expression string is too large (for performance).\n\n    var maxSize = opt_maxAstSize || MAX_AST_SIZE;\n    var skipConstraint = (0, _mode.getMode)().localDev && !(0, _mode.getMode)().test;\n\n    if (this.expressionSize > maxSize && !skipConstraint) {\n      throw new Error(\"Expression size (\" + this.expressionSize + \") exceeds max \" + (\"(\" + maxSize + \"). Please reduce number of operands.\"));\n    }\n  }\n  /**\n   * Evaluates the expression given a scope.\n   * @param {!JsonObject} scope\n   * @throws {Error} On illegal function invocation.\n   * @return {BindExpressionResultDef}\n   */\n\n\n  var _proto = BindExpression.prototype;\n\n  _proto.evaluate = function evaluate(scope) {\n    return this.eval_(this.ast_, scope);\n  }\n  /**\n   * @param {!./bind-expr-defines.AstNode} ast\n   * @return {number}\n   * @private\n   */\n  ;\n\n  _proto.numberOfNodesInAst_ = function numberOfNodesInAst_(ast) {\n    var _this = this;\n\n    // Include the node count of any nested macros in the expression.\n    if (this.isMacroInvocationNode_(ast)) {\n      var macro = this.macros_[String(ast.value)];\n      var nodes = macro.getExpressionSize();\n      this.argumentsForInvocation_(ast).forEach(function (arg) {\n        if (arg) {\n          nodes += _this.numberOfNodesInAst_(arg) - 1;\n        }\n      });\n      return nodes;\n    } else {\n      var _nodes = 1;\n\n      if (ast.args) {\n        ast.args.forEach(function (arg) {\n          if (arg) {\n            _nodes += _this.numberOfNodesInAst_(arg);\n          }\n        });\n      }\n\n      return _nodes;\n    }\n  }\n  /**\n   * @param {!./bind-expr-defines.AstNode} ast\n   * @return {boolean}\n   * @private\n   */\n  ;\n\n  _proto.isMacroInvocationNode_ = function isMacroInvocationNode_(ast) {\n    var isInvocationWithNoCaller = ast.type === _bindExprDefines.AstNodeType.INVOCATION && !ast.args[0];\n\n    if (isInvocationWithNoCaller) {\n      var macroExistsWithValue = this.macros_[String(ast.value)] != null;\n      return macroExistsWithValue;\n    }\n\n    return false;\n  }\n  /**\n   * Given an INVOCATION node, returns an array containing its arguments.\n   * Also unwraps its ARGS child, if it has one.\n   * @param {!./bind-expr-defines.AstNode} ast\n   * @return {!Array<./bind-expr-defines.AstNode>}\n   * @private\n   */\n  ;\n\n  _proto.argumentsForInvocation_ = function argumentsForInvocation_(ast) {\n    // The INVOCATION node may or may not contain an ARGS child node.\n    var argsNode = ast.args.length === 2 && ast.args[1].type === _bindExprDefines.AstNodeType.ARGS ? ast.args[1] : null;\n\n    if (argsNode) {\n      // An ARGS node can either have an empty array or an ARRAY child.\n      var args = argsNode.args;\n\n      if (args.length === 0) {\n        return [];\n      } else if (args.length === 1 && args[0].type === _bindExprDefines.AstNodeType.ARRAY) {\n        // An ARRAY node contains an actual array.\n        var arrayNode = args[0];\n        return arrayNode.args || [];\n      }\n    } // Otherwise, just return the array of its non-ARGS arguments.\n\n\n    return ast.args || [];\n  }\n  /**\n   * Recursively evaluates and returns value of `node` and its children.\n   * @param {./bind-expr-defines.AstNode} node\n   * @param {!JsonObject} scope\n   * @throws {Error}\n   * @return {BindExpressionResultDef}\n   * @private\n   */\n  ;\n\n  _proto.eval_ = function eval_(node, scope) {\n    var _this2 = this;\n\n    if (!node) {\n      return null;\n    }\n\n    var type = node.type,\n        args = node.args,\n        value = node.value; // `value` should always exist for literals.\n\n    if (type === _bindExprDefines.AstNodeType.LITERAL && value !== undefined) {\n      return value;\n    }\n\n    switch (type) {\n      case _bindExprDefines.AstNodeType.EXPRESSION:\n        return this.eval_(args[0], scope);\n\n      case _bindExprDefines.AstNodeType.INVOCATION:\n        // Built-in functions and macros don't have a caller object.\n        var isBuiltInOrMacro = args[0] === undefined;\n        var caller = this.eval_(args[0], scope);\n        var params = this.eval_(args[1], scope);\n        var method = String(value);\n        var validFunction;\n        var unsupportedError;\n\n        if (isBuiltInOrMacro) {\n          var macro = this.macros_[method];\n\n          if (macro) {\n            validFunction = function validFunction() {\n              return macro.evaluate(scope, Array.prototype.slice.call(arguments));\n            };\n          } else {\n            validFunction = FUNCTION_WHITELIST[CUSTOM_FUNCTIONS][method];\n          }\n\n          if (!validFunction) {\n            unsupportedError = method + \" is not a supported function.\";\n          }\n        } else {\n          if (caller === null) {\n            (0, _log.user)().warn(TAG, \"Cannot invoke method \" + method + \" on null; returning null.\");\n            return null;\n          }\n\n          var callerType = Object.prototype.toString.call(caller);\n          var whitelist = FUNCTION_WHITELIST[callerType];\n\n          if (whitelist) {\n            var f = caller[method];\n\n            if (f && f === whitelist[method]) {\n              validFunction = f;\n            } else if (this.isCustomInstanceFunction_(method)) {\n              validFunction = whitelist[method];\n            }\n          }\n\n          if (!validFunction) {\n            unsupportedError = callerType + \".\" + method + \" is not a supported function.\";\n          }\n        }\n\n        if (validFunction) {\n          if (Array.isArray(params)) {\n            if (this.containsInvalidArgument_(method, params)) {\n              throw new Error(\"Unexpected argument type in \" + method + \"().\");\n            }\n\n            return validFunction.apply(caller, params);\n          }\n        }\n\n        throw new Error(unsupportedError);\n\n      case _bindExprDefines.AstNodeType.MEMBER_ACCESS:\n        var target = this.eval_(args[0], scope);\n        var member = this.eval_(args[1], scope);\n\n        if (target === null || member === null) {\n          return null;\n        }\n\n        var targetType = typeof target;\n\n        if (targetType !== 'string' && targetType !== 'object') {\n          return null;\n        }\n\n        var memberType = typeof member;\n\n        if (memberType !== 'string' && memberType !== 'number') {\n          return null;\n        }\n\n        if ((0, _object.hasOwn)(target, String(member))) {\n          return target[member];\n        }\n\n        return null;\n\n      case _bindExprDefines.AstNodeType.MEMBER:\n        return value || this.eval_(args[0], scope);\n\n      case _bindExprDefines.AstNodeType.VARIABLE:\n        var variable = value;\n\n        if ((0, _object.hasOwn)(scope, String(variable))) {\n          return scope[variable];\n        }\n\n        return null;\n\n      case _bindExprDefines.AstNodeType.ARGS:\n      case _bindExprDefines.AstNodeType.ARRAY_LITERAL:\n        return args.length > 0 ? this.eval_(args[0], scope) : [];\n\n      case _bindExprDefines.AstNodeType.ARRAY:\n        return args.map(function (element) {\n          return _this2.eval_(element, scope);\n        });\n\n      case _bindExprDefines.AstNodeType.OBJECT_LITERAL:\n        return args.length > 0 ? this.eval_(args[0], scope) : (0, _object.map)();\n\n      case _bindExprDefines.AstNodeType.OBJECT:\n        var object = (0, _object.map)();\n        args.forEach(function (keyValue) {\n          var _this2$eval_ = _this2.eval_(keyValue, scope),\n              k = _this2$eval_.k,\n              v = _this2$eval_.v;\n\n          object[k] = v;\n        });\n        return object;\n\n      case _bindExprDefines.AstNodeType.KEY_VALUE:\n        return {\n          k: this.eval_(args[0], scope),\n          v: this.eval_(args[1], scope)\n        };\n\n      case _bindExprDefines.AstNodeType.NOT:\n        return !this.eval_(args[0], scope);\n\n      case _bindExprDefines.AstNodeType.UNARY_MINUS:\n        return -Number(this.eval_(args[0], scope));\n\n      case _bindExprDefines.AstNodeType.UNARY_PLUS:\n        return +Number(this.eval_(args[0], scope));\n\n      case _bindExprDefines.AstNodeType.PLUS:\n        return this.eval_(args[0], scope) + this.eval_(args[1], scope);\n\n      case _bindExprDefines.AstNodeType.MINUS:\n        return Number(this.eval_(args[0], scope)) - Number(this.eval_(args[1], scope));\n\n      case _bindExprDefines.AstNodeType.MULTIPLY:\n        return Number(this.eval_(args[0], scope)) * Number(this.eval_(args[1], scope));\n\n      case _bindExprDefines.AstNodeType.DIVIDE:\n        return Number(this.eval_(args[0], scope)) / Number(this.eval_(args[1], scope));\n\n      case _bindExprDefines.AstNodeType.MODULO:\n        return Number(this.eval_(args[0], scope)) % Number(this.eval_(args[1], scope));\n\n      case _bindExprDefines.AstNodeType.LOGICAL_AND:\n        return this.eval_(args[0], scope) && this.eval_(args[1], scope);\n\n      case _bindExprDefines.AstNodeType.LOGICAL_OR:\n        return this.eval_(args[0], scope) || this.eval_(args[1], scope);\n\n      case _bindExprDefines.AstNodeType.LESS_OR_EQUAL:\n        return this.eval_(args[0], scope) <= this.eval_(args[1], scope);\n\n      case _bindExprDefines.AstNodeType.LESS:\n        return this.eval_(args[0], scope) < this.eval_(args[1], scope);\n\n      case _bindExprDefines.AstNodeType.GREATER_OR_EQUAL:\n        return this.eval_(args[0], scope) >= this.eval_(args[1], scope);\n\n      case _bindExprDefines.AstNodeType.GREATER:\n        return this.eval_(args[0], scope) > this.eval_(args[1], scope);\n\n      case _bindExprDefines.AstNodeType.NOT_EQUAL:\n        return this.eval_(args[0], scope) != this.eval_(args[1], scope);\n\n      case _bindExprDefines.AstNodeType.EQUAL:\n        return this.eval_(args[0], scope) == this.eval_(args[1], scope);\n\n      case _bindExprDefines.AstNodeType.TERNARY:\n        return this.eval_(args[0], scope) ? this.eval_(args[1], scope) : this.eval_(args[2], scope);\n\n      case _bindExprDefines.AstNodeType.ARROW_FUNCTION:\n        var functionScope = (0, _object.map)(scope);\n        return function () {\n          for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {\n            values[_key] = arguments[_key];\n          }\n\n          // Support parameters in arrow functions by forwarding their values\n          // into the function's scope. For example, in this function call:\n          //\n          //     const f = (x, y) => x + y;\n          //     f(2, 7);\n          //\n          // `names` == ['x', 'y'] and `values` == [2, 7], so we include\n          // {x: 2, y: 7} in the scope when evaluating `x + y`.\n          var names = _this2.eval_(args[0], scope);\n\n          if (names) {\n            names.forEach(function (name, i) {\n              functionScope[name] = values[i];\n            });\n          }\n\n          return _this2.eval_(args[1], functionScope);\n        };\n\n      default:\n        throw new Error(\"Unexpected AstNodeType: \" + type + \".\");\n    }\n  }\n  /**\n   * Returns true if `method` is a non-standard instance function.\n   * We alter certain functions e.g. Array.sort to modify and return a copy\n   * instead of operating in-place.\n   * @param {string} method\n   * @return {boolean}\n   * @private\n   */\n  ;\n\n  _proto.isCustomInstanceFunction_ = function isCustomInstanceFunction_(method) {\n    return method === 'sort' || method === 'splice';\n  }\n  /**\n   * @param {string} method\n   * @param {!Array} params\n   * @return {boolean}\n   * @private\n   */\n  ;\n\n  _proto.containsInvalidArgument_ = function containsInvalidArgument_(method, params) {\n    // Don't allow objects as parameters except for certain functions.\n    if (method == 'keys' || method == 'values' || method == 'splice') {\n      return false;\n    }\n\n    return this.containsObject_(params);\n  }\n  /**\n   * Returns true if input array contains a plain object.\n   * @param {!Array} array\n   * @return {boolean}\n   * @private\n   */\n  ;\n\n  _proto.containsObject_ = function containsObject_(array) {\n    for (var i = 0; i < array.length; i++) {\n      if ((0, _types.isObject)(array[i])) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  return BindExpression;\n}();\n\nexports.BindExpression = BindExpression;\n\n},{\"../../../build/parsers/bind-expr-impl\":1,\"../../../src/log\":21,\"../../../src/mode\":23,\"../../../src/types\":35,\"../../../src/utils/object\":42,\"./bind-expr-defines\":3}],5:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.BindMacro = void 0;\n\nvar _bindExpression = require(\"./bind-expression\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A single parsed Bind macro.\n */\nvar BindMacro =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!BindMacroDef} data\n   * @param {!Object<string, !BindMacro>} referableMacros\n   */\n  function BindMacro(data, referableMacros) {\n    /** @const @private {!Array<string>} */\n    this.argumentNames_ = data.argumentNames || [];\n    /** @const @private {!BindExpression} */\n\n    this.expression_ = new _bindExpression.BindExpression(data.expressionString, referableMacros);\n  }\n  /**\n   * @param {!JsonObject} scope\n   * @param {!Array} args\n   * @throws {Error} On illegal function invocation.\n   * @return {BindExpressionResultDef}\n   */\n\n\n  var _proto = BindMacro.prototype;\n\n  _proto.evaluate = function evaluate(scope, args) {\n    var copy =\n    /** @type {!JsonObject} */\n    Object.assign({}, scope);\n\n    for (var i = 0; i < this.argumentNames_.length; i++) {\n      copy[this.argumentNames_[i]] = args[i];\n    }\n\n    return this.expression_.evaluate(copy);\n  }\n  /**\n   * @return {number}\n   */\n  ;\n\n  _proto.getExpressionSize = function getExpressionSize() {\n    return this.expression_.expressionSize;\n  };\n\n  return BindMacro;\n}();\n\nexports.BindMacro = BindMacro;\n\n},{\"./bind-expression\":4}],6:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.BindValidator = void 0;\n\nvar _object = require(\"../../../src/utils/object\");\n\nvar _srcset = require(\"../../../src/srcset\");\n\nvar _string = require(\"../../../src/string\");\n\nvar _log = require(\"../../../src/log\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar TAG = 'amp-bind';\n/**\n * @typedef {{\n *   allowedProtocols: (!Object<string,boolean>|undefined),\n *   alternativeName: (string|undefined),\n * }}\n */\n\nvar PropertyRulesDef;\n/**\n * Property rules that apply to any and all tags.\n * @private {Object<string, ?PropertyRulesDef>}\n */\n\nvar GLOBAL_PROPERTY_RULES = {\n  'class': {\n    blacklistedValueRegex: '(^|\\\\W)i-amphtml-'\n  },\n  'hidden': null,\n  'text': null\n};\n/**\n * Property rules that apply to all AMP elements.\n * @private {Object<string, ?PropertyRulesDef>}\n */\n\nvar AMP_PROPERTY_RULES = {\n  'width': null,\n  'height': null\n};\n/**\n * Maps tag names to property names to PropertyRulesDef.\n * If `ELEMENT_RULES[tag][property]` is null, then all values are valid\n * for that property in that tag.\n * @private {Object<string, Object<string, ?PropertyRulesDef>>}}\n */\n\nvar ELEMENT_RULES = createElementRules_();\n/**\n * Map whose keys comprise all properties that contain URLs.\n * @private {Object<string, boolean>}\n */\n\nvar URL_PROPERTIES = {\n  'src': true,\n  'srcset': true,\n  'href': true,\n  'xlink:href': true\n};\n/**\n * BindValidator performs runtime validation of Bind expression results.\n *\n * For performance reasons, the validation rules enforced are a subset\n * of the AMP validator's, selected with a focus on security and UX.\n */\n\nvar BindValidator =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {boolean} allowUrlBindings\n   */\n  function BindValidator(allowUrlBindings) {\n    /** @const @private {boolean} */\n    this.allowUrlBindings_ = allowUrlBindings;\n  }\n  /**\n   * Returns true if (tag, property) binding is allowed.\n   * Otherwise, returns false.\n   * NOTE: `tag` and `property` are case-sensitive.\n   * @param {string} tag\n   * @param {string} property\n   * @return {boolean}\n   */\n\n\n  var _proto = BindValidator.prototype;\n\n  _proto.canBind = function canBind(tag, property) {\n    return this.rulesForTagAndProperty_(tag, property) !== undefined;\n  }\n  /**\n   * Returns true if `value` is a valid result for a (tag, property) binding.\n   * Otherwise, returns false.\n   * @param {string} tag\n   * @param {string} property\n   * @param {?string} value\n   * @return {boolean}\n   */\n  ;\n\n  _proto.isResultValid = function isResultValid(tag, property, value) {\n    var rules = this.rulesForTagAndProperty_(tag, property); // `alternativeName` is a reference to another property's rules.\n\n    if (rules && rules.alternativeName) {\n      rules = this.rulesForTagAndProperty_(tag, rules.alternativeName);\n    } // If binding to (tag, property) is not allowed, return false.\n\n\n    if (rules === undefined) {\n      return false;\n    } // If binding is allowed but have no specific rules, return true.\n\n\n    if (rules === null) {\n      return true;\n    } // Validate URL(s) if applicable.\n\n\n    if (value && (0, _object.ownProperty)(URL_PROPERTIES, property)) {\n      var urls;\n\n      if (property === 'srcset') {\n        var srcset;\n\n        try {\n          srcset = (0, _srcset.parseSrcset)(value);\n        } catch (e) {\n          (0, _log.user)().error(TAG, 'Failed to parse srcset: ', e);\n          return false;\n        }\n\n        urls = srcset.getUrls();\n      } else {\n        urls = [value];\n      }\n\n      for (var i = 0; i < urls.length; i++) {\n        if (!this.isUrlValid_(urls[i], rules)) {\n          return false;\n        }\n      }\n    } // @see validator/engine/validator.ParsedTagSpec.validateAttributes()\n\n\n    var _rules = rules,\n        blacklistedValueRegex = _rules.blacklistedValueRegex;\n\n    if (value && blacklistedValueRegex) {\n      var re = new RegExp(blacklistedValueRegex, 'i');\n\n      if (re.test(value)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n  /**\n   * Returns true if a url's value is valid within a property rules spec.\n   * @param {string} url\n   * @param {!PropertyRulesDef} rules\n   * @return {boolean}\n   * @private\n   */\n  ;\n\n  _proto.isUrlValid_ = function isUrlValid_(url, rules) {\n    // @see validator/engine/validator.js#validateUrlAndProtocol()\n    if (url) {\n      if (/__amp_source_origin/.test(url)) {\n        return false;\n      }\n\n      var allowedProtocols = rules.allowedProtocols;\n\n      if (allowedProtocols) {\n        var re = /^([^:\\/?#.]+):[\\s\\S]*$/;\n        var match = re.exec(url);\n\n        if (match !== null) {\n          var protocol = match[1].toLowerCase().trim(); // hasOwn() needed since nested objects are not prototype-less.\n\n          if (!(0, _object.hasOwn)(allowedProtocols, protocol)) {\n            return false;\n          }\n        }\n      }\n    }\n\n    return true;\n  }\n  /**\n   * Returns the property rules object for (tag, property), if it exists.\n   * Returns null if binding is allowed without constraints.\n   * Returns undefined if binding is not allowed.\n   * @param {string} tag\n   * @param {string} property\n   * @return {(?PropertyRulesDef|undefined)}\n   * @private\n   */\n  ;\n\n  _proto.rulesForTagAndProperty_ = function rulesForTagAndProperty_(tag, property) {\n    // Allow binding to all ARIA attributes.\n    if ((0, _string.startsWith)(property, 'aria-')) {\n      return null;\n    } // Disallow URL property bindings if configured as such.\n\n\n    if ((0, _object.ownProperty)(URL_PROPERTIES, property) && !this.allowUrlBindings_) {\n      return undefined;\n    }\n\n    var globalRules = (0, _object.ownProperty)(GLOBAL_PROPERTY_RULES, property);\n\n    if (globalRules !== undefined) {\n      return (\n        /** @type {PropertyRulesDef} */\n        globalRules\n      );\n    }\n\n    var ampPropertyRules = (0, _object.ownProperty)(AMP_PROPERTY_RULES, property);\n\n    if ((0, _string.startsWith)(tag, 'AMP-') && ampPropertyRules !== undefined) {\n      return (\n        /** @type {PropertyRulesDef} */\n        ampPropertyRules\n      );\n    }\n\n    var tagRules = (0, _object.ownProperty)(ELEMENT_RULES, tag);\n\n    if (tagRules) {\n      return tagRules[property];\n    }\n\n    return undefined;\n  };\n\n  return BindValidator;\n}();\n/**\n * @return {Object<string, Object<string, ?PropertyRulesDef>>}}\n * @private\n */\n\n\nexports.BindValidator = BindValidator;\n\nfunction createElementRules_() {\n  // Initialize `rules` with tag-specific constraints.\n  var rules = {\n    'AMP-AUDIO': {\n      'album': null,\n      'artist': null,\n      'artwork': null,\n      'controlsList': null,\n      'loop': null,\n      'src': {\n        'allowedProtocols': {\n          'https': true\n        }\n      },\n      'title': null\n    },\n    'AMP-AUTOCOMPLETE': {\n      'src': {\n        'allowedProtocols': {\n          'https': true\n        }\n      }\n    },\n    'AMP-BASE-CAROUSEL': {\n      'advance-count': null,\n      'auto-advance-count': null,\n      'auto-advance-interval': null,\n      'auto-advance-loops': null,\n      'auto-advance': null,\n      'horizontal': null,\n      'initial-index': null,\n      'loop': null,\n      'mixed-length': null,\n      'side-slide-count': null,\n      'slide': null,\n      'snap-align': null,\n      'snap-by': null,\n      'snap': null,\n      'visible-count': null\n    },\n    'AMP-BRIGHTCOVE': {\n      'data-account': null,\n      'data-embed': null,\n      'data-player': null,\n      'data-player-id': null,\n      'data-playlist-id': null,\n      'data-video-id': null\n    },\n    'AMP-CAROUSEL': {\n      'slide': null\n    },\n    'AMP-DATE-PICKER': {\n      'max': null,\n      'min': null,\n      'src': {\n        'allowedProtocols': {\n          'https': true\n        }\n      }\n    },\n    'AMP-GOOGLE-DOCUMENT-EMBED': {\n      'src': null,\n      'title': null\n    },\n    'AMP-IFRAME': {\n      'src': null\n    },\n    'AMP-IMG': {\n      'alt': null,\n      'attribution': null,\n      'src': {\n        'allowedProtocols': {\n          'data': true,\n          'http': true,\n          'https': true\n        }\n      },\n      'srcset': {\n        'alternativeName': 'src'\n      }\n    },\n    'AMP-LIGHTBOX': {\n      'open': null\n    },\n    'AMP-LIST': {\n      'src': {\n        'allowedProtocols': {\n          'https': true\n        }\n      },\n      'state': null,\n      'is-layout-container': null\n    },\n    'AMP-SELECTOR': {\n      'disabled': null,\n      'selected': null\n    },\n    'AMP-STATE': {\n      'src': {\n        'allowedProtocols': {\n          'https': true\n        }\n      }\n    },\n    'AMP-TIMEAGO': {\n      'datetime': null,\n      'title': null\n    },\n    'AMP-TWITTER': {\n      'data-tweetid': null\n    },\n    'AMP-VIDEO': {\n      'album': null,\n      'alt': null,\n      'artist': null,\n      'artwork': null,\n      'attribution': null,\n      'controls': null,\n      'controlslist': null,\n      'loop': null,\n      'poster': null,\n      'preload': null,\n      'src': {\n        'allowedProtocols': {\n          'https': true\n        }\n      },\n      'title': null\n    },\n    'AMP-YOUTUBE': {\n      'data-videoid': null\n    },\n    'A': {\n      'href': {\n        'allowedProtocols': {\n          'ftp': true,\n          'http': true,\n          'https': true,\n          'mailto': true,\n          'fb-messenger': true,\n          'intent': true,\n          'skype': true,\n          'sms': true,\n          'snapchat': true,\n          'tel': true,\n          'tg': true,\n          'threema': true,\n          'twitter': true,\n          'viber': true,\n          'whatsapp': true\n        }\n      }\n    },\n    'BUTTON': {\n      'disabled': null,\n      'type': null,\n      'value': null\n    },\n    'DETAILS': {\n      'open': null\n    },\n    'FIELDSET': {\n      'disabled': null\n    },\n    'IMAGE': {\n      'xlink:href': {\n        'allowedProtocols': {\n          'http': true,\n          'https': true\n        }\n      }\n    },\n    'INPUT': {\n      'accept': null,\n      'accesskey': null,\n      'autocomplete': null,\n      'checked': null,\n      'disabled': null,\n      'height': null,\n      'inputmode': null,\n      'max': null,\n      'maxlength': null,\n      'min': null,\n      'minlength': null,\n      'multiple': null,\n      'pattern': null,\n      'placeholder': null,\n      'readonly': null,\n      'required': null,\n      'selectiondirection': null,\n      'size': null,\n      'spellcheck': null,\n      'step': null,\n      'type': {\n        blacklistedValueRegex: '(^|\\\\s)(button|image|)(\\\\s|$)'\n      },\n      'value': null,\n      'width': null\n    },\n    'OPTION': {\n      'disabled': null,\n      'label': null,\n      'selected': null,\n      'value': null\n    },\n    'OPTGROUP': {\n      'disabled': null,\n      'label': null\n    },\n    'SECTION': {\n      'data-expand': null\n    },\n    'SELECT': {\n      'autofocus': null,\n      'disabled': null,\n      'multiple': null,\n      'required': null,\n      'size': null\n    },\n    'SOURCE': {\n      'src': {\n        'allowedProtocols': {\n          'https': true\n        }\n      },\n      'type': null\n    },\n    'TRACK': {\n      'label': null,\n      'src': {\n        'allowedProtocols': {\n          'https': true\n        }\n      },\n      'srclang': null\n    },\n    'TEXTAREA': {\n      'autocomplete': null,\n      'autofocus': null,\n      'cols': null,\n      'disabled': null,\n      'maxlength': null,\n      'minlength': null,\n      'pattern': null,\n      'placeholder': null,\n      'readonly': null,\n      'required': null,\n      'rows': null,\n      'selectiondirection': null,\n      'selectionend': null,\n      'selectionstart': null,\n      'spellcheck': null,\n      'wrap': null,\n      // Non-standard property.\n      'defaulttext': null\n    }\n  };\n  return rules;\n}\n\n},{\"../../../src/log\":21,\"../../../src/srcset\":31,\"../../../src/string\":32,\"../../../src/utils/object\":42}],7:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.AmpEvents = void 0;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Common AMP events.\n * @enum {string}\n */\nvar AmpEvents = {\n  DOM_UPDATE: 'amp:dom-update',\n  FORM_DIRTINESS_CHANGE: 'amp:form-dirtiness-change',\n  FORM_VALUE_CHANGE: 'amp:form-value-change',\n  VISIBILITY_CHANGE: 'amp:visibilitychange',\n  // https://github.com/ampproject/amphtml/blob/master/ads/README.md#page-visibility\n  // The following codes are only used for testing.\n  // TODO(choumx): Move these to a separate enum so they can be DCE'd.\n  ATTACHED: 'amp:attached',\n  STUBBED: 'amp:stubbed',\n  LOAD_START: 'amp:load:start',\n  LOAD_END: 'amp:load:end',\n  ERROR: 'amp:error',\n  SIZE_CHANGED: 'amp:size-changed'\n};\nexports.AmpEvents = AmpEvents;\n\n},{}],8:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.triggerAnalyticsEvent = triggerAnalyticsEvent;\n\nvar _services = require(\"./services\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Helper method to trigger analytics event if amp-analytics is available.\n * TODO: Do not expose this function\n * @param {!Element} target\n * @param {string} eventType\n * @param {!JsonObject=} opt_vars A map of vars and their values.\n */\nfunction triggerAnalyticsEvent(target, eventType, opt_vars) {\n  _services.Services.analyticsForDocOrNull(target).then(function (analytics) {\n    if (!analytics) {\n      return;\n    }\n\n    analytics.triggerEventForTarget(target, eventType, opt_vars);\n  });\n}\n\n},{\"./services\":30}],9:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.CommonSignals = void 0;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Commonly used signals across different elements and documents.\n * @enum {string}\n */\nvar CommonSignals = {\n  /**\n   * The element has been upgraded from ElementStub to its real implementation.\n   */\n  UPGRADED: 'upgraded',\n\n  /**\n   * The element has been built.\n   */\n  BUILT: 'built',\n\n  /**\n   * The element has started loading.\n   * LOAD_START triggers at the start of the layoutCallback.\n   */\n  LOAD_START: 'load-start',\n\n  /**\n   * Rendering has been confirmed to have been started.\n   * It is a signal to indicate meaningful display (e.g. text could be displayed\n   * CSS is correctly installed/applied).\n   *\n   * Elements can optionally implement RENDER_START signal. (e.g. ad, shadowdoc)\n   * if it want to define its own meaningful display time and toggle visibility.\n   *\n   * Simpler elements's RENDER_START can be equal to the start of the\n   * buildCallback\n   */\n  RENDER_START: 'render-start',\n\n  /**\n   * The element has been loaded.\n   * LOAD_END triggers at the end of the layoutCallback.\n   *\n   */\n  LOAD_END: 'load-end',\n\n  /**\n   * The initial contents of an element/document/embed have been loaded.\n   * INI_LOAD is an optional signal, implemented by ads, story, and elements\n   * that consist of other resources.\n   * It instructs that all critical resources has been loaded, and can be used\n   * for more accurate visibility measurement.\n   * When an element doesn't consist multiple child resources, LOAD_END signal\n   * can be used to indicate resource load completion.\n   * Note: Based on the implementation, INI_LOAD can trigger before or after\n   * LOAD_END.\n   */\n  INI_LOAD: 'ini-load',\n\n  /**\n   * The element has been unlaid out.\n   */\n  UNLOAD: 'unload'\n};\nexports.CommonSignals = CommonSignals;\n\n},{}],10:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.config = exports.urls = void 0;\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows for runtime configuration. Internally, the runtime should\n * use the src/config.js module for various constants. We can use the\n * AMP_CONFIG global to translate user-defined configurations to this\n * module.\n * @type {!Object<string, string>}\n */\nvar env = self.AMP_CONFIG || {};\nvar thirdPartyFrameRegex = typeof env['thirdPartyFrameRegex'] == 'string' ? new RegExp(env['thirdPartyFrameRegex']) : env['thirdPartyFrameRegex'];\nvar cdnProxyRegex = typeof env['cdnProxyRegex'] == 'string' ? new RegExp(env['cdnProxyRegex']) : env['cdnProxyRegex'];\n/** @type {!Object<string, string|boolean|RegExp|Array<RegExp>>} */\n\nvar urls = {\n  thirdParty: env['thirdPartyUrl'] || 'https://3p.ampproject.net',\n  thirdPartyFrameHost: env['thirdPartyFrameHost'] || 'ampproject.net',\n  thirdPartyFrameRegex: thirdPartyFrameRegex || /^d-\\d+\\.ampproject\\.net$/,\n  cdn: env['cdnUrl'] || 'https://cdn.ampproject.org',\n\n  /* Note that cdnProxyRegex is only ever checked against origins\n   * (proto://host[:port]) so does not need to consider path\n   */\n  cdnProxyRegex: cdnProxyRegex || /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org$/,\n  localhostRegex: /^https?:\\/\\/localhost(:\\d+)?$/,\n  errorReporting: env['errorReportingUrl'] || 'https://amp-error-reporting.appspot.com/r',\n  localDev: env['localDev'] || false,\n\n  /**\n   * These domains are trusted with more sensitive viewer operations such as\n   * propagating the referrer. If you believe your domain should be here,\n   * file the issue on GitHub to discuss. The process will be similar\n   * (but somewhat more stringent) to the one described in the [3p/README.md](\n   * https://github.com/ampproject/amphtml/blob/master/3p/README.md)\n   *\n   * {!Array<!RegExp>}\n   */\n  trustedViewerHosts: [/(^|\\.)google\\.(com?|[a-z]{2}|com?\\.[a-z]{2}|cat)$/, /(^|\\.)gmail\\.(com|dev)$/]\n};\nexports.urls = urls;\nvar config = {\n  urls: urls\n};\nexports.config = config;\n\n},{}],11:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.assertIsName = assertIsName;\nexports.setScopeSelectorSupportedForTesting = setScopeSelectorSupportedForTesting;\nexports.isScopeSelectorSupported = isScopeSelectorSupported;\nexports.prependSelectorsWith = prependSelectorsWith;\nexports.escapeCssSelectorIdent = escapeCssSelectorIdent;\nexports.escapeCssSelectorNth = escapeCssSelectorNth;\n\nvar _cssEscape = require(\"../third_party/css-escape/css-escape\");\n\nvar _log = require(\"./log\");\n\n/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Asserts that name is just an alphanumeric word, and does not contain\n * advanced CSS selector features like attributes, psuedo-classes, class names,\n * nor ids.\n * @param {string} name\n */\nfunction assertIsName(name) {\n  (0, _log.devAssert)(/^[\\w-]+$/.test(name));\n}\n/**\n * @type {boolean|undefined}\n */\n\n\nvar scopeSelectorSupported;\n/**\n * @param {boolean|undefined} val\n * @visibleForTesting\n */\n\nfunction setScopeSelectorSupportedForTesting(val) {\n  scopeSelectorSupported = val;\n}\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element} el\n * @return {boolean}\n */\n\n\nfunction isScopeSelectorSupported(el) {\n  if (scopeSelectorSupported !== undefined) {\n    return scopeSelectorSupported;\n  }\n\n  return scopeSelectorSupported = testScopeSelector(el);\n}\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element} el\n * @return {boolean}\n */\n\n\nfunction testScopeSelector(el) {\n  try {\n    var doc = el.ownerDocument;\n    var testElement = doc.createElement('div');\n    var testChild = doc.createElement('div');\n    testElement.appendChild(testChild); // NOTE(cvializ, #12383): Firefox's implementation is incomplete,\n    // therefore we test actual functionality of`:scope` as well.\n\n    return testElement.\n    /*OK*/\n    querySelector(':scope div') === testChild;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Prefixes a selector for ancestor selection. Splits in subselectors and\n * applies prefix to each.\n *\n * e.g.\n * ```\n *   prependSelectorsWith('div', '.i-amphtml-scoped');\n *   // => '.i-amphtml-scoped div'\n *   prependSelectorsWith('div, ul', ':scope');\n *   // => ':scope div, :scope ul'\n *   prependSelectorsWith('div, ul', 'article >');\n *   // => 'article > div, article > ul'\n * ```\n *\n * @param {string} selector\n * @param {string} distribute\n * @return {string}\n */\n\n\nfunction prependSelectorsWith(selector, distribute) {\n  return selector.replace(/^|,/g, \"$&\" + distribute + \" \");\n}\n/**\n * Escapes an ident (ID or a class name) to be used as a CSS selector.\n *\n * See https://drafts.csswg.org/cssom/#serialize-an-identifier.\n *\n * @param {string} ident\n * @return {string}\n */\n\n\nfunction escapeCssSelectorIdent(ident) {\n  return (0, _cssEscape.cssEscape)(ident);\n}\n/**\n * Escapes an ident in a way that can be used by :nth-child() psuedo-class.\n *\n * See https://github.com/w3c/csswg-drafts/issues/2306.\n *\n * @param {string|number} ident\n * @return {string}\n */\n\n\nfunction escapeCssSelectorNth(ident) {\n  var escaped = String(ident); // Ensure it doesn't close the nth-child psuedo class.\n\n  (0, _log.devAssert)(escaped.indexOf(')') === -1);\n  return escaped;\n}\n\n},{\"../third_party/css-escape/css-escape\":46,\"./log\":21}],12:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.waitForChild = waitForChild;\nexports.waitForChildPromise = waitForChildPromise;\nexports.waitForBodyOpen = waitForBodyOpen;\nexports.waitForBodyOpenPromise = waitForBodyOpenPromise;\nexports.removeElement = removeElement;\nexports.removeChildren = removeChildren;\nexports.copyChildren = copyChildren;\nexports.insertAfterOrAtStart = insertAfterOrAtStart;\nexports.addAttributesToElement = addAttributesToElement;\nexports.createElementWithAttributes = createElementWithAttributes;\nexports.isConnectedNode = isConnectedNode;\nexports.rootNodeFor = rootNodeFor;\nexports.isShadowRoot = isShadowRoot;\nexports.closest = closest;\nexports.closestNode = closestNode;\nexports.closestAncestorElementBySelector = closestAncestorElementBySelector;\nexports.ancestorElements = ancestorElements;\nexports.ancestorElementsByTag = ancestorElementsByTag;\nexports.childElement = childElement;\nexports.childElements = childElements;\nexports.lastChildElement = lastChildElement;\nexports.childNodes = childNodes;\nexports.childElementByAttr = childElementByAttr;\nexports.lastChildElementByAttr = lastChildElementByAttr;\nexports.childElementsByAttr = childElementsByAttr;\nexports.childElementByTag = childElementByTag;\nexports.childElementsByTag = childElementsByTag;\nexports.matches = matches;\nexports.elementByTag = elementByTag;\nexports.scopedQuerySelector = scopedQuerySelector;\nexports.scopedQuerySelectorAll = scopedQuerySelectorAll;\nexports.getDataParamsFromAttributes = getDataParamsFromAttributes;\nexports.hasNextNodeInDocumentOrder = hasNextNodeInDocumentOrder;\nexports.templateContentClone = templateContentClone;\nexports.iterateCursor = iterateCursor;\nexports.openWindowDialog = openWindowDialog;\nexports.isJsonScriptTag = isJsonScriptTag;\nexports.isJsonLdScriptTag = isJsonLdScriptTag;\nexports.isRTL = isRTL;\nexports.escapeHtml = escapeHtml;\nexports.tryFocus = tryFocus;\nexports.isIframed = isIframed;\nexports.isAmpElement = isAmpElement;\nexports.whenUpgradedToCustomElement = whenUpgradedToCustomElement;\nexports.fullscreenEnter = fullscreenEnter;\nexports.fullscreenExit = fullscreenExit;\nexports.isFullscreenElement = isFullscreenElement;\nexports.isEnabled = isEnabled;\nexports.domOrderComparator = domOrderComparator;\nexports.toggleAttribute = toggleAttribute;\nexports.getVerticalScrollbarWidth = getVerticalScrollbarWidth;\nexports.UPGRADE_TO_CUSTOMELEMENT_RESOLVER = exports.UPGRADE_TO_CUSTOMELEMENT_PROMISE = void 0;\n\nvar _promise = require(\"./utils/promise\");\n\nvar _css = require(\"./css\");\n\nvar _log = require(\"./log\");\n\nvar _object = require(\"./utils/object\");\n\nvar _string = require(\"./string\");\n\nvar _types = require(\"./types\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar HTML_ESCAPE_CHARS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;'\n};\nvar HTML_ESCAPE_REGEX = /(&|<|>|\"|'|`)/g;\n/** @const {string} */\n\nvar UPGRADE_TO_CUSTOMELEMENT_PROMISE = '__AMP_UPG_PRM';\n/** @const {string} */\n\nexports.UPGRADE_TO_CUSTOMELEMENT_PROMISE = UPGRADE_TO_CUSTOMELEMENT_PROMISE;\nvar UPGRADE_TO_CUSTOMELEMENT_RESOLVER = '__AMP_UPG_RES';\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * callback is executed.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @param {function()} callback\n */\n\nexports.UPGRADE_TO_CUSTOMELEMENT_RESOLVER = UPGRADE_TO_CUSTOMELEMENT_RESOLVER;\n\nfunction waitForChild(parent, checkFunc, callback) {\n  if (checkFunc(parent)) {\n    callback();\n    return;\n  }\n  /** @const {!Window} */\n\n\n  var win = (0, _types.toWin)(parent.ownerDocument.defaultView);\n\n  if (win.MutationObserver) {\n    /** @const {MutationObserver} */\n    var observer = new win.MutationObserver(function () {\n      if (checkFunc(parent)) {\n        observer.disconnect();\n        callback();\n      }\n    });\n    observer.observe(parent, {\n      childList: true\n    });\n  } else {\n    /** @const {number} */\n    var interval = win.setInterval(function () {\n      if (checkFunc(parent)) {\n        win.clearInterval(interval);\n        callback();\n      }\n    },\n    /* milliseconds */\n    5);\n  }\n}\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * promise is resolved.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @return {!Promise}\n */\n\n\nfunction waitForChildPromise(parent, checkFunc) {\n  return new Promise(function (resolve) {\n    waitForChild(parent, checkFunc, resolve);\n  });\n}\n/**\n * Waits for document's body to be available and ready.\n * @param {!Document} doc\n * @param {function()} callback\n */\n\n\nfunction waitForBodyOpen(doc, callback) {\n  waitForChild(doc.documentElement, function () {\n    return !!doc.body;\n  }, callback);\n}\n/**\n * Waits for document's body to be available.\n * @param {!Document} doc\n * @return {!Promise}\n */\n\n\nfunction waitForBodyOpenPromise(doc) {\n  return new Promise(function (resolve) {\n    return waitForBodyOpen(doc, resolve);\n  });\n}\n/**\n * Removes the element.\n * @param {!Element} element\n */\n\n\nfunction removeElement(element) {\n  if (element.parentElement) {\n    element.parentElement.removeChild(element);\n  }\n}\n/**\n * Removes all child nodes of the specified element.\n * @param {!Element} parent\n */\n\n\nfunction removeChildren(parent) {\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n}\n/**\n * Copies all children nodes of element \"from\" to element \"to\". Child nodes\n * are deeply cloned. Notice, that this method should be used with care and\n * preferably on smaller subtrees.\n * @param {!Element} from\n * @param {!Element|!DocumentFragment} to\n */\n\n\nfunction copyChildren(from, to) {\n  var frag = to.ownerDocument.createDocumentFragment();\n\n  for (var n = from.firstChild; n; n = n.nextSibling) {\n    frag.appendChild(n.cloneNode(true));\n  }\n\n  to.appendChild(frag);\n}\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n * @param {?Node} after\n */\n\n\nfunction insertAfterOrAtStart(root, element, after) {\n  var before = after ? after.nextSibling : root.firstChild;\n  root.insertBefore(element, before);\n}\n/**\n * Add attributes to an element.\n * @param {!Element} element\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\n\n\nfunction addAttributesToElement(element, attributes) {\n  for (var attr in attributes) {\n    element.setAttribute(attr, attributes[attr]);\n  }\n\n  return element;\n}\n/**\n * Create a new element on document with specified tagName and attributes.\n * @param {!Document} doc\n * @param {string} tagName\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\n\n\nfunction createElementWithAttributes(doc, tagName, attributes) {\n  var element = doc.createElement(tagName);\n  return addAttributesToElement(element, attributes);\n}\n/**\n * Returns true if node is connected (attached).\n * @param {!Node} node\n * @return {boolean}\n * @see https://dom.spec.whatwg.org/#connected\n */\n\n\nfunction isConnectedNode(node) {\n  var connected = node.isConnected;\n\n  if (connected !== undefined) {\n    return connected;\n  } // \"An element is connected if its shadow-including root is a document.\"\n\n\n  var n = node;\n\n  do {\n    n = rootNodeFor(n);\n\n    if (n.host) {\n      n = n.host;\n    } else {\n      break;\n    }\n  } while (true);\n\n  return n.nodeType === Node.DOCUMENT_NODE;\n}\n/**\n * Returns the root for a given node. Does not cross shadow DOM boundary.\n * @param {!Node} node\n * @return {!Node}\n */\n\n\nfunction rootNodeFor(node) {\n  if (Node.prototype.getRootNode) {\n    // Type checker says `getRootNode` may return null.\n    return node.getRootNode() || node;\n  }\n\n  var n; // Check isShadowRoot() is only needed for the polyfill case.\n\n  for (n = node; !!n.parentNode && !isShadowRoot(n); n = n.parentNode) {}\n\n  return n;\n}\n/**\n * Determines if value is actually a `ShadowRoot` node.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isShadowRoot(value) {\n  // TODO(#22733): remove in preference to dom's `rootNodeFor`.\n  if (!value) {\n    return false;\n  } // Node.nodeType == DOCUMENT_FRAGMENT to speed up the tests. Unfortunately,\n  // nodeType of DOCUMENT_FRAGMENT is used currently for ShadowRoot nodes.\n\n\n  if (value.tagName == 'I-AMPHTML-SHADOW-ROOT') {\n    return true;\n  }\n\n  return value.nodeType ==\n  /* DOCUMENT_FRAGMENT */\n  11 && Object.prototype.toString.call(value) === '[object ShadowRoot]';\n}\n/**\n * Finds the closest element that satisfies the callback from this element\n * up the DOM subtree.\n * @param {!Element} element\n * @param {function(!Element):boolean} callback\n * @param {Element=} opt_stopAt optional elemnt to stop the search at.\n * @return {?Element}\n */\n\n\nfunction closest(element, callback, opt_stopAt) {\n  for (var el = element; el && el !== opt_stopAt; el = el.parentElement) {\n    if (callback(el)) {\n      return el;\n    }\n  }\n\n  return null;\n}\n/**\n * Finds the closest node that satisfies the callback from this node\n * up the DOM subtree.\n * @param {!Node} node\n * @param {function(!Node):boolean} callback\n * @return {?Node}\n */\n\n\nfunction closestNode(node, callback) {\n  for (var n = node; n; n = n.parentNode) {\n    if (callback(n)) {\n      return n;\n    }\n  }\n\n  return null;\n}\n/**\n * Finds the closest ancestor element with the specified selector from this\n * element.\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element} closest ancestor if found.\n */\n\n\nfunction closestAncestorElementBySelector(element, selector) {\n  if (element.closest) {\n    return element.closest(selector);\n  }\n\n  return closest(element, function (el) {\n    return matches(el, selector);\n  });\n}\n/**\n * Finds all ancestor elements that satisfy predicate.\n * @param {!Element} child\n * @param {function(!Element):boolean} predicate\n * @return {!Array<!Element>}\n */\n\n\nfunction ancestorElements(child, predicate) {\n  var ancestors = [];\n\n  for (var ancestor = child.parentElement; ancestor; ancestor = ancestor.parentElement) {\n    if (predicate(ancestor)) {\n      ancestors.push(ancestor);\n    }\n  }\n\n  return ancestors;\n}\n/**\n * Finds all ancestor elements that has the specified tag name.\n * @param {!Element} child\n * @param {string} tagName\n * @return {!Array<!Element>}\n */\n\n\nfunction ancestorElementsByTag(child, tagName) {\n  (0, _css.assertIsName)(tagName);\n  tagName = tagName.toUpperCase();\n  return ancestorElements(child, function (el) {\n    return el.tagName == tagName;\n  });\n}\n/**\n * Finds the first child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\n\n\nfunction childElement(parent, callback) {\n  for (var child = parent.firstElementChild; child; child = child.nextElementSibling) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n\n  return null;\n}\n/**\n * Finds all child elements that satisfy the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {!Array<!Element>}\n */\n\n\nfunction childElements(parent, callback) {\n  var children = [];\n\n  for (var child = parent.firstElementChild; child; child = child.nextElementSibling) {\n    if (callback(child)) {\n      children.push(child);\n    }\n  }\n\n  return children;\n}\n/**\n * Finds the last child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\n\n\nfunction lastChildElement(parent, callback) {\n  for (var child = parent.lastElementChild; child; child = child.previousElementSibling) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n\n  return null;\n}\n/**\n * Finds all child nodes that satisfy the callback.\n * These nodes can include Text, Comment and other child nodes.\n * @param {!Node} parent\n * @param {function(!Node):boolean} callback\n * @return {!Array<!Node>}\n */\n\n\nfunction childNodes(parent, callback) {\n  var nodes = [];\n\n  for (var child = parent.firstChild; child; child = child.nextSibling) {\n    if (callback(child)) {\n      nodes.push(child);\n    }\n  }\n\n  return nodes;\n}\n/**\n * Finds the first child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\n\n\nfunction childElementByAttr(parent, attr) {\n  (0, _css.assertIsName)(attr);\n  return (\n    /*OK*/\n    scopedQuerySelector(parent, \"> [\" + attr + \"]\")\n  );\n}\n/**\n * Finds the last child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\n\n\nfunction lastChildElementByAttr(parent, attr) {\n  (0, _css.assertIsName)(attr);\n  return lastChildElement(parent, function (el) {\n    return el.hasAttribute(attr);\n  });\n}\n/**\n * Finds all child elements that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {!NodeList<!Element>}\n */\n\n\nfunction childElementsByAttr(parent, attr) {\n  (0, _css.assertIsName)(attr);\n  return (\n    /*OK*/\n    scopedQuerySelectorAll(parent, \"> [\" + attr + \"]\")\n  );\n}\n/**\n * Finds the first child element that has the specified tag name.\n * @param {!Element} parent\n * @param {string} tagName\n * @return {?Element}\n */\n\n\nfunction childElementByTag(parent, tagName) {\n  (0, _css.assertIsName)(tagName);\n  return (\n    /*OK*/\n    scopedQuerySelector(parent, \"> \" + tagName)\n  );\n}\n/**\n * Finds all child elements with the specified tag name.\n * @param {!Element} parent\n * @param {string} tagName\n * @return {!NodeList<!Element>}\n */\n\n\nfunction childElementsByTag(parent, tagName) {\n  (0, _css.assertIsName)(tagName);\n  return (\n    /*OK*/\n    scopedQuerySelectorAll(parent, \"> \" + tagName)\n  );\n}\n/**\n * Checks if the given element matches the selector\n * @param  {!Element} el The element to verify\n * @param  {string} selector The selector to check against\n * @return {boolean} True if the element matched the selector. False otherwise.\n */\n\n\nfunction matches(el, selector) {\n  var matcher = el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector || el.oMatchesSelector;\n\n  if (matcher) {\n    return matcher.call(el, selector);\n  }\n\n  return false; // IE8 always returns false.\n}\n/**\n * Finds the first descendant element with the specified name.\n * @param {!Element|!Document|!ShadowRoot} element\n * @param {string} tagName\n * @return {?Element}\n */\n\n\nfunction elementByTag(element, tagName) {\n  (0, _css.assertIsName)(tagName);\n  return element.\n  /*OK*/\n  querySelector(tagName);\n}\n/**\n * Finds all elements that matche `selector`, scoped inside `root`\n * for user-agents that do not support native scoping.\n *\n * This method isn't required for modern builds, can be removed.\n *\n * @param {!Element} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\n\n\nfunction scopedQuerySelectionFallback(root, selector) {\n  var unique = 'i-amphtml-scoped';\n  root.classList.add(unique);\n  var scopedSelector = (0, _css.prependSelectorsWith)(selector, \".\" + unique);\n  var elements = root.\n  /*OK*/\n  querySelectorAll(scopedSelector);\n  root.classList.remove(unique);\n  return elements;\n}\n/**\n * Finds the first element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element} root\n * @param {string} selector\n * @return {?Element}\n */\n\n\nfunction scopedQuerySelector(root, selector) {\n  if ((0, _css.isScopeSelectorSupported)(root)) {\n    return root.\n    /*OK*/\n    querySelector((0, _css.prependSelectorsWith)(selector, ':scope'));\n  } // Only IE.\n\n\n  var fallbackResult = scopedQuerySelectionFallback(root, selector);\n  return fallbackResult[0] === undefined ? null : fallbackResult[0];\n}\n/**\n * Finds every element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\n\n\nfunction scopedQuerySelectorAll(root, selector) {\n  if ((0, _css.isScopeSelectorSupported)(root)) {\n    return root.\n    /*OK*/\n    querySelectorAll((0, _css.prependSelectorsWith)(selector, ':scope'));\n  } // Only IE.\n\n\n  return scopedQuerySelectionFallback(root, selector);\n}\n/**\n * Returns element data-param- attributes as url parameters key-value pairs.\n * e.g. data-param-some-attr=value -> {someAttr: value}.\n * @param {!Element} element\n * @param {function(string):string=} opt_computeParamNameFunc to compute the\n *    parameter name, get passed the camel-case parameter name.\n * @param {!RegExp=} opt_paramPattern Regex pattern to match data attributes.\n * @return {!JsonObject}\n */\n\n\nfunction getDataParamsFromAttributes(element, opt_computeParamNameFunc, opt_paramPattern) {\n  var computeParamNameFunc = opt_computeParamNameFunc || function (key) {\n    return key;\n  };\n\n  var dataset = element.dataset;\n  var params = (0, _object.dict)();\n  var paramPattern = opt_paramPattern ? opt_paramPattern : /^param(.+)/;\n\n  for (var key in dataset) {\n    var _matches = key.match(paramPattern);\n\n    if (_matches) {\n      var param = _matches[1][0].toLowerCase() + _matches[1].substr(1);\n\n      params[computeParamNameFunc(param)] = dataset[key];\n    }\n  }\n\n  return params;\n}\n/**\n * Whether the element have a next node in the document order.\n * This means either:\n *  a. The element itself has a nextSibling.\n *  b. Any of the element ancestors has a nextSibling.\n * @param {!Element} element\n * @param {?Node} opt_stopNode\n * @return {boolean}\n */\n\n\nfunction hasNextNodeInDocumentOrder(element, opt_stopNode) {\n  var currentElement = element;\n\n  do {\n    if (currentElement.nextSibling) {\n      return true;\n    }\n  } while ((currentElement = currentElement.parentNode) && currentElement != opt_stopNode);\n\n  return false;\n}\n/**\n * Returns a clone of the content of a template element.\n *\n * Polyfill to replace .content access for browsers that do not support\n * HTMLTemplateElements natively.\n *\n * @param {!HTMLTemplateElement|!Element} template\n * @return {!DocumentFragment}\n */\n\n\nfunction templateContentClone(template) {\n  if ('content' in template) {\n    return template.content.cloneNode(true);\n  } else {\n    var content = template.ownerDocument.createDocumentFragment();\n    copyChildren(template, content);\n    return content;\n  }\n}\n/**\n * Iterate over an array-like.\n * Test cases: https://jsbench.github.io/#f638cacc866a1b2d6e517e6cfa900d6b\n * @param {!IArrayLike<T>} iterable\n * @param {function(T, number)} cb\n * @template T\n */\n\n\nfunction iterateCursor(iterable, cb) {\n  var length = iterable.length;\n\n  for (var i = 0; i < length; i++) {\n    cb(iterable[i], i);\n  }\n}\n/**\n * This method wraps around window's open method. It first tries to execute\n * `open` call with the provided target and if it fails, it retries the call\n * with the `_top` target. This is necessary given that in some embedding\n * scenarios, such as iOS' WKWebView, navigation to `_blank` and other targets\n * is blocked by default.\n *\n * @param {!Window} win\n * @param {string} url\n * @param {string} target\n * @param {string=} opt_features\n * @return {?Window}\n */\n\n\nfunction openWindowDialog(win, url, target, opt_features) {\n  // Try first with the specified target. If we're inside the WKWebView or\n  // a similar environments, this method is expected to fail by default for\n  // all targets except `_top`.\n  var res;\n\n  try {\n    res = win.open(url, target, opt_features);\n  } catch (e) {\n    (0, _log.dev)().error('DOM', 'Failed to open url on target: ', target, e);\n  } // Then try with `_top` target.\n\n\n  if (!res && target != '_top' && !(0, _string.includes)(opt_features || '', 'noopener')) {\n    res = win.open(url, '_top');\n  }\n\n  return res;\n}\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isJsonScriptTag(element) {\n  return element.tagName == 'SCRIPT' && element.hasAttribute('type') && element.getAttribute('type').toUpperCase() == 'APPLICATION/JSON';\n}\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isJsonLdScriptTag(element) {\n  return element.tagName == 'SCRIPT' && element.getAttribute('type').toUpperCase() == 'APPLICATION/LD+JSON';\n}\n/**\n * Whether the page's direction is right to left or not.\n * @param {!Document} doc\n * @return {boolean}\n */\n\n\nfunction isRTL(doc) {\n  var dir = doc.body.getAttribute('dir') || doc.documentElement.getAttribute('dir') || 'ltr';\n  return dir == 'rtl';\n}\n/**\n * Escapes `<`, `>` and other HTML charcaters with their escaped forms.\n * @param {string} text\n * @return {string}\n */\n\n\nfunction escapeHtml(text) {\n  if (!text) {\n    return text;\n  }\n\n  return text.replace(HTML_ESCAPE_REGEX, escapeHtmlChar);\n}\n/**\n * @param {string} c\n * @return {string}\n */\n\n\nfunction escapeHtmlChar(c) {\n  return HTML_ESCAPE_CHARS[c];\n}\n/**\n * Tries to focus on the given element; fails silently if browser throws an\n * exception.\n * @param {!Element} element\n */\n\n\nfunction tryFocus(element) {\n  try {\n    element.\n    /*OK*/\n    focus();\n  } catch (e) {// IE <= 7 may throw exceptions when focusing on hidden items.\n  }\n}\n/**\n * Whether the given window is in an iframe or not.\n * @param {!Window} win\n * @return {boolean}\n */\n\n\nfunction isIframed(win) {\n  return win.parent && win.parent != win;\n}\n/**\n * Determines if this element is an AMP element\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isAmpElement(element) {\n  var tag = element.tagName; // Use prefix to recognize AMP element. This is necessary because stub\n  // may not be attached yet.\n\n  return (0, _string.startsWith)(tag, 'AMP-') && // Some \"amp-*\" elements are not really AMP elements. :smh:\n  !(tag == 'AMP-STICKY-AD-TOP-PADDING' || tag == 'AMP-BODY');\n}\n/**\n * Return a promise that resolve when an AMP element upgrade from HTMLElement\n * to CustomElement\n * @param {!Element} element\n * @return {!Promise<!Element>}\n */\n\n\nfunction whenUpgradedToCustomElement(element) {\n  (0, _log.devAssert)(isAmpElement(element), 'element is not AmpElement');\n\n  if (element.createdCallback) {\n    // Element already is CustomElement;\n    return Promise.resolve(element);\n  } // If Element is still HTMLElement, wait for it to upgrade to customElement\n  // Note: use pure string to avoid obfuscation between versions.\n\n\n  if (!element[UPGRADE_TO_CUSTOMELEMENT_PROMISE]) {\n    var deferred = new _promise.Deferred();\n    element[UPGRADE_TO_CUSTOMELEMENT_PROMISE] = deferred.promise;\n    element[UPGRADE_TO_CUSTOMELEMENT_RESOLVER] = deferred.resolve;\n  }\n\n  return element[UPGRADE_TO_CUSTOMELEMENT_PROMISE];\n}\n/**\n * Replacement for `Element.requestFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen\n * @param {!Element} element\n */\n\n\nfunction fullscreenEnter(element) {\n  var requestFs = element.requestFullscreen || element.requestFullScreen || element.webkitRequestFullscreen || element.webkitEnterFullscreen || element.msRequestFullscreen || element.mozRequestFullScreen;\n\n  if (requestFs) {\n    requestFs.call(element);\n  }\n}\n/**\n * Replacement for `Document.exitFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/exitFullscreen\n * @param {!Element} element\n */\n\n\nfunction fullscreenExit(element) {\n  var elementBoundExit = element.cancelFullScreen || element.exitFullscreen || element.webkitExitFullscreen || element.webkitCancelFullScreen || element.mozCancelFullScreen || element.msExitFullscreen;\n\n  if (elementBoundExit) {\n    elementBoundExit.call(element);\n    return;\n  }\n\n  var ownerDocument = element.ownerDocument;\n\n  if (!ownerDocument) {\n    return;\n  }\n\n  var docBoundExit = ownerDocument.cancelFullScreen || ownerDocument.exitFullscreencancelFullScreen || ownerDocument.webkitExitFullscreencancelFullScreen || ownerDocument.webkitCancelFullScreencancelFullScreen || ownerDocument.mozCancelFullScreencancelFullScreen || ownerDocument.msExitFullscreen;\n\n  if (docBoundExit) {\n    docBoundExit.call(ownerDocument);\n  }\n}\n/**\n * Replacement for `Document.fullscreenElement`.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/fullscreenElement\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isFullscreenElement(element) {\n  var webkitDisplayingFullscreen = element.webkitDisplayingFullscreen;\n\n  if (webkitDisplayingFullscreen !== undefined) {\n    return webkitDisplayingFullscreen;\n  }\n\n  var ownerDocument = element.ownerDocument;\n\n  if (!ownerDocument) {\n    return false;\n  }\n\n  var fullscreenElement = ownerDocument.fullscreenElement || ownerDocument.webkitFullscreenElement || ownerDocument.mozFullScreenElement || ownerDocument.webkitCurrentFullScreenElement;\n  return fullscreenElement == element;\n}\n/**\n * Returns true if node is not disabled.\n *\n * IE8 can return false positives, see {@link matches}.\n * @param {!Element} element\n * @return {boolean}\n * @see https://www.w3.org/TR/html5/forms.html#concept-fe-disabled\n */\n\n\nfunction isEnabled(element) {\n  return !(element.disabled || matches(element, ':disabled'));\n}\n/**\n * A sorting comparator that sorts elements in DOM tree order.\n * A first sibling is sorted to be before its nextSibling.\n * A parent node is sorted to be before a child.\n * See https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n *\n * @param {!Element} element1\n * @param {!Element} element2\n * @return {number}\n */\n\n\nfunction domOrderComparator(element1, element2) {\n  if (element1 === element2) {\n    return 0;\n  }\n\n  var pos = element1.compareDocumentPosition(element2);\n  var precedingOrContains = Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS; // if fe2 is preceding or contains fe1 then, fe1 is after fe2\n\n  if (pos & precedingOrContains) {\n    return 1;\n  } // if fe2 is following or contained by fe1, then fe1 is before fe2\n\n\n  return -1;\n}\n/**\n * Like `Element.prototype.toggleAttribute`. This either toggles an attribute\n * on by adding an attribute with an empty value, or toggles it off by removing\n * the attribute. This does not mutate the element if the new state matches\n * the existing state.\n * @param {!Element} element An element to toggle the attribute for.\n * @param {string} name The name of the attribute.\n * @param {boolean=} forced Whether the attribute should be forced on/off. If\n *    not specified, it will be toggled from the current state.\n * @return {boolean} Whether or not the element now has the attribute.\n */\n\n\nfunction toggleAttribute(element, name, forced) {\n  var hasAttribute = element.hasAttribute(name);\n  var enabled = forced !== undefined ? forced : !hasAttribute;\n\n  if (enabled !== hasAttribute) {\n    if (enabled) {\n      element.setAttribute(name, '');\n    } else {\n      element.removeAttribute(name);\n    }\n  }\n\n  return enabled;\n}\n/**\n * @param {!Window} win\n * @return {number} The width of the vertical scrollbar, in pixels.\n */\n\n\nfunction getVerticalScrollbarWidth(win) {\n  var documentElement = win.document.documentElement;\n  var windowWidth = win.\n  /*OK*/\n  innerWidth;\n  var documentWidth = documentElement.\n  /*OK*/\n  clientWidth;\n  return windowWidth - documentWidth;\n}\n\n},{\"./css\":11,\"./log\":21,\"./string\":32,\"./types\":35,\"./utils/object\":42,\"./utils/promise\":43}],13:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getElementService = getElementService;\nexports.getElementServiceIfAvailable = getElementServiceIfAvailable;\nexports.getElementServiceForDoc = getElementServiceForDoc;\nexports.getElementServiceIfAvailableForDoc = getElementServiceIfAvailableForDoc;\nexports.getElementServiceIfAvailableForDocInEmbedScope = getElementServiceIfAvailableForDocInEmbedScope;\nexports.extensionScriptsInNode = extensionScriptsInNode;\nexports.isExtensionScriptInNode = isExtensionScriptInNode;\n\nvar dom = _interopRequireWildcard(require(\"./dom\"));\n\nvar _service = require(\"./service\");\n\nvar _types = require(\"./types\");\n\nvar _log = require(\"./log\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nfunction getElementService(win, id, extension, opt_element) {\n  return getElementServiceIfAvailable(win, id, extension, opt_element).then(function (service) {\n    return assertService(service, id, extension);\n  });\n}\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\n\n\nfunction getElementServiceIfAvailable(win, id, extension, opt_element) {\n  var s = (0, _service.getServicePromiseOrNull)(win, id);\n\n  if (s) {\n    return (\n      /** @type {!Promise<?Object>} */\n      s\n    );\n  }\n\n  return getElementServicePromiseOrNull(win, id, extension, opt_element);\n}\n/**\n * @param {!Window} win\n * @param {string} elementName Name of an extended custom element.\n * @return {boolean} Whether this element is scheduled to be loaded.\n */\n\n\nfunction isElementScheduled(win, elementName) {\n  // Set in custom-element.js\n  if (!win.__AMP_EXTENDED_ELEMENTS) {\n    return false;\n  }\n\n  return !!win.__AMP_EXTENDED_ELEMENTS[elementName];\n}\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\n\n\nfunction getElementServiceForDoc(element, id, extension, opt_element) {\n  return getElementServiceIfAvailableForDoc(element, id, extension, opt_element).then(function (service) {\n    return assertService(service, id, extension);\n  });\n}\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\n\n\nfunction getElementServiceIfAvailableForDoc(element, id, extension, opt_element) {\n  var s = (0, _service.getServicePromiseOrNullForDoc)(element, id);\n\n  if (s) {\n    return (\n      /** @type {!Promise<?Object>} */\n      s\n    );\n  }\n\n  var ampdoc = (0, _service.getAmpdoc)(element);\n  return ampdoc.waitForBodyOpen().then(function () {\n    return waitForExtensionIfPresent(ampdoc.win, extension, ampdoc.win.document.head);\n  }).then(function () {\n    // If this service is provided by an element, then we can't depend on\n    // the service (they may not use the element).\n    if (opt_element) {\n      return (0, _service.getServicePromiseOrNullForDoc)(element, id);\n    } else if (isElementScheduled(ampdoc.win, extension)) {\n      return (0, _service.getServicePromiseForDoc)(element, id);\n    }\n\n    return null;\n  });\n}\n/**\n * Returns a promise for service for the given id in the embed scope of\n * a given element, if it exists. Falls back to ampdoc scope if the element\n * is not embedded.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom element that provides\n *     the implementation of this service.\n * @return {!Promise<?Object>}\n */\n\n\nfunction getElementServiceIfAvailableForDocInEmbedScope(element, id, extension) {\n  var s = (0, _service.getExistingServiceForDocInEmbedScope)(element, id);\n\n  if (s) {\n    return (\n      /** @type {!Promise<?Object>} */\n      Promise.resolve(s)\n    );\n  }\n\n  var win = (0, _types.toWin)(element.ownerDocument.defaultView);\n  var topWin = (0, _service.getTopWindow)(win); // In embeds, doc services are stored on the embed window.\n\n  if (win !== topWin) {\n    return getElementServicePromiseOrNull(win, id, extension);\n  } else {\n    // Only fallback to element's ampdoc (top-level) if not embedded.\n    return getElementServiceIfAvailableForDoc(element, id, extension);\n  }\n}\n/**\n * Throws user error if `service` is null.\n * @param {Object} service\n * @param {string} id\n * @param {string} extension\n * @return {!Object}\n * @private\n * @closurePrimitive {asserts.matchesReturn}\n */\n\n\nfunction assertService(service, id, extension) {\n  return (\n    /** @type {!Object} */\n    (0, _log.userAssert)(service, 'Service %s was requested to be provided through %s, ' + 'but %s is not loaded in the current page. To fix this ' + 'problem load the JavaScript file for %s in this page.', id, extension, extension, extension)\n  );\n}\n/**\n * Get list of all the extension JS files.\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @return {!Array<string>}\n */\n\n\nfunction extensionScriptsInNode(head) {\n  // ampdoc.getHeadNode() can return null.\n  if (!head) {\n    return [];\n  }\n\n  var scripts = {}; // Note: Some extensions don't have [custom-element] or [custom-template]\n  // e.g. amp-viewer-integration.\n\n  var list = head.querySelectorAll('script[custom-element],script[custom-template]');\n\n  for (var i = 0; i < list.length; i++) {\n    var script = list[i];\n    var name = script.getAttribute('custom-element') || script.getAttribute('custom-template');\n    scripts[name] = true;\n  }\n\n  return Object.keys(scripts);\n}\n/**\n * Waits for body to be present then verifies that an extension script is\n * present in head for installation.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} extensionId\n * @return {!Promise<boolean>}\n */\n\n\nfunction isExtensionScriptInNode(ampdoc, extensionId) {\n  return ampdoc.waitForBodyOpen().then(function () {\n    return extensionScriptInNode(ampdoc.getHeadNode(), extensionId);\n  });\n}\n/**\n * Verifies that an extension script is present in head for\n * installation.\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @param {string} extensionId\n * @return {boolean}\n * @private\n */\n\n\nfunction extensionScriptInNode(head, extensionId) {\n  return extensionScriptsInNode(head).includes(extensionId);\n}\n/**\n * Waits for an extension if its script is present\n * @param {!Window} win\n * @param {string} extension\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @return {!Promise}\n * @private\n */\n\n\nfunction waitForExtensionIfPresent(win, extension, head) {\n  /**\n   * If there is an extension script wait for it to load before trying\n   * to get the service. Prevents a race condition when everything but\n   * the extensions is in cache. If there is no script then it's either\n   * not present, or the service was defined by a test. In those cases\n   * we don't wait around for an extension that does not exist.\n   */\n  // TODO(jpettitt) investigate registerExtension to short circuit\n  // the dom call in extensionScriptsInNode()\n  if (!extensionScriptInNode(head, extension)) {\n    return Promise.resolve();\n  }\n\n  var extensions = (0, _service.getService)(win, 'extensions');\n  return (\n    /** @type {!Promise<?Object>} */\n    extensions.waitForExtension(win, extension)\n  );\n}\n/**\n * Returns the promise for service with `id` on the given window if available.\n * Otherwise, resolves with null (service was not registered).\n * @param {!Window} win\n * @param {string} id\n * @param {string} extension\n * @param {boolean=} opt_element\n * @return {!Promise<Object>}\n * @private\n */\n\n\nfunction getElementServicePromiseOrNull(win, id, extension, opt_element) {\n  return dom.waitForBodyOpenPromise(win.document).then(function () {\n    return waitForExtensionIfPresent(win, extension, win.document.head);\n  }).then(function () {\n    // If this service is provided by an element, then we can't depend on\n    // the service (they may not use the element).\n    if (opt_element) {\n      return (0, _service.getServicePromiseOrNull)(win, id);\n    } else if (isElementScheduled(win, extension)) {\n      return (0, _service.getServicePromise)(win, id);\n    }\n\n    return null;\n  });\n}\n\n},{\"./dom\":12,\"./log\":21,\"./service\":29,\"./types\":35}],14:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.reportErrorForWin = reportErrorForWin;\nexports.reportError = reportError;\nexports.cancellation = cancellation;\nexports.isCancellation = isCancellation;\nexports.blockedByConsentError = blockedByConsentError;\nexports.isBlockedByConsent = isBlockedByConsent;\nexports.installErrorReporting = installErrorReporting;\nexports.reportErrorToServerOrViewer = reportErrorToServerOrViewer;\nexports.maybeReportErrorToViewer = maybeReportErrorToViewer;\nexports.errorReportingDataForViewer = errorReportingDataForViewer;\nexports.getErrorReportData = getErrorReportData;\nexports.detectNonAmpJs = detectNonAmpJs;\nexports.resetAccumulatedErrorMessagesForTesting = resetAccumulatedErrorMessagesForTesting;\nexports.detectJsEngineFromStack = detectJsEngineFromStack;\nexports.reportErrorToAnalytics = reportErrorToAnalytics;\n\nvar _ampEvents = require(\"./amp-events\");\n\nvar _services = require(\"./services\");\n\nvar _log = require(\"./log\");\n\nvar _object = require(\"./utils/object\");\n\nvar _experiments = require(\"./experiments\");\n\nvar _exponentialBackoff = require(\"./exponential-backoff\");\n\nvar _mode = require(\"./mode\");\n\nvar _eventHelper = require(\"./event-helper\");\n\nvar _url = require(\"./url\");\n\nvar _styleInstaller = require(\"./style-installer\");\n\nvar _string = require(\"./string\");\n\nvar _analytics = require(\"./analytics\");\n\nvar _config = require(\"./config\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @const {string}\n */\nvar CANCELLED = 'CANCELLED';\n/**\n * @const {string}\n */\n\nvar BLOCK_BY_CONSENT = 'BLOCK_BY_CONSENT';\n/**\n * @const {string}\n */\n\nvar ABORTED = 'AbortError';\n/**\n * The threshold for errors throttled because nothing can be done about\n * them, but we'd still like to report the rough number.\n * @const {number}\n */\n\nvar NON_ACTIONABLE_ERROR_THROTTLE_THRESHOLD = 0.001;\n/**\n * The threshold for errors throttled because nothing can be done about\n * them, but we'd still like to report the rough number.\n * @const {number}\n */\n\nvar USER_ERROR_THROTTLE_THRESHOLD = 0.1;\n/**\n * Collects error messages, so they can be included in subsequent reports.\n * That allows identifying errors that might be caused by previous errors.\n */\n\nvar accumulatedErrorMessages = self.__AMP_ERRORS || []; // Use a true global, to avoid multi-module inclusion issues.\n\nself.__AMP_ERRORS = accumulatedErrorMessages;\n/**\n * Pushes element into array, keeping at most the most recent limit elements\n *\n * @param {!Array<T>} array\n * @param {T} element\n * @param {number} limit\n * @template T\n */\n\nfunction pushLimit(array, element, limit) {\n  if (array.length >= limit) {\n    array.splice(0, array.length - limit + 1);\n  }\n\n  array.push(element);\n}\n/**\n * A wrapper around our exponentialBackoff, to lazy initialize it to avoid an\n * un-DCE'able side-effect.\n * @param {function()} work the function to execute after backoff\n * @return {number} the setTimeout id\n */\n\n\nvar _reportingBackoff = function reportingBackoff(work) {\n  // Set reportingBackoff as the lazy-created function. JS Vooodoooo.\n  _reportingBackoff = (0, _exponentialBackoff.exponentialBackoff)(1.5);\n  return _reportingBackoff(work);\n};\n/**\n * Attempts to stringify a value, falling back to String.\n * @param {*} value\n * @return {string}\n */\n\n\nfunction tryJsonStringify(value) {\n  try {\n    // Cast is fine, because we really don't care here. Just trying.\n    return JSON.stringify(\n    /** @type {!JsonObject} */\n    value);\n  } catch (e) {\n    return String(value);\n  }\n}\n/**\n * The true JS engine, as detected by inspecting an Error stack. This should be\n * used with the userAgent to tell definitely. I.e., Chrome on iOS is really a\n * Safari JS engine.\n */\n\n\nvar detectedJsEngine;\n/**\n * @param {!Window} win\n * @param {*} error\n * @param {!Element=} opt_associatedElement\n */\n\nfunction reportErrorForWin(win, error, opt_associatedElement) {\n  reportError(error, opt_associatedElement);\n\n  if (error && !!win && (0, _log.isUserErrorMessage)(error.message) && !(0, _log.isUserErrorEmbed)(error.message)) {\n    reportErrorToAnalytics(\n    /** @type {!Error} */\n    error, win);\n  }\n}\n/**\n * Reports an error. If the error has an \"associatedElement\" property\n * the element is marked with the `i-amphtml-element-error` and displays\n * the message itself. The message is always send to the console.\n * If the error has a \"messageArray\" property, that array is logged.\n * This way one gets the native fidelity of the console for things like\n * elements instead of stringification.\n * @param {*} error\n * @param {!Element=} opt_associatedElement\n * @return {!Error}\n */\n\n\nfunction reportError(error, opt_associatedElement) {\n  try {\n    // Convert error to the expected type.\n    var isValidError;\n\n    if (error) {\n      if (error.message !== undefined) {\n        error = (0, _log.duplicateErrorIfNecessary)(\n        /** @type {!Error} */\n        error);\n        isValidError = true;\n      } else {\n        var origError = error;\n        error = new Error(tryJsonStringify(origError));\n        error.origError = origError;\n      }\n    } else {\n      error = new Error('Unknown error');\n    } // Report if error is not an expected type.\n\n\n    if (!isValidError && (0, _mode.getMode)().localDev && !(0, _mode.getMode)().test) {\n      setTimeout(function () {\n        var rethrow = new Error('_reported_ Error reported incorrectly: ' + error);\n        throw rethrow;\n      });\n    }\n\n    if (error.reported) {\n      return (\n        /** @type {!Error} */\n        error\n      );\n    }\n\n    error.reported = true; // Update element.\n\n    var element = opt_associatedElement || error.associatedElement;\n\n    if (element && element.classList) {\n      element.classList.add('i-amphtml-error');\n\n      if ((0, _mode.getMode)().development) {\n        element.classList.add('i-amphtml-element-error');\n        element.setAttribute('error-message', error.message);\n      }\n    } // Report to console.\n\n\n    if (self.console) {\n      var output = console.error || console.log;\n\n      if (error.messageArray) {\n        output.apply(console, error.messageArray);\n      } else {\n        if (element) {\n          output.call(console, error.message, element);\n        } else if (!(0, _mode.getMode)().minified) {\n          output.call(console, error.stack);\n        } else {\n          output.call(console, error.message);\n        }\n      }\n    }\n\n    if (element && element.dispatchCustomEventForTesting) {\n      element.dispatchCustomEventForTesting(_ampEvents.AmpEvents.ERROR, error.message);\n    } // 'call' to make linter happy. And .call to make compiler happy\n    // that expects some @this.\n\n\n    onError['call'](undefined, undefined, undefined, undefined, undefined, error);\n  } catch (errorReportingError) {\n    setTimeout(function () {\n      throw errorReportingError;\n    });\n  }\n\n  return (\n    /** @type {!Error} */\n    error\n  );\n}\n/**\n * Returns an error for a cancellation of a promise.\n * @return {!Error}\n */\n\n\nfunction cancellation() {\n  return new Error(CANCELLED);\n}\n/**\n * @param {*} errorOrMessage\n * @return {boolean}\n */\n\n\nfunction isCancellation(errorOrMessage) {\n  if (!errorOrMessage) {\n    return false;\n  }\n\n  if (typeof errorOrMessage == 'string') {\n    return (0, _string.startsWith)(errorOrMessage, CANCELLED);\n  }\n\n  if (typeof errorOrMessage.message == 'string') {\n    return (0, _string.startsWith)(errorOrMessage.message, CANCELLED);\n  }\n\n  return false;\n}\n/**\n * Returns an error for component blocked by consent\n * @return {!Error}\n */\n\n\nfunction blockedByConsentError() {\n  return new Error(BLOCK_BY_CONSENT);\n}\n/**\n * @param {*} errorOrMessage\n * @return {boolean}\n */\n\n\nfunction isBlockedByConsent(errorOrMessage) {\n  if (!errorOrMessage) {\n    return false;\n  }\n\n  if (typeof errorOrMessage == 'string') {\n    return (0, _string.startsWith)(errorOrMessage, BLOCK_BY_CONSENT);\n  }\n\n  if (typeof errorOrMessage.message == 'string') {\n    return (0, _string.startsWith)(errorOrMessage.message, BLOCK_BY_CONSENT);\n  }\n\n  return false;\n}\n/**\n * Install handling of global unhandled exceptions.\n * @param {!Window} win\n */\n\n\nfunction installErrorReporting(win) {\n  win.onerror =\n  /** @type {!Function} */\n  onError;\n  win.addEventListener('unhandledrejection', function (event) {\n    if (event.reason && (event.reason.message === CANCELLED || event.reason.message === BLOCK_BY_CONSENT || event.reason.message === ABORTED)) {\n      event.preventDefault();\n      return;\n    }\n\n    reportError(event.reason || new Error('rejected promise ' + event));\n  });\n}\n/**\n * Signature designed, so it can work with window.onerror\n * @param {string|undefined} message\n * @param {string|undefined} filename\n * @param {string|undefined} line\n * @param {string|undefined} col\n * @param {*|undefined} error\n * @this {!Window|undefined}\n */\n\n\nfunction onError(message, filename, line, col, error) {\n  var _this = this;\n\n  // Make an attempt to unhide the body.\n  if (this && this.document) {\n    (0, _styleInstaller.makeBodyVisibleRecovery)(this.document);\n  }\n\n  if ((0, _mode.getMode)().localDev || (0, _mode.getMode)().development || (0, _mode.getMode)().test) {\n    return;\n  }\n\n  var hasNonAmpJs = false;\n\n  try {\n    hasNonAmpJs = detectNonAmpJs(self);\n  } catch (ignore) {// Ignore errors during error report generation.\n  }\n\n  if (hasNonAmpJs && Math.random() > 0.01) {\n    // Only report 1% of errors on pages with non-AMP JS.\n    // These errors can almost never be acted upon, but spikes such as\n    // due to buggy browser extensions may be helpful to notify authors.\n    return;\n  }\n\n  var data = getErrorReportData(message, filename, line, col, error, hasNonAmpJs);\n\n  if (data) {\n    _reportingBackoff(function () {\n      try {\n        return reportErrorToServerOrViewer(_this,\n        /** @type {!JsonObject} */\n        data).catch(function () {// catch async errors to avoid recursive errors.\n        });\n      } catch (e) {// catch async errors to avoid recursive errors.\n      }\n    });\n  }\n}\n/**\n * Passes the given error data to either server or viewer.\n * @param {!Window} win\n * @param {!JsonObject} data Data from `getErrorReportData`.\n * @return {Promise<undefined>}\n */\n\n\nfunction reportErrorToServerOrViewer(win, data) {\n  // Report the error to viewer if it has the capability. The data passed\n  // to the viewer is exactly the same as the data passed to the server\n  // below.\n  return maybeReportErrorToViewer(win, data).then(function (reportedErrorToViewer) {\n    if (!reportedErrorToViewer) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('POST', _config.urls.errorReporting, true);\n      xhr.send(JSON.stringify(data));\n    }\n  });\n}\n/**\n * Passes the given error data to the viewer if the following criteria is met:\n * - The viewer is a trusted viewer\n * - The viewer has the `errorReporter` capability\n * - The AMP doc is in single doc mode\n * - The AMP doc is opted-in for error interception (`<html>` tag has the\n *   `report-errors-to-viewer` attribute)\n *\n * @param {!Window} win\n * @param {!JsonObject} data Data from `getErrorReportData`.\n * @return {!Promise<boolean>} `Promise<True>` if the error was sent to the\n *     viewer, `Promise<False>` otherwise.\n * @visibleForTesting\n */\n\n\nfunction maybeReportErrorToViewer(win, data) {\n  var ampdocService = _services.Services.ampdocServiceFor(win);\n\n  if (!ampdocService.isSingleDoc()) {\n    return Promise.resolve(false);\n  }\n\n  var ampdocSingle = ampdocService.getSingleDoc();\n  var htmlElement = ampdocSingle.getRootNode().documentElement;\n  var docOptedIn = htmlElement.hasAttribute('report-errors-to-viewer');\n\n  if (!docOptedIn) {\n    return Promise.resolve(false);\n  }\n\n  var viewer = _services.Services.viewerForDoc(ampdocSingle);\n\n  if (!viewer.hasCapability('errorReporter')) {\n    return Promise.resolve(false);\n  }\n\n  return viewer.isTrustedViewer().then(function (viewerTrusted) {\n    if (!viewerTrusted) {\n      return false;\n    }\n\n    viewer.sendMessage('error', errorReportingDataForViewer(data));\n    return true;\n  });\n}\n/**\n * Strips down the error reporting data to a minimal set\n * to be sent to the viewer.\n * @param {!JsonObject} errorReportData\n * @return {!JsonObject}\n * @visibleForTesting\n */\n\n\nfunction errorReportingDataForViewer(errorReportData) {\n  return (0, _object.dict)({\n    'm': errorReportData['m'],\n    // message\n    'a': errorReportData['a'],\n    // isUserError\n    's': errorReportData['s'],\n    // error stack\n    'el': errorReportData['el'],\n    // tagName\n    'ex': errorReportData['ex'],\n    // expected error?\n    'v': errorReportData['v'],\n    // runtime\n    'jse': errorReportData['jse'] // detectedJsEngine\n\n  });\n}\n/**\n * @param {string|undefined}  message\n * @param {*|undefined} error\n * @return {string}\n */\n\n\nfunction buildErrorMessage_(message, error) {\n  if (error) {\n    if (error.message) {\n      message = error.message;\n    } else {\n      // This should never be a string, but sometimes it is.\n      message = String(error);\n    }\n  }\n\n  if (!message) {\n    message = 'Unknown error';\n  }\n\n  return message;\n}\n/**\n * Signature designed, so it can work with window.onerror\n * @param {string|undefined} message\n * @param {string|undefined} filename\n * @param {string|undefined} line\n * @param {string|undefined} col\n * @param {*|undefined} error\n * @param {boolean} hasNonAmpJs\n * @return {!JsonObject|undefined} The data to post\n * visibleForTesting\n */\n\n\nfunction getErrorReportData(message, filename, line, col, error, hasNonAmpJs) {\n  message = buildErrorMessage_(message, error); // An \"expected\" error is still an error, i.e. some features are disabled\n  // or not functioning fully because of it. However, it's an expected\n  // error. E.g. as is the case with some browser API missing (storage).\n  // Thus, the error can be classified differently by log aggregators.\n  // The main goal is to monitor that an \"expected\" error doesn't deteriorate\n  // over time. It's impossible to completely eliminate it.\n\n  var expected = !!(error && error.expected);\n\n  if (/_reported_/.test(message)) {\n    return;\n  }\n\n  if (message == CANCELLED) {\n    return;\n  }\n\n  var detachedWindow = !(self && self.window);\n  var throttleBase = Math.random(); // We throttle load errors and generic \"Script error.\" errors\n  // that have no information and thus cannot be acted upon.\n\n  if ((0, _eventHelper.isLoadErrorMessage)(message) || // See https://github.com/ampproject/amphtml/issues/7353\n  // for context.\n  message == 'Script error.' || // Window has become detached, really anything can happen\n  // at this point.\n  detachedWindow) {\n    expected = true;\n\n    if (throttleBase > NON_ACTIONABLE_ERROR_THROTTLE_THRESHOLD) {\n      return;\n    }\n  }\n\n  var isUserError = (0, _log.isUserErrorMessage)(message); // Only report a subset of user errors.\n\n  if (isUserError && throttleBase > USER_ERROR_THROTTLE_THRESHOLD) {\n    return;\n  } // This is the App Engine app in\n  // https://github.com/ampproject/error-tracker\n  // It stores error reports via https://cloud.google.com/error-reporting/\n  // for analyzing production issues.\n\n\n  var data =\n  /** @type {!JsonObject} */\n  Object.create(null);\n  data['v'] = (0, _mode.getMode)().rtvVersion;\n  data['noAmp'] = hasNonAmpJs ? '1' : '0';\n  data['m'] = message.replace(_log.USER_ERROR_SENTINEL, '');\n  data['a'] = isUserError ? '1' : '0'; // Errors are tagged with \"ex\" (\"expected\") label to allow loggers to\n  // classify these errors as benchmarks and not exceptions.\n\n  data['ex'] = expected ? '1' : '0';\n  data['dw'] = detachedWindow ? '1' : '0';\n  var runtime = '1p';\n\n  if (self.context && self.context.location) {\n    data['3p'] = '1';\n    runtime = '3p';\n  } else if ((0, _mode.getMode)().runtime) {\n    runtime = (0, _mode.getMode)().runtime;\n  }\n\n  if ((0, _mode.getMode)().singlePassType) {\n    data['spt'] = (0, _mode.getMode)().singlePassType;\n  }\n\n  data['rt'] = runtime; // Add our a4a id if we are inabox\n\n  if (runtime === 'inabox') {\n    data['adid'] = (0, _mode.getMode)().a4aId;\n  } // TODO(erwinm): Remove ca when all systems read `bt` instead of `ca` to\n  // identify js binary type.\n\n\n  data['ca'] = (0, _experiments.isCanary)(self) ? '1' : '0'; // Pass binary type.\n\n  data['bt'] = (0, _experiments.getBinaryType)(self);\n\n  if (self.location.ancestorOrigins && self.location.ancestorOrigins[0]) {\n    data['or'] = self.location.ancestorOrigins[0];\n  }\n\n  if (self.viewerState) {\n    data['vs'] = self.viewerState;\n  } // Is embedded?\n\n\n  if (self.parent && self.parent != self) {\n    data['iem'] = '1';\n  }\n\n  if (self.AMP && self.AMP.viewer) {\n    var resolvedViewerUrl = self.AMP.viewer.getResolvedViewerUrl();\n    var messagingOrigin = self.AMP.viewer.maybeGetMessagingOrigin();\n\n    if (resolvedViewerUrl) {\n      data['rvu'] = resolvedViewerUrl;\n    }\n\n    if (messagingOrigin) {\n      data['mso'] = messagingOrigin;\n    }\n  }\n\n  if (!detectedJsEngine) {\n    detectedJsEngine = detectJsEngineFromStack();\n  }\n\n  data['jse'] = detectedJsEngine;\n  var exps = [];\n  var experiments = (0, _experiments.experimentTogglesOrNull)(self);\n\n  for (var exp in experiments) {\n    var on = experiments[exp];\n    exps.push(exp + \"=\" + (on ? '1' : '0'));\n  }\n\n  data['exps'] = exps.join(',');\n\n  if (error) {\n    var tagName = error.associatedElement ? error.associatedElement.tagName : 'u'; // Unknown\n\n    data['el'] = tagName;\n\n    if (error.args) {\n      data['args'] = JSON.stringify(error.args);\n    }\n\n    if (!isUserError && !error.ignoreStack && error.stack) {\n      data['s'] = error.stack;\n    } // TODO(jridgewell, #18574); Make sure error is always an object.\n\n\n    if (error.message) {\n      error.message += ' _reported_';\n    }\n  } else {\n    data['f'] = filename || '';\n    data['l'] = line || '';\n    data['c'] = col || '';\n  }\n\n  data['r'] = self.document ? self.document.referrer : '';\n  data['ae'] = accumulatedErrorMessages.join(',');\n  data['fr'] = self.location.originalHash || self.location.hash;\n  pushLimit(accumulatedErrorMessages, message, 25);\n  return data;\n}\n/**\n * Returns true if it appears like there is non-AMP JS on the\n * current page.\n * @param {!Window} win\n * @return {boolean}\n * @visibleForTesting\n */\n\n\nfunction detectNonAmpJs(win) {\n  if (!win.document) {\n    return false;\n  }\n\n  var scripts = win.document.querySelectorAll('script[src]');\n\n  for (var i = 0; i < scripts.length; i++) {\n    if (!(0, _url.isProxyOrigin)(scripts[i].src.toLowerCase())) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Resets accumulated error messages for testing\n */\n\n\nfunction resetAccumulatedErrorMessagesForTesting() {\n  accumulatedErrorMessages = [];\n}\n/**\n * Does a series of checks on the stack of an thrown error to determine the\n * JS engine that is currently running. This gives a bit more information than\n * just the UserAgent, since browsers often allow overriding it to \"emulate\"\n * mobile.\n * @return {string}\n * @visibleForTesting\n */\n\n\nfunction detectJsEngineFromStack() {\n  /** @constructor */\n  function Fn() {}\n\n  Fn.prototype.t = function () {\n    throw new Error('message');\n  };\n\n  var object = new Fn();\n\n  try {\n    object.t();\n  } catch (e) {\n    var stack = e.stack; // Safari only mentions the method name.\n\n    if ((0, _string.startsWith)(stack, 't@')) {\n      return 'Safari';\n    } // Firefox mentions \"prototype\".\n\n\n    if (stack.indexOf('.prototype.t@') > -1) {\n      return 'Firefox';\n    } // IE looks like Chrome, but includes a context for the base stack line.\n    // Explicitly, we're looking for something like:\n    // \"    at Global code (https://example.com/app.js:1:200)\" or\n    // \"    at Anonymous function (https://example.com/app.js:1:200)\"\n    // vs Chrome which has:\n    // \"    at https://example.com/app.js:1:200\"\n\n\n    var last = stack.split('\\n').pop();\n\n    if (/\\bat .* \\(/i.test(last)) {\n      return 'IE';\n    } // Finally, chrome includes the error message in the stack.\n\n\n    if ((0, _string.startsWith)(stack, 'Error: message')) {\n      return 'Chrome';\n    }\n  }\n\n  return 'unknown';\n}\n/**\n * @param {!Error} error\n * @param {!Window} win\n */\n\n\nfunction reportErrorToAnalytics(error, win) {\n  // Currently this can only be executed in a single-doc mode. Otherwise,\n  // it's not clear which ampdoc the event would belong too.\n  if (_services.Services.ampdocServiceFor(win).isSingleDoc()) {\n    var vars = (0, _object.dict)({\n      'errorName': error.name,\n      'errorMessage': error.message\n    });\n    (0, _analytics.triggerAnalyticsEvent)(getRootElement_(win), 'user-error', vars);\n  }\n}\n/**\n * @param {!Window} win\n * @return {!Element}\n * @private\n */\n\n\nfunction getRootElement_(win) {\n  var root = _services.Services.ampdocServiceFor(win).getSingleDoc().getRootNode();\n\n  return (0, _log.dev)().assertElement(root.documentElement || root.body || root);\n}\n\n},{\"./amp-events\":7,\"./analytics\":8,\"./config\":10,\"./event-helper\":16,\"./experiments\":17,\"./exponential-backoff\":18,\"./log\":21,\"./mode\":23,\"./services\":30,\"./string\":32,\"./style-installer\":33,\"./url\":38,\"./utils/object\":42}],15:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.internalListenImplementation = internalListenImplementation;\nexports.detectEvtListenerOptsSupport = detectEvtListenerOptsSupport;\nexports.resetEvtListenerOptsSupportForTesting = resetEvtListenerOptsSupportForTesting;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Whether addEventListener supports options or only takes capture as a boolean\n * @type {boolean|undefined}\n * @visibleForTesting\n */\nvar optsSupported;\n/**\n * Listens for the specified event on the element.\n *\n * Do not use this directly. This method is implemented as a shared\n * dependency. Use `listen()` in either `event-helper` or `3p-frame-messaging`,\n * depending on your use case.\n *\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\n\nfunction internalListenImplementation(element, eventType, listener, opt_evtListenerOpts) {\n  var localElement = element;\n  var localListener = listener;\n  /**\n   * @type {?Function}\n   */\n\n  var wrapped;\n\n  wrapped = function wrapped(event) {\n    try {\n      return localListener(event);\n    } catch (e) {\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(e);\n\n      throw e;\n    }\n  };\n\n  var optsSupported = detectEvtListenerOptsSupport();\n  var capture = false;\n\n  if (opt_evtListenerOpts) {\n    capture = opt_evtListenerOpts.capture;\n  }\n\n  localElement.addEventListener(eventType, wrapped, optsSupported ? opt_evtListenerOpts : capture);\n  return function () {\n    if (localElement) {\n      localElement.removeEventListener(eventType, wrapped, optsSupported ? opt_evtListenerOpts : capture);\n    } // Ensure these are GC'd\n\n\n    localListener = null;\n    localElement = null;\n    wrapped = null;\n  };\n}\n/**\n * Tests whether the browser supports options as an argument of addEventListener\n * or not.\n *\n * @return {boolean}\n */\n\n\nfunction detectEvtListenerOptsSupport() {\n  // Only run the test once\n  if (optsSupported !== undefined) {\n    return optsSupported;\n  }\n\n  optsSupported = false;\n\n  try {\n    // Test whether browser supports EventListenerOptions or not\n    var options = {\n      get capture() {\n        optsSupported = true;\n      }\n\n    };\n    self.addEventListener('test-options', null, options);\n    self.removeEventListener('test-options', null, options);\n  } catch (err) {// EventListenerOptions are not supported\n  }\n\n  return optsSupported;\n}\n/**\n * Resets the test for whether addEventListener supports options or not.\n */\n\n\nfunction resetEvtListenerOptsSupportForTesting() {\n  optsSupported = undefined;\n}\n\n},{}],16:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.createCustomEvent = createCustomEvent;\nexports.listen = listen;\nexports.getData = getData;\nexports.getDetail = getDetail;\nexports.listenOnce = listenOnce;\nexports.listenOncePromise = listenOncePromise;\nexports.isLoaded = isLoaded;\nexports.loadPromise = loadPromise;\nexports.isLoadErrorMessage = isLoadErrorMessage;\nexports.MEDIA_LOAD_FAILURE_SRC_PROPERTY = void 0;\n\nvar _eventHelperListen = require(\"./event-helper-listen\");\n\nvar _dom = require(\"./dom\");\n\nvar _log = require(\"./log\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const {string}  */\nvar LOAD_FAILURE_PREFIX = 'Failed to load:';\n/** @const {string} */\n\nvar MEDIA_LOAD_FAILURE_SRC_PROPERTY = '__AMP_MEDIA_LOAD_FAILURE_SRC';\n/**\n * Returns a CustomEvent with a given type and detail; supports fallback for IE.\n * @param {!Window} win\n * @param {string} type\n * @param {!JsonObject|string|undefined|null} detail\n * @param {EventInit=} opt_eventInit\n * @return {!Event}\n */\n\nexports.MEDIA_LOAD_FAILURE_SRC_PROPERTY = MEDIA_LOAD_FAILURE_SRC_PROPERTY;\n\nfunction createCustomEvent(win, type, detail, opt_eventInit) {\n  var eventInit =\n  /** @type {!CustomEventInit} */\n  {\n    detail: detail\n  };\n  Object.assign(eventInit, opt_eventInit); // win.CustomEvent is a function on Edge, Chrome, FF, Safari but\n  // is an object on IE 11.\n\n  if (typeof win.CustomEvent == 'function') {\n    return new win.CustomEvent(type, eventInit);\n  } else {\n    // Deprecated fallback for IE.\n    var e = win.document.createEvent('CustomEvent');\n    e.initCustomEvent(type, !!eventInit.bubbles, !!eventInit.cancelable, detail);\n    return e;\n  }\n}\n/**\n * Listens for the specified event on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\n\n\nfunction listen(element, eventType, listener, opt_evtListenerOpts) {\n  return (0, _eventHelperListen.internalListenImplementation)(element, eventType, listener, opt_evtListenerOpts);\n}\n/**\n * Returns the data property of an event with the correct type.\n * @param {!Event|{data: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\n\n\nfunction getData(event) {\n  return (\n    /** @type {?JsonObject|string|undefined} */\n    event.data\n  );\n}\n/**\n * Returns the detail property of an event with the correct type.\n * @param {!Event|{detail: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\n\n\nfunction getDetail(event) {\n  return (\n    /** @type {?JsonObject|string|undefined} */\n    event.detail\n  );\n}\n/**\n * Listens for the specified event on the element and removes the listener\n * as soon as event has been received.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\n\n\nfunction listenOnce(element, eventType, listener, opt_evtListenerOpts) {\n  var localListener = listener;\n  var unlisten = (0, _eventHelperListen.internalListenImplementation)(element, eventType, function (event) {\n    try {\n      localListener(event);\n    } finally {\n      // Ensure listener is GC'd\n      localListener = null;\n      unlisten();\n    }\n  }, opt_evtListenerOpts);\n  return unlisten;\n}\n/**\n * Returns  a promise that will resolve as soon as the specified event has\n * fired on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {Object=} opt_evtListenerOpts\n * @param {function(!UnlistenDef)=} opt_cancel An optional function that, when\n *     provided, will be called with the unlistener. This gives the caller\n *     access to the unlistener, so it may be called manually when necessary.\n * @return {!Promise<!Event>}\n */\n\n\nfunction listenOncePromise(element, eventType, opt_evtListenerOpts, opt_cancel) {\n  var unlisten;\n  var eventPromise = new Promise(function (resolve) {\n    unlisten = listenOnce(element, eventType, resolve, opt_evtListenerOpts);\n  });\n  eventPromise.then(unlisten, unlisten);\n\n  if (opt_cancel) {\n    opt_cancel(unlisten);\n  }\n\n  return eventPromise;\n}\n/**\n * Whether the specified element/window has been loaded already.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\n\n\nfunction isLoaded(eleOrWindow) {\n  return !!(eleOrWindow.complete || eleOrWindow.readyState == 'complete' || isHTMLMediaElement(eleOrWindow) && eleOrWindow.readyState > 0 || // If the passed in thing is a Window, infer loaded state from\n  //\n  eleOrWindow.document && eleOrWindow.document.readyState == 'complete');\n}\n/**\n * Returns a promise that will resolve or fail based on the eleOrWindow's 'load'\n * and 'error' events. Optionally this method takes a timeout, which will reject\n * the promise if the resource has not loaded by then.\n * @param {T} eleOrWindow Supports both Elements and as a special case Windows.\n * @return {!Promise<T>}\n * @template T\n */\n\n\nfunction loadPromise(eleOrWindow) {\n  var unlistenLoad;\n  var unlistenError;\n\n  if (isLoaded(eleOrWindow)) {\n    return Promise.resolve(eleOrWindow);\n  }\n\n  var isMediaElement = isHTMLMediaElement(eleOrWindow);\n\n  if (isMediaElement && eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] === eleOrWindow.currentSrc) {\n    return Promise.reject(eleOrWindow);\n  }\n\n  var loadingPromise = new Promise(function (resolve, reject) {\n    // Listen once since IE 5/6/7 fire the onload event continuously for\n    // animated GIFs.\n    if (isMediaElement) {\n      // The following event can be triggered by the media or one of its\n      // sources. Using capture is required as the media events do not bubble.\n      unlistenLoad = listenOnce(eleOrWindow, 'loadedmetadata', resolve, {\n        capture: true\n      });\n    } else {\n      unlistenLoad = listenOnce(eleOrWindow, 'load', resolve);\n    } // Don't unlisten on error for Windows.\n\n\n    if (!eleOrWindow.tagName) {\n      return;\n    }\n\n    var errorTarget = eleOrWindow; // If the media element has no `src`, it will try to load the sources in\n    // document order. If the last source errors, then the media element\n    // loading errored.\n\n    if (isMediaElement && !eleOrWindow.hasAttribute('src')) {\n      errorTarget = (0, _dom.lastChildElement)(eleOrWindow, function (child) {\n        return child.tagName === 'SOURCE';\n      });\n\n      if (!errorTarget) {\n        return reject(new Error('Media has no source.'));\n      }\n    }\n\n    unlistenError = listenOnce(errorTarget, 'error', reject);\n  });\n  return loadingPromise.then(function () {\n    if (unlistenError) {\n      unlistenError();\n    }\n\n    return eleOrWindow;\n  }, function () {\n    if (unlistenLoad) {\n      unlistenLoad();\n    }\n\n    failedToLoad(eleOrWindow);\n  });\n}\n/**\n * Emit error on load failure.\n * @param {!Element|!Window} eleOrWindow Supports both Elements and as a special\n *     case Windows.\n */\n\n\nfunction failedToLoad(eleOrWindow) {\n  // Mark the element as errored since some elements - like HTMLMediaElement\n  // using HTMLSourceElement - do not provide any synchronous way to verify if\n  // they already errored, even though the error event was already dispatched.\n  if (isHTMLMediaElement(eleOrWindow)) {\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] = eleOrWindow.currentSrc || true;\n  } // Report failed loads as user errors so that they automatically go\n  // into the \"document error\" bucket.\n\n\n  var target = eleOrWindow;\n\n  if (target && target.src) {\n    target = target.src;\n  }\n\n  throw (0, _log.user)().createError(LOAD_FAILURE_PREFIX, target);\n}\n/**\n * Returns true if the parameter is a HTMLMediaElement.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\n\n\nfunction isHTMLMediaElement(eleOrWindow) {\n  return eleOrWindow.tagName === 'AUDIO' || eleOrWindow.tagName === 'VIDEO';\n}\n/**\n * Returns true if this error message is was created for a load error.\n * @param {string} message An error message\n * @return {boolean}\n */\n\n\nfunction isLoadErrorMessage(message) {\n  return message.indexOf(LOAD_FAILURE_PREFIX) != -1;\n}\n\n},{\"./dom\":12,\"./event-helper-listen\":15,\"./log\":21}],17:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.isCanary = isCanary;\nexports.getBinaryType = getBinaryType;\nexports.isExperimentOn = isExperimentOn;\nexports.toggleExperiment = toggleExperiment;\nexports.experimentToggles = experimentToggles;\nexports.experimentTogglesOrNull = experimentTogglesOrNull;\nexports.getExperimentTogglesForTesting = getExperimentTogglesForTesting;\nexports.resetExperimentTogglesForTesting = resetExperimentTogglesForTesting;\nexports.randomlySelectUnsetExperiments = randomlySelectUnsetExperiments;\nexports.getExperimentBranch = getExperimentBranch;\nexports.forceExperimentBranch = forceExperimentBranch;\nexports.RANDOM_NUMBER_GENERATORS = exports.ExperimentInfo = void 0;\n\nvar _log = require(\"./log\");\n\nvar _mode = require(\"./mode\");\n\nvar _object = require(\"./utils/object\");\n\nvar _url = require(\"./url\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Experiments system allows a developer to opt-in to test\n * features that are not yet fully tested.\n *\n * Experiments page: https://cdn.ampproject.org/experiments.html *\n */\n\n/** @const {string} */\nvar TAG = 'EXPERIMENTS';\n/** @const {string} */\n\nvar LOCAL_STORAGE_KEY = 'amp-experiment-toggles';\n/** @const {string} */\n\nvar TOGGLES_WINDOW_PROPERTY = '__AMP__EXPERIMENT_TOGGLES';\n/**\n * @typedef {{\n *   isTrafficEligible: function(!Window):boolean,\n *   branches: !Array<string>\n * }}\n */\n\nvar ExperimentInfo;\n/**\n * Whether we are in canary.\n * @param {!Window} win\n * @return {boolean}\n */\n\nexports.ExperimentInfo = ExperimentInfo;\n\nfunction isCanary(win) {\n  return !!(win.AMP_CONFIG && win.AMP_CONFIG.canary);\n}\n/**\n * Returns binary type, e.g., canary, production, control, or rc.\n * @param {!Window} win\n * @return {string}\n */\n\n\nfunction getBinaryType(win) {\n  return win.AMP_CONFIG && win.AMP_CONFIG.type ? win.AMP_CONFIG.type : 'unknown';\n}\n/**\n * Whether the specified experiment is on or off.\n * @param {!Window} win\n * @param {string} experimentId\n * @return {boolean}\n */\n\n\nfunction isExperimentOn(win, experimentId) {\n  var toggles = experimentToggles(win);\n  return !!toggles[experimentId];\n}\n/**\n * Toggles the experiment on or off. Returns the actual value of the experiment\n * after toggling is done.\n * @param {!Window} win\n * @param {string} experimentId\n * @param {boolean=} opt_on\n * @param {boolean=} opt_transientExperiment  Whether to toggle the\n *     experiment state \"transiently\" (i.e., for this page load only) or\n *     durably (by saving the experiment IDs after toggling).\n *     Default: false (save durably).\n * @return {boolean} New state for experimentId.\n */\n\n\nfunction toggleExperiment(win, experimentId, opt_on, opt_transientExperiment) {\n  var currentlyOn = isExperimentOn(win,\n  /*OK*/\n  experimentId);\n  var on = !!(opt_on !== undefined ? opt_on : !currentlyOn);\n\n  if (on != currentlyOn) {\n    var toggles = experimentToggles(win);\n    toggles[experimentId] = on;\n\n    if (!opt_transientExperiment) {\n      var storedToggles = getExperimentToggles(win);\n      storedToggles[experimentId] = on;\n      saveExperimentToggles(win, storedToggles); // Avoid affecting tests that spy/stub warn().\n\n      if (!(0, _mode.getMode)().test) {\n        (0, _log.user)().warn(TAG, '\"%s\" experiment %s for the domain \"%s\". See: https://amp.dev/documentation/guides-and-tutorials/learn/experimental', experimentId, on ? 'enabled' : 'disabled', win.location.hostname);\n      }\n    }\n  }\n\n  return on;\n}\n/**\n * Calculate whether the experiment is on or off based off of its default value,\n * stored overriden value, or the global config frequency given.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\n\n\nfunction experimentToggles(win) {\n  if (win[TOGGLES_WINDOW_PROPERTY]) {\n    return win[TOGGLES_WINDOW_PROPERTY];\n  }\n\n  win[TOGGLES_WINDOW_PROPERTY] = Object.create(null);\n  var toggles = win[TOGGLES_WINDOW_PROPERTY]; // Read the default config of this build.\n\n  if (win.AMP_CONFIG) {\n    for (var experimentId in win.AMP_CONFIG) {\n      var frequency = win.AMP_CONFIG[experimentId];\n\n      if (typeof frequency === 'number' && frequency >= 0 && frequency <= 1) {\n        toggles[experimentId] = Math.random() < frequency;\n      }\n    }\n  } // Read document level override from meta tag.\n\n\n  if (win.AMP_CONFIG && Array.isArray(win.AMP_CONFIG['allow-doc-opt-in']) && win.AMP_CONFIG['allow-doc-opt-in'].length > 0) {\n    var allowed = win.AMP_CONFIG['allow-doc-opt-in'];\n    var meta = win.document.head.querySelector('meta[name=\"amp-experiments-opt-in\"]');\n\n    if (meta) {\n      var optedInExperiments = meta.getAttribute('content').split(',');\n\n      for (var i = 0; i < optedInExperiments.length; i++) {\n        if (allowed.indexOf(optedInExperiments[i]) != -1) {\n          toggles[optedInExperiments[i]] = true;\n        }\n      }\n    }\n  }\n\n  Object.assign(toggles, getExperimentToggles(win));\n\n  if (win.AMP_CONFIG && Array.isArray(win.AMP_CONFIG['allow-url-opt-in']) && win.AMP_CONFIG['allow-url-opt-in'].length > 0) {\n    var _allowed = win.AMP_CONFIG['allow-url-opt-in'];\n    var hash = win.location.originalHash || win.location.hash;\n    var params = (0, _url.parseQueryString)(hash);\n\n    for (var _i = 0; _i < _allowed.length; _i++) {\n      var param = params[\"e-\" + _allowed[_i]];\n\n      if (param == '1') {\n        toggles[_allowed[_i]] = true;\n      }\n\n      if (param == '0') {\n        toggles[_allowed[_i]] = false;\n      }\n    }\n  }\n\n  return toggles;\n}\n/**\n * Returns the cached experiments toggles, or null if they have not been\n * computed yet.\n * @param {!Window} win\n * @return {Object<string, boolean>}\n */\n\n\nfunction experimentTogglesOrNull(win) {\n  return win[TOGGLES_WINDOW_PROPERTY] || null;\n}\n/**\n * Returns a set of experiment IDs currently on.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\n\n\nfunction getExperimentToggles(win) {\n  var experimentsString = '';\n\n  try {\n    if ('localStorage' in win) {\n      experimentsString = win.localStorage.getItem(LOCAL_STORAGE_KEY);\n    }\n  } catch (e) {\n    (0, _log.dev)().warn(TAG, 'Failed to retrieve experiments from localStorage.');\n  }\n\n  var tokens = experimentsString ? experimentsString.split(/\\s*,\\s*/g) : [];\n  var toggles = Object.create(null);\n\n  for (var i = 0; i < tokens.length; i++) {\n    if (tokens[i].length == 0) {\n      continue;\n    }\n\n    if (tokens[i][0] == '-') {\n      toggles[tokens[i].substr(1)] = false;\n    } else {\n      toggles[tokens[i]] = true;\n    }\n  }\n\n  return toggles;\n}\n/**\n * Saves a set of experiment IDs currently on.\n * @param {!Window} win\n * @param {!Object<string, boolean>} toggles\n */\n\n\nfunction saveExperimentToggles(win, toggles) {\n  var experimentIds = [];\n\n  for (var experiment in toggles) {\n    experimentIds.push((toggles[experiment] === false ? '-' : '') + experiment);\n  }\n\n  try {\n    if ('localStorage' in win) {\n      win.localStorage.setItem(LOCAL_STORAGE_KEY, experimentIds.join(','));\n    }\n  } catch (e) {\n    (0, _log.user)().error(TAG, 'Failed to save experiments to localStorage.');\n  }\n}\n/**\n * See getExperimentToggles().\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n * @visibleForTesting\n */\n\n\nfunction getExperimentTogglesForTesting(win) {\n  return getExperimentToggles(win);\n}\n/**\n * Resets the experimentsToggle cache for testing purposes.\n * @param {!Window} win\n * @visibleForTesting\n */\n\n\nfunction resetExperimentTogglesForTesting(win) {\n  saveExperimentToggles(win, {});\n  win[TOGGLES_WINDOW_PROPERTY] = null;\n}\n/**\n * In some browser implementations of Math.random(), sequential calls of\n * Math.random() are correlated and can cause a bias.  In particular,\n * if the previous random() call was < 0.001 (as it will be if we select\n * into an experiment), the next value could be less than 0.5 more than\n * 50.7% of the time.  This provides an implementation that roots down into\n * the crypto API, when available, to produce less biased samples.\n *\n * @return {number} Pseudo-random floating-point value on the range [0, 1).\n */\n\n\nfunction slowButAccuratePrng() {\n  // TODO(tdrl): Implement.\n  return Math.random();\n}\n/**\n * Container for alternate random number generator implementations.  This\n * allows us to set an \"accurate\" PRNG for branch selection, but to mock it\n * out easily in tests.\n *\n * @visibleForTesting\n * @const {!{accuratePrng: function():number}}\n */\n\n\nvar RANDOM_NUMBER_GENERATORS = {\n  accuratePrng: slowButAccuratePrng\n};\n/**\n * Selects, uniformly at random, a single item from the array.\n * @param {!Array<string>} arr Object to select from.\n * @return {?string} Single item from arr or null if arr was empty.\n */\n\nexports.RANDOM_NUMBER_GENERATORS = RANDOM_NUMBER_GENERATORS;\n\nfunction selectRandomItem(arr) {\n  var rn = RANDOM_NUMBER_GENERATORS.accuratePrng();\n  return arr[Math.floor(rn * arr.length)] || null;\n}\n/**\n * Selects which page-level experiment branches are enabled. If a given\n * experiment name is already set (including to the null / no branches selected\n * state), this won't alter its state.\n *\n * Check whether a given experiment is set using isExperimentOn(win,\n * experimentName) and, if it is on, look for which branch is selected in\n * win.__AMP_EXPERIMENT_BRANCHES[experimentName].\n *\n * @param {!Window} win Window context on which to save experiment\n *     selection state.\n * @param {!Object<string, !ExperimentInfo>} experiments  Set of experiments to\n *     configure for this page load.\n * @return {!Object<string, string>} Map of experiment names to selected\n *     branches.\n */\n\n\nfunction randomlySelectUnsetExperiments(win, experiments) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  var selectedExperiments = {};\n\n  for (var experimentName in experiments) {\n    // Skip experimentName if it is not a key of experiments object or if it\n    // has already been populated by some other property.\n    if (!(0, _object.hasOwn)(experiments, experimentName)) {\n      continue;\n    }\n\n    if ((0, _object.hasOwn)(win.__AMP_EXPERIMENT_BRANCHES, experimentName)) {\n      selectedExperiments[experimentName] = win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n      continue;\n    }\n\n    if (!experiments[experimentName].isTrafficEligible || !experiments[experimentName].isTrafficEligible(win)) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = null;\n      continue;\n    } // If we're in the experiment, but we haven't already forced a specific\n    // experiment branch (e.g., via a test setup), then randomize the branch\n    // choice.\n\n\n    if (!win.__AMP_EXPERIMENT_BRANCHES[experimentName] && isExperimentOn(win,\n    /*OK*/\n    experimentName)) {\n      var branches = experiments[experimentName].branches;\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = selectRandomItem(branches);\n      selectedExperiments[experimentName] = win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n    }\n  }\n\n  return selectedExperiments;\n}\n/**\n * Returns the experiment branch enabled for the given experiment ID.\n * For example, 'control' or 'experiment'.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @return {?string} Active experiment branch ID for experimentName (possibly\n *     null if experimentName has been tested but no branch was enabled).\n */\n\n\nfunction getExperimentBranch(win, experimentName) {\n  return win.__AMP_EXPERIMENT_BRANCHES ? win.__AMP_EXPERIMENT_BRANCHES[experimentName] : null;\n}\n/**\n * Force enable (or disable) a specific branch of a given experiment name.\n * Disables the experiment name altogether if branchId is falseish.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @param {?string} branchId ID of branch to force or null to disable\n *     altogether.\n * @visibleForTesting\n */\n\n\nfunction forceExperimentBranch(win, experimentName, branchId) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  toggleExperiment(win, experimentName, !!branchId, true);\n  win.__AMP_EXPERIMENT_BRANCHES[experimentName] = branchId;\n}\n\n},{\"./log\":21,\"./mode\":23,\"./url\":38,\"./utils/object\":42}],18:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.exponentialBackoff = exponentialBackoff;\nexports.exponentialBackoffClock = exponentialBackoffClock;\nexports.getJitter = getJitter;\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {number=} opt_base Exponential base. Defaults to 2.\n * @return {function(function()): number} Function that when invoked will\n *     call the passed in function. On every invocation the next\n *     invocation of the passed in function will be exponentially\n *     later. Returned function returns timeout id.\n */\nfunction exponentialBackoff(opt_base) {\n  var getTimeout = exponentialBackoffClock(opt_base);\n  return function (work) {\n    return setTimeout(work, getTimeout());\n  };\n}\n/**\n * @param {number=} opt_base Exponential base. Defaults to 2.\n * @return {function(): number} Function that when invoked will return\n *    a number that exponentially grows per invocation.\n */\n\n\nfunction exponentialBackoffClock(opt_base) {\n  var base = opt_base || 2;\n  var count = 0;\n  return function () {\n    var wait = Math.pow(base, count++);\n    wait += getJitter(wait);\n    return wait * 1000;\n  };\n}\n/**\n * Add jitter to avoid the thundering herd. This can e.g. happen when\n * we poll a backend and it fails for everyone at the same time.\n * We add up to 30% (default) longer or shorter than the given time.\n *\n * @param {number} wait the amount if base milliseconds\n * @param {number=} opt_perc the min/max percentage to add or sutract\n * @return {number}\n */\n\n\nfunction getJitter(wait, opt_perc) {\n  opt_perc = opt_perc || 0.3;\n  var jitter = wait * opt_perc * Math.random();\n\n  if (Math.random() > 0.5) {\n    jitter *= -1;\n  }\n\n  return jitter;\n}\n\n},{}],19:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.internalRuntimeVersion = internalRuntimeVersion;\n\n/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns the internal AMP runtime version. Note that this is not the RTV,\n * which is a prefix and the runtime version.\n *\n * The call sites for this function are replaced with a compile time constant\n * string.\n *\n * @return {string}\n */\nfunction internalRuntimeVersion() {\n  return '$internalRuntimeVersion$';\n}\n\n},{}],20:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.recreateNonProtoObject = recreateNonProtoObject;\nexports.getValueForExpr = getValueForExpr;\nexports.parseJson = parseJson;\nexports.tryParseJson = tryParseJson;\nexports.getChildJsonConfig = getChildJsonConfig;\nexports.deepEquals = deepEquals;\nexports.jsonConfiguration = jsonConfiguration;\nexports.jsonLiteral = jsonLiteral;\nexports.includeJsonLiteral = includeJsonLiteral;\n\nvar _dom = require(\"./dom\");\n\nvar _types = require(\"./types\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview This module declares JSON types as defined in the\n * {@link http://json.org/}.\n */\n// NOTE Type are changed to {*} because of\n// https://github.com/google/closure-compiler/issues/1999\n\n/**\n * JSON scalar. It's either string, number or boolean.\n * @typedef {*} should be string|number|boolean|null\n */\nvar JSONScalarDef;\n/**\n * JSON object. It's a map with string keys and JSON values.\n * @typedef {*} should be !Object<string, ?JSONValueDef>\n */\n\nvar JSONObjectDef;\n/**\n * JSON array. It's an array with JSON values.\n * @typedef {*} should be !Array<?JSONValueDef>\n */\n\nvar JSONArrayDef;\n/**\n * JSON value. It's either a scalar, an object or an array.\n * @typedef {*} should be !JSONScalarDef|!JSONObjectDef|!JSONArrayDef\n */\n\nvar JSONValueDef;\n/**\n * Recreates objects with prototype-less copies.\n * @param {!JsonObject} obj\n * @return {!JsonObject}\n */\n\nfunction recreateNonProtoObject(obj) {\n  var copy = Object.create(null);\n\n  for (var k in obj) {\n    if (!hasOwnProperty(obj, k)) {\n      continue;\n    }\n\n    var v = obj[k];\n    copy[k] = (0, _types.isObject)(v) ? recreateNonProtoObject(v) : v;\n  }\n\n  return (\n    /** @type {!JsonObject} */\n    copy\n  );\n}\n/**\n * Returns a value from an object for a field-based expression. The expression\n * is a simple nested dot-notation of fields, such as `field1.field2`. If any\n * field in a chain does not exist or is not an object or array, the returned\n * value will be `undefined`.\n *\n * @param {!JsonObject} obj\n * @param {string} expr\n * @return {*}\n */\n\n\nfunction getValueForExpr(obj, expr) {\n  // The `.` indicates \"the object itself\".\n  if (expr == '.') {\n    return obj;\n  } // Otherwise, navigate via properties.\n\n\n  var parts = expr.split('.');\n  var value = obj;\n\n  for (var i = 0; i < parts.length; i++) {\n    var part = parts[i];\n\n    if (part && value && value[part] !== undefined && hasOwnProperty(value, part)) {\n      value = value[part];\n      continue;\n    }\n\n    value = undefined;\n    break;\n  }\n\n  return value;\n}\n/**\n * Simple wrapper around JSON.parse that casts the return value\n * to JsonObject.\n * Create a new wrapper if an array return value is desired.\n * @param {*} json JSON string to parse\n * @return {?JsonObject} May be extend to parse arrays.\n */\n\n\nfunction parseJson(json) {\n  return (\n    /** @type {?JsonObject} */\n    JSON.parse(\n    /** @type {string} */\n    json)\n  );\n}\n/**\n * Parses the given `json` string without throwing an exception if not valid.\n * Returns `undefined` if parsing fails.\n * Returns the `Object` corresponding to the JSON string when parsing succeeds.\n * @param {*} json JSON string to parse\n * @param {function(!Error)=} opt_onFailed Optional function that will be called\n *     with the error if parsing fails.\n * @return {?JsonObject} May be extend to parse arrays.\n */\n\n\nfunction tryParseJson(json, opt_onFailed) {\n  try {\n    return parseJson(json);\n  } catch (e) {\n    if (opt_onFailed) {\n      opt_onFailed(e);\n    }\n\n    return null;\n  }\n}\n/**\n * Helper method to get the json config from an element <script> tag\n * @param {!Element} element\n * @return {?JsonObject}\n * @throws {!Error} If element does not have exactly one <script> child\n * with type=\"application/json\", or if the <script> contents are not valid JSON.\n */\n\n\nfunction getChildJsonConfig(element) {\n  var scripts = (0, _dom.childElementsByTag)(element, 'script');\n  var n = scripts.length;\n\n  if (n !== 1) {\n    throw new Error(\"Found \" + scripts.length + \" <script> children. Expected 1.\");\n  }\n\n  var script = scripts[0];\n\n  if (!(0, _dom.isJsonScriptTag)(script)) {\n    throw new Error('<script> child must have type=\"application/json\"');\n  }\n\n  try {\n    return parseJson(script.textContent);\n  } catch (unusedError) {\n    throw new Error('Failed to parse <script> contents. Is it valid JSON?');\n  }\n}\n/**\n * Deeply checks strict equality of items in nested arrays and objects.\n *\n * @param {JSONValueDef} a\n * @param {JSONValueDef} b\n * @param {number} depth The maximum depth. Must be finite.\n * @return {boolean}\n * @throws {Error} If depth argument is not finite.\n */\n\n\nfunction deepEquals(a, b, depth) {\n  if (depth === void 0) {\n    depth = 5;\n  }\n\n  if (!isFinite(depth) || depth < 0) {\n    throw new Error('Invalid depth: ' + depth);\n  }\n\n  if (a === b) {\n    return true;\n  }\n  /** @type {!Array<{a: JSONValueDef, b: JSONValueDef, depth: number}>} */\n\n\n  var queue = [{\n    a: a,\n    b: b,\n    depth: depth\n  }];\n\n  while (queue.length > 0) {\n    var _queue$shift = queue.shift(),\n        _a = _queue$shift.a,\n        _b = _queue$shift.b,\n        _depth = _queue$shift.depth; // Only check deep equality if depth > 0.\n\n\n    if (_depth > 0) {\n      if (typeof _a !== typeof _b) {\n        return false;\n      } else if (Array.isArray(_a) && Array.isArray(_b)) {\n        if (_a.length !== _b.length) {\n          return false;\n        }\n\n        for (var i = 0; i < _a.length; i++) {\n          queue.push({\n            a: _a[i],\n            b: _b[i],\n            depth: _depth - 1\n          });\n        }\n\n        continue;\n      } else if (_a && _b && typeof _a === 'object' && typeof _b === 'object') {\n        var keysA = Object.keys(\n        /** @type {!Object} */\n        _a);\n        var keysB = Object.keys(\n        /** @type {!Object} */\n        _b);\n\n        if (keysA.length !== keysB.length) {\n          return false;\n        }\n\n        for (var _i = 0; _i < keysA.length; _i++) {\n          var k = keysA[_i];\n          queue.push({\n            a: _a[k],\n            b: _b[k],\n            depth: _depth - 1\n          });\n        }\n\n        continue;\n      }\n    } // If we get here, then depth == 0 or (a, b) are primitives.\n\n\n    if (_a !== _b) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * @param {*} obj\n * @param {string} key\n * @return {boolean}\n */\n\n\nfunction hasOwnProperty(obj, key) {\n  if (obj == null || typeof obj != 'object') {\n    return false;\n  }\n\n  return Object.prototype.hasOwnProperty.call(\n  /** @type {!Object} */\n  obj, key);\n}\n/**\n * This helper function handles configurations specified in a JSON format.\n *\n * It allows the configuration is to be written in plain JS (which has better\n * dev ergonomics like comments and trailing commas), and allows the\n * configuration to be transformed into an efficient JSON-parsed representation\n * in the dist build. See https://v8.dev/blog/cost-of-javascript-2019#json\n *\n * @param {!Object} obj\n * @return {!JsonObject}\n */\n\n\nfunction jsonConfiguration(obj) {\n  return (\n    /** @type {!JsonObject} */\n    obj\n  );\n}\n/**\n * This converts an Object into a suitable type to be used in `includeJsonLiteral`.\n * This doesn't actually do any conversion, it only changes the closure type.\n *\n * @param {!Object|!Array|string|number|boolean|null} value\n * @return {!InternalJsonLiteralTypeDef}\n */\n\n\nfunction jsonLiteral(value) {\n  return (\n    /** @type {!InternalJsonLiteralTypeDef} */\n    value\n  );\n}\n/**\n * Allows inclusion of a variable (that's wrapped in a jsonLiteral\n * call) to be included inside a jsonConfiguration.\n *\n * @param {!InternalJsonLiteralTypeDef} value\n * @return {*}\n */\n\n\nfunction includeJsonLiteral(value) {\n  return value;\n}\n\n},{\"./dom\":12,\"./types\":35}],21:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.isUserErrorMessage = isUserErrorMessage;\nexports.isUserErrorEmbed = isUserErrorEmbed;\nexports.setReportError = setReportError;\nexports.overrideLogLevel = overrideLogLevel;\nexports.duplicateErrorIfNecessary = duplicateErrorIfNecessary;\nexports.createErrorVargs = createErrorVargs;\nexports.rethrowAsync = rethrowAsync;\nexports.initLogConstructor = initLogConstructor;\nexports.resetLogConstructorForTesting = resetLogConstructorForTesting;\nexports.user = user;\nexports.dev = dev;\nexports.isFromEmbed = isFromEmbed;\nexports.devAssert = devAssert;\nexports.userAssert = userAssert;\nexports.Log = exports.LogLevel = exports.USER_ERROR_EMBED_SENTINEL = exports.USER_ERROR_SENTINEL = void 0;\n\nvar _mode = require(\"./mode\");\n\nvar _modeObject = require(\"./mode-object\");\n\nvar _internalVersion = require(\"./internal-version\");\n\nvar _types = require(\"./types\");\n\nvar _function = require(\"./utils/function\");\n\nvar _config = require(\"./config\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar noop = function noop() {};\n/**\n * Triple zero width space.\n *\n * This is added to user error messages, so that we can later identify\n * them, when the only thing that we have is the message. This is the\n * case in many browsers when the global exception handler is invoked.\n *\n * @const {string}\n */\n\n\nvar USER_ERROR_SENTINEL = \"\\u200B\\u200B\\u200B\";\n/**\n * Four zero width space.\n *\n * @const {string}\n */\n\nexports.USER_ERROR_SENTINEL = USER_ERROR_SENTINEL;\nvar USER_ERROR_EMBED_SENTINEL = \"\\u200B\\u200B\\u200B\\u200B\";\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a user error.\n */\n\nexports.USER_ERROR_EMBED_SENTINEL = USER_ERROR_EMBED_SENTINEL;\n\nfunction isUserErrorMessage(message) {\n  return message.indexOf(USER_ERROR_SENTINEL) >= 0;\n}\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a a user error from an iframe embed.\n */\n\n\nfunction isUserErrorEmbed(message) {\n  return message.indexOf(USER_ERROR_EMBED_SENTINEL) >= 0;\n}\n/**\n * @enum {number}\n * @private Visible for testing only.\n */\n\n\nvar LogLevel = {\n  OFF: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n  FINE: 4\n};\n/**\n * Sets reportError function. Called from error.js to break cyclic\n * dependency.\n * @param {function(*, !Element=)|undefined} fn\n */\n\nexports.LogLevel = LogLevel;\n\nfunction setReportError(fn) {\n  self.__AMP_REPORT_ERROR = fn;\n}\n/**\n * @type {!LogLevel|undefined}\n * @private\n */\n\n\nvar levelOverride_ = undefined;\n/**\n * @param {!LogLevel} level\n */\n\nfunction overrideLogLevel(level) {\n  levelOverride_ = level;\n}\n/**\n * Prefixes `internalRuntimeVersion` with the `01` channel signifier (for prod.) for\n * extracted message URLs.\n * (Specific channel is irrelevant: message tables are invariant on internal version.)\n * @return {string}\n */\n\n\nvar messageUrlRtv = function messageUrlRtv() {\n  return \"01\" + (0, _internalVersion.internalRuntimeVersion)();\n};\n/**\n * Gets a URL to display a message on amp.dev.\n * @param {string} id\n * @param {!Array} interpolatedParts\n * @return {string}\n */\n\n\nvar externalMessageUrl = function externalMessageUrl(id, interpolatedParts) {\n  return interpolatedParts.reduce(function (prefix, arg) {\n    return prefix + \"&s[]=\" + messageArgToEncodedComponent(arg);\n  }, \"https://log.amp.dev/?v=\" + messageUrlRtv() + \"&id=\" + encodeURIComponent(id));\n};\n/**\n * URL to simple log messages table JSON file, which contains an Object<string, string>\n * which maps message id to full message template.\n * @return {string}\n */\n\n\nvar externalMessagesSimpleTableUrl = function externalMessagesSimpleTableUrl() {\n  return _config.urls.cdn + \"/rtv/\" + messageUrlRtv() + \"/log-messages.simple.json\";\n};\n/**\n * @param {*} arg\n * @return {string}\n */\n\n\nvar messageArgToEncodedComponent = function messageArgToEncodedComponent(arg) {\n  return encodeURIComponent(String(elementStringOrPassthru(arg)));\n};\n/**\n * Logging class. Use of sentinel string instead of a boolean to check user/dev\n * errors because errors could be rethrown by some native code as a new error,\n * and only a message would survive. Also, some browser don’t support a 5th\n * error object argument in window.onerror. List of supporting browser can be\n * found here:\n * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n * @final\n * @private Visible for testing only.\n */\n\n\nvar Log =\n/*#__PURE__*/\nfunction () {\n  /**\n   * opt_suffix will be appended to error message to identify the type of the\n   * error message. We can't rely on the error object to pass along the type\n   * because some browsers do not have this param in its window.onerror API.\n   * See:\n   * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n   *\n   * @param {!Window} win\n   * @param {function(!./mode.ModeDef):!LogLevel} levelFunc\n   * @param {string=} opt_suffix\n   */\n  function Log(win, levelFunc, opt_suffix) {\n    var _this = this;\n\n    if (opt_suffix === void 0) {\n      opt_suffix = '';\n    }\n\n    /**\n     * In tests we use the main test window instead of the iframe where\n     * the tests runs because only the former is relayed to the console.\n     * @const {!Window}\n     */\n    this.win = (0, _mode.getMode)().test && win.__AMP_TEST_IFRAME ? win.parent : win;\n    /** @private @const {function(!./mode.ModeDef):!LogLevel} */\n\n    this.levelFunc_ = levelFunc;\n    /** @private @const {!LogLevel} */\n\n    this.level_ = this.defaultLevel_();\n    /** @private @const {string} */\n\n    this.suffix_ = opt_suffix;\n    /** @private {?JsonObject} */\n\n    this.messages_ = null;\n    this.fetchExternalMessagesOnce_ = (0, _function.once)(function () {\n      win.fetch(externalMessagesSimpleTableUrl()).then(function (response) {\n        return response.json();\n      }, noop).then(function (opt_messages) {\n        if (opt_messages) {\n          _this.messages_ =\n          /** @type {!JsonObject} */\n          opt_messages;\n        }\n      });\n    });\n  }\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n\n\n  var _proto = Log.prototype;\n\n  _proto.getLevel_ = function getLevel_() {\n    return levelOverride_ !== undefined ? levelOverride_ : this.level_;\n  }\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  ;\n\n  _proto.defaultLevel_ = function defaultLevel_() {\n    // No console - can't enable logging.\n    if (!this.win.console || !this.win.console.log) {\n      return LogLevel.OFF;\n    } // Logging has been explicitly disabled.\n\n\n    if ((0, _mode.getMode)().log == '0') {\n      return LogLevel.OFF;\n    } // Logging is enabled for tests directly.\n\n\n    if ((0, _mode.getMode)().test && this.win.ENABLE_LOG) {\n      return LogLevel.FINE;\n    } // LocalDev by default allows INFO level, unless overriden by `#log`.\n\n\n    if ((0, _mode.getMode)().localDev && !(0, _mode.getMode)().log) {\n      return LogLevel.INFO;\n    } // Delegate to the specific resolver.\n\n\n    return this.levelFunc_((0, _modeObject.getModeObject)());\n  }\n  /**\n   * @param {string} tag\n   * @param {string} level\n   * @param {!Array} messages\n   */\n  ;\n\n  _proto.msg_ = function msg_(tag, level, messages) {\n    if (this.getLevel_() != LogLevel.OFF) {\n      var fn = this.win.console.log;\n\n      if (level == 'ERROR') {\n        fn = this.win.console.error || fn;\n      } else if (level == 'INFO') {\n        fn = this.win.console.info || fn;\n      } else if (level == 'WARN') {\n        fn = this.win.console.warn || fn;\n      }\n\n      var args = this.maybeExpandMessageArgs_(messages); // Prefix console message with \"[tag]\".\n\n      var prefix = \"[\" + tag + \"]\";\n\n      if (typeof args[0] === 'string') {\n        // Prepend string to avoid breaking string substitutions e.g. %s.\n        args[0] = prefix + ' ' + args[0];\n      } else {\n        args.unshift(prefix);\n      }\n\n      fn.apply(this.win.console, args);\n    }\n  }\n  /**\n   * Whether the logging is enabled.\n   * @return {boolean}\n   */\n  ;\n\n  _proto.isEnabled = function isEnabled() {\n    return this.getLevel_() != LogLevel.OFF;\n  }\n  /**\n   * Reports a fine-grained message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.fine = function fine(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.FINE) {\n      this.msg_(tag, 'FINE', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n  /**\n   * Reports a informational message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.info = function info(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.INFO) {\n      this.msg_(tag, 'INFO', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n  /**\n   * Reports a warning message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.warn = function warn(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.WARN) {\n      this.msg_(tag, 'WARN', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n  /**\n   * Reports an error message. If the logging is disabled, the error is rethrown\n   * asynchronously.\n   * @param {string} tag\n   * @param {...*} var_args\n   * @return {!Error|undefined}\n   * @private\n   */\n  ;\n\n  _proto.error_ = function error_(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.ERROR) {\n      this.msg_(tag, 'ERROR', Array.prototype.slice.call(arguments, 1));\n    } else {\n      var error = createErrorVargs.apply(null, Array.prototype.slice.call(arguments, 1));\n      this.prepareError_(error);\n      return error;\n    }\n  }\n  /**\n   * Reports an error message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.error = function error(tag, var_args) {\n    var error = this.error_.apply(this, arguments);\n\n    if (error) {\n      error.name = tag || error.name; // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n  /**\n   * Reports an error message and marks with an expected property. If the\n   * logging is disabled, the error is rethrown asynchronously.\n   * @param {string} unusedTag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.expectedError = function expectedError(unusedTag, var_args) {\n    var error = this.error_.apply(this, arguments);\n\n    if (error) {\n      error.expected = true; // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n  /**\n   * Creates an error object.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  ;\n\n  _proto.createError = function createError(var_args) {\n    var error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    return error;\n  }\n  /**\n   * Creates an error object with its expected property set to true.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  ;\n\n  _proto.createExpectedError = function createExpectedError(var_args) {\n    var error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    error.expected = true;\n    return error;\n  }\n  /**\n   * Throws an error if the first argument isn't trueish.\n   *\n   * Supports argument substitution into the message via %s placeholders.\n   *\n   * Throws an error object that has two extra properties:\n   * - associatedElement: This is the first element provided in the var args.\n   *   It can be used for improved display of error messages.\n   * - messageArray: The elements of the substituted message as non-stringified\n   *   elements in an array. When e.g. passed to console.error this yields\n   *   native displays of things like HTML elements.\n   *\n   * NOTE: for an explanation of the tempate R implementation see\n   * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n   *\n   * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n   *     not evaluate to true.\n   * @param {!Array|string=} opt_message The assertion message\n   * @param {...*} var_args Arguments substituted into %s in the message.\n   * @return {R} The value of shouldBeTrueish.\n   * @throws {!Error} When `value` is `null` or `undefined`.\n   * @template T\n   * @template R :=\n   *     mapunion(T, (V) =>\n   *         cond(eq(V, 'null'),\n   *             none(),\n   *             cond(eq(V, 'undefined'),\n   *                 none(),\n   *                 V)))\n   *  =:\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assert = function assert(shouldBeTrueish, opt_message, var_args) {\n    var firstElement;\n\n    if ((0, _types.isArray)(opt_message)) {\n      return this.assert.apply(this, [shouldBeTrueish].concat(this.expandMessageArgs_(\n      /** @type {!Array} */\n      opt_message)));\n    }\n\n    if (!shouldBeTrueish) {\n      var message = opt_message || 'Assertion failed';\n      var splitMessage = message.split('%s');\n      var first = splitMessage.shift();\n      var formatted = first;\n      var messageArray = [];\n      var i = 2;\n      pushIfNonEmpty(messageArray, first);\n\n      while (splitMessage.length > 0) {\n        var nextConstant = splitMessage.shift();\n        var val = arguments[i++];\n\n        if (val && val.tagName) {\n          firstElement = val;\n        }\n\n        messageArray.push(val);\n        pushIfNonEmpty(messageArray, nextConstant.trim());\n        formatted += stringOrElementString(val) + nextConstant;\n      }\n\n      var e = new Error(formatted);\n      e.fromAssert = true;\n      e.associatedElement = firstElement;\n      e.messageArray = messageArray;\n      this.prepareError_(e); // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n\n      self.__AMP_REPORT_ERROR(e);\n\n      throw e;\n    }\n\n    return shouldBeTrueish;\n  }\n  /**\n   * Throws an error if the first argument isn't an Element\n   *\n   * Otherwise see `assert` for usage\n   *\n   * @param {*} shouldBeElement\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Element} The value of shouldBeTrueish.\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertElement = function assertElement(shouldBeElement, opt_message) {\n    var shouldBeTrueish = shouldBeElement && shouldBeElement.nodeType == 1;\n    this.assertType_(shouldBeElement, shouldBeTrueish, 'Element expected', opt_message);\n    return (\n      /** @type {!Element} */\n      shouldBeElement\n    );\n  }\n  /**\n   * Throws an error if the first argument isn't a string. The string can\n   * be empty.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeString\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {string} The string value. Can be an empty string.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertString = function assertString(shouldBeString, opt_message) {\n    this.assertType_(shouldBeString, typeof shouldBeString == 'string', 'String expected', opt_message);\n    return (\n      /** @type {string} */\n      shouldBeString\n    );\n  }\n  /**\n   * Throws an error if the first argument isn't a number. The allowed values\n   * include `0` and `NaN`.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeNumber\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {number} The number value. The allowed values include `0`\n   *   and `NaN`.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertNumber = function assertNumber(shouldBeNumber, opt_message) {\n    this.assertType_(shouldBeNumber, typeof shouldBeNumber == 'number', 'Number expected', opt_message);\n    return (\n      /** @type {number} */\n      shouldBeNumber\n    );\n  }\n  /**\n   * Throws an error if the first argument is not an array.\n   * The array can be empty.\n   *\n   * @param {*} shouldBeArray\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Array} The array value\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertArray = function assertArray(shouldBeArray, opt_message) {\n    this.assertType_(shouldBeArray, (0, _types.isArray)(shouldBeArray), 'Array expected', opt_message);\n    return (\n      /** @type {!Array} */\n      shouldBeArray\n    );\n  }\n  /**\n   * Throws an error if the first argument isn't a boolean.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeBoolean\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {boolean} The boolean value.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertBoolean = function assertBoolean(shouldBeBoolean, opt_message) {\n    this.assertType_(shouldBeBoolean, !!shouldBeBoolean === shouldBeBoolean, 'Boolean expected', opt_message);\n    return (\n      /** @type {boolean} */\n      shouldBeBoolean\n    );\n  }\n  /**\n   * Asserts and returns the enum value. If the enum doesn't contain such a\n   * value, the error is thrown.\n   *\n   * @param {!Object<T>} enumObj\n   * @param {string} s\n   * @param {string=} opt_enumName\n   * @return {T}\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertEnumValue = function assertEnumValue(enumObj, s, opt_enumName) {\n    if ((0, _types.isEnumValue)(enumObj, s)) {\n      return s;\n    }\n\n    this.assert(false, 'Unknown %s value: \"%s\"', opt_enumName || 'enum', s);\n  }\n  /**\n   * @param {!Error} error\n   * @private\n   */\n  ;\n\n  _proto.prepareError_ = function prepareError_(error) {\n    error = duplicateErrorIfNecessary(error);\n\n    if (this.suffix_) {\n      if (!error.message) {\n        error.message = this.suffix_;\n      } else if (error.message.indexOf(this.suffix_) == -1) {\n        error.message += this.suffix_;\n      }\n    } else if (isUserErrorMessage(error.message)) {\n      error.message = error.message.replace(USER_ERROR_SENTINEL, '');\n    }\n  }\n  /**\n   * @param {!Array} args\n   * @return {!Array}\n   * @private\n   */\n  ;\n\n  _proto.maybeExpandMessageArgs_ = function maybeExpandMessageArgs_(args) {\n    if ((0, _types.isArray)(args[0])) {\n      return this.expandMessageArgs_(\n      /** @type {!Array} */\n      args[0]);\n    }\n\n    return args;\n  }\n  /**\n   * Either redirects a pair of (errorId, ...args) to a URL where the full\n   * message is displayed, or displays it from a fetched table.\n   *\n   * This method is used by the output of the `transform-log-methods` babel\n   * plugin. It should not be used directly. Use the (*error|assert*|info|warn)\n   * methods instead.\n   *\n   * @param {!Array} parts\n   * @return {!Array}\n   * @private\n   */\n  ;\n\n  _proto.expandMessageArgs_ = function expandMessageArgs_(parts) {\n    // First value should exist.\n    var id = parts.shift(); // Best effort fetch of message template table.\n    // Since this is async, the first few logs might be indirected to a URL even\n    // if in development mode. Message table is ~small so this should be a short\n    // gap.\n\n    if ((0, _mode.getMode)(this.win).development) {\n      this.fetchExternalMessagesOnce_();\n    }\n\n    if (this.messages_ && id in this.messages_) {\n      return [this.messages_[id]].concat(parts);\n    }\n\n    return [\"More info at \" + externalMessageUrl(id, parts)];\n  }\n  /**\n   * Asserts types, backbone of `assertNumber`, `assertString`, etc.\n   *\n   * It understands array-based \"id\"-contracted messages.\n   *\n   * Otherwise creates a sprintf syntax string containing the optional message or the\n   * default. An interpolation token is added at the end to include the `subject`.\n   * @param {*} subject\n   * @param {*} assertion\n   * @param {string} defaultMessage\n   * @param {!Array|string=} opt_message\n   * @private\n   */\n  ;\n\n  _proto.assertType_ = function assertType_(subject, assertion, defaultMessage, opt_message) {\n    if ((0, _types.isArray)(opt_message)) {\n      this.assert(assertion, opt_message.concat(subject));\n    } else {\n      this.assert(assertion, (opt_message || defaultMessage) + \": %s\", subject);\n    }\n  };\n\n  return Log;\n}();\n/**\n * @param {string|!Element} val\n * @return {string}\n */\n\n\nexports.Log = Log;\n\nvar stringOrElementString = function stringOrElementString(val) {\n  return (\n    /** @type {string} */\n    elementStringOrPassthru(val)\n  );\n};\n/**\n * @param {*} val\n * @return {*}\n */\n\n\nfunction elementStringOrPassthru(val) {\n  // Do check equivalent to `val instanceof Element` without cross-window bug\n  if (val && val.nodeType == 1) {\n    return val.tagName.toLowerCase() + (val.id ? '#' + val.id : '');\n  }\n\n  return val;\n}\n/**\n * @param {!Array} array\n * @param {*} val\n */\n\n\nfunction pushIfNonEmpty(array, val) {\n  if (val != '') {\n    array.push(val);\n  }\n}\n/**\n * Some exceptions (DOMException, namely) have read-only message.\n * @param {!Error} error\n * @return {!Error};\n */\n\n\nfunction duplicateErrorIfNecessary(error) {\n  var messageProperty = Object.getOwnPropertyDescriptor(error, 'message');\n\n  if (messageProperty && messageProperty.writable) {\n    return error;\n  }\n\n  var message = error.message,\n      stack = error.stack;\n  var e = new Error(message); // Copy all the extraneous things we attach.\n\n  for (var prop in error) {\n    e[prop] = error[prop];\n  } // Ensure these are copied.\n\n\n  e.stack = stack;\n  return e;\n}\n/**\n * @param {...*} var_args\n * @return {!Error}\n * @visibleForTesting\n */\n\n\nfunction createErrorVargs(var_args) {\n  var error = null;\n  var message = '';\n\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i];\n\n    if (arg instanceof Error && !error) {\n      error = duplicateErrorIfNecessary(arg);\n    } else {\n      if (message) {\n        message += ' ';\n      }\n\n      message += arg;\n    }\n  }\n\n  if (!error) {\n    error = new Error(message);\n  } else if (message) {\n    error.message = message + ': ' + error.message;\n  }\n\n  return error;\n}\n/**\n * Rethrows the error without terminating the current context. This preserves\n * whether the original error designation is a user error or a dev error.\n * @param {...*} var_args\n */\n\n\nfunction rethrowAsync(var_args) {\n  var error = createErrorVargs.apply(null, arguments);\n  setTimeout(function () {\n    // reportError is installed globally per window in the entry point.\n    self.__AMP_REPORT_ERROR(error);\n\n    throw error;\n  });\n}\n/**\n * Cache for logs. We do not use a Service since the service module depends\n * on Log and closure literally can't even.\n * @type {{user: ?Log, dev: ?Log, userForEmbed: ?Log}}\n */\n\n\nself.__AMP_LOG = self.__AMP_LOG || {\n  user: null,\n  dev: null,\n  userForEmbed: null\n};\nvar logs = self.__AMP_LOG;\n/**\n * Eventually holds a constructor for Log objects. Lazily initialized, so we\n * can avoid ever referencing the real constructor except in JS binaries\n * that actually want to include the implementation.\n * @type {?Function}\n */\n\nvar logConstructor = null;\n/**\n * Initializes log contructor.\n */\n\nfunction initLogConstructor() {\n  logConstructor = Log; // Initialize instances for use. If a binary (an extension for example) that\n  // does not call `initLogConstructor` invokes `dev()` or `user()` earlier than\n  // the binary that does call `initLogConstructor` (amp.js), the extension will\n  // throw an error as that extension will never be able to initialize the log\n  // instances and we also don't want it to call `initLogConstructor` either\n  // (since that will cause the Log implementation to be bundled into that\n  // binary). So we must initialize the instances eagerly so that they are ready\n  // for use (stored globally) after the main binary calls `initLogConstructor`.\n\n  dev();\n  user();\n}\n/**\n * Resets log contructor for testing.\n */\n\n\nfunction resetLogConstructorForTesting() {\n  logConstructor = null;\n}\n/**\n * Publisher level log.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Development mode is enabled via `#development=1` or logging is explicitly\n *     enabled via `#log=D` where D >= 1.\n *  3. AMP.setLogLevel(D) is called, where D >= 1.\n *\n * @param {!Element=} opt_element\n * @return {!Log}\n */\n\n\nfunction user(opt_element) {\n  if (!logs.user) {\n    logs.user = getUserLogger(USER_ERROR_SENTINEL);\n  }\n\n  if (!isFromEmbed(logs.user.win, opt_element)) {\n    return logs.user;\n  } else {\n    if (logs.userForEmbed) {\n      return logs.userForEmbed;\n    }\n\n    return logs.userForEmbed = getUserLogger(USER_ERROR_EMBED_SENTINEL);\n  }\n}\n/**\n * Getter for user logger\n * @param {string=} suffix\n * @return {!Log}\n */\n\n\nfunction getUserLogger(suffix) {\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n\n  return new logConstructor(self, function (mode) {\n    var logNum = parseInt(mode.log, 10);\n\n    if (mode.development || logNum >= 1) {\n      return LogLevel.FINE;\n    }\n\n    return LogLevel.WARN;\n  }, suffix);\n}\n/**\n * AMP development log. Calls to `devLog().assert` and `dev.fine` are stripped\n * in the PROD binary. However, `devLog().assert` result is preserved in either\n * case.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Logging is explicitly enabled via `#log=D`, where D >= 2.\n *  3. AMP.setLogLevel(D) is called, where D >= 2.\n *\n * @return {!Log}\n */\n\n\nfunction dev() {\n  if (logs.dev) {\n    return logs.dev;\n  }\n\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n\n  return logs.dev = new logConstructor(self, function (mode) {\n    var logNum = parseInt(mode.log, 10);\n\n    if (logNum >= 3) {\n      return LogLevel.FINE;\n    }\n\n    if (logNum >= 2) {\n      return LogLevel.INFO;\n    }\n\n    return LogLevel.OFF;\n  });\n}\n/**\n * @param {!Window} win\n * @param {!Element=} opt_element\n * @return {boolean} isEmbed\n */\n\n\nfunction isFromEmbed(win, opt_element) {\n  if (!opt_element) {\n    return false;\n  }\n\n  return opt_element.ownerDocument.defaultView != win;\n}\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * NOTE: for an explanation of the tempate R implementation see\n * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {R} The value of shouldBeTrueish.\n * @template T\n * @template R :=\n *     mapunion(T, (V) =>\n *         cond(eq(V, 'null'),\n *             none(),\n *             cond(eq(V, 'undefined'),\n *                 none(),\n *                 V)))\n *  =:\n * @throws {!Error} When `value` is `null` or `undefined`.\n * @closurePrimitive {asserts.matchesReturn}\n */\n\n\nfunction devAssert(shouldBeTrueish, opt_message, opt_1, opt_2, opt_3, opt_4, opt_5, opt_6, opt_7, opt_8, opt_9) {\n  if ((0, _mode.getMode)().minified) {\n    return shouldBeTrueish;\n  }\n\n  return dev().\n  /*Orig call*/\n  assert(shouldBeTrueish, opt_message, opt_1, opt_2, opt_3, opt_4, opt_5, opt_6, opt_7, opt_8, opt_9);\n}\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * NOTE: for an explanation of the tempate R implementation see\n * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {R} The value of shouldBeTrueish.\n * @template T\n * @template R :=\n *     mapunion(T, (V) =>\n *         cond(eq(V, 'null'),\n *             none(),\n *             cond(eq(V, 'undefined'),\n *                 none(),\n *                 V)))\n *  =:\n * @throws {!Error} When `value` is `null` or `undefined`.\n * @closurePrimitive {asserts.matchesReturn}\n */\n\n\nfunction userAssert(shouldBeTrueish, opt_message, opt_1, opt_2, opt_3, opt_4, opt_5, opt_6, opt_7, opt_8, opt_9) {\n  return user().\n  /*Orig call*/\n  assert(shouldBeTrueish, opt_message, opt_1, opt_2, opt_3, opt_4, opt_5, opt_6, opt_7, opt_8, opt_9);\n}\n\n},{\"./config\":10,\"./internal-version\":19,\"./mode\":23,\"./mode-object\":22,\"./types\":35,\"./utils/function\":40}],22:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getModeObject = getModeObject;\n\nvar _mode = require(\"./mode\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provides info about the current app. This return value may be cached and\n * passed around as it will always be DCE'd.\n * @param {?Window=} opt_win\n * @return {!./mode.ModeDef}\n */\nfunction getModeObject(opt_win) {\n  return {\n    localDev: (0, _mode.getMode)(opt_win).localDev,\n    development: (0, _mode.getMode)(opt_win).development,\n    filter: (0, _mode.getMode)(opt_win).filter,\n    minified: (0, _mode.getMode)(opt_win).minified,\n    lite: (0, _mode.getMode)(opt_win).lite,\n    test: (0, _mode.getMode)(opt_win).test,\n    log: (0, _mode.getMode)(opt_win).log,\n    version: (0, _mode.getMode)(opt_win).version,\n    rtvVersion: (0, _mode.getMode)(opt_win).rtvVersion,\n    singlePassType: (0, _mode.getMode)(opt_win).singlePassType\n  };\n}\n\n},{\"./mode\":23}],23:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getMode = getMode;\nexports.getRtvVersionForTesting = getRtvVersionForTesting;\nexports.resetRtvVersionForTesting = resetRtvVersionForTesting;\nexports.ModeDef = void 0;\n\nvar _internalVersion = require(\"./internal-version\");\n\nvar _urlParseQueryString = require(\"./url-parse-query-string\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {{\n *   localDev: boolean,\n *   development: boolean,\n *   minified: boolean,\n *   lite: boolean,\n *   test: boolean,\n *   log: (string|undefined),\n *   version: string,\n *   rtvVersion: string,\n *   runtime: (null|string|undefined),\n *   a4aId: (null|string|undefined),\n *   singlePassType: (string|undefined)\n * }}\n */\nvar ModeDef;\n/**\n * `rtvVersion` is the prefixed version we serve off of the cdn.\n * The prefix denotes canary(00) or prod(01) or an experiment version ( > 01).\n * @type {string}\n */\n\nexports.ModeDef = ModeDef;\nvar rtvVersion = '';\n/**\n * Provides info about the current app.\n * @param {?Window=} opt_win\n * @return {!ModeDef}\n */\n\nfunction getMode(opt_win) {\n  var win = opt_win || self;\n\n  if (win.__AMP_MODE) {\n    return win.__AMP_MODE;\n  }\n\n  return win.__AMP_MODE = getMode_(win);\n}\n/**\n * Provides info about the current app.\n * @param {!Window} win\n * @return {!ModeDef}\n */\n\n\nfunction getMode_(win) {\n  // TODO(erwinmombay): simplify the logic here\n  var AMP_CONFIG = self.AMP_CONFIG || {}; // Magic constants that are replaced by closure compiler.\n  // IS_MINIFIED is always replaced with true when closure compiler is used\n  // while IS_DEV is only replaced when `gulp dist` is called without the\n  // --fortesting flag.\n\n  var IS_DEV = true;\n  var IS_MINIFIED = false;\n  var localDevEnabled = !!AMP_CONFIG.localDev;\n  var runningTests = !!AMP_CONFIG.test || IS_DEV && !!(win.__AMP_TEST || win.__karma__);\n  var runningTestsOnIe = win.__karma__ && win.__karma__.config.amp.testOnIe;\n  var isLocalDev = IS_DEV && (localDevEnabled || runningTests);\n  var hashQuery = (0, _urlParseQueryString.parseQueryString_)( // location.originalHash is set by the viewer when it removes the fragment\n  // from the URL.\n  win.location.originalHash || win.location.hash);\n  var singlePassType = AMP_CONFIG.spt;\n  var searchQuery = (0, _urlParseQueryString.parseQueryString_)(win.location.search);\n\n  if (!rtvVersion) {\n    rtvVersion = getRtvVersion(win, isLocalDev);\n  } // The `minified`, `test` and `localDev` properties are replaced\n  // as boolean literals when we run `gulp dist` without the `--fortesting`\n  // flags. This improved DCE on the production file we deploy as the code\n  // paths for localhost/testing/development are eliminated.\n\n\n  return {\n    localDev: isLocalDev,\n    // Triggers validation or enable pub level logging. Validation can be\n    // bypassed via #validate=0.\n    // Note that AMP_DEV_MODE flag is used for testing purposes.\n    // Use Array.indexOf instead of Array.includes because of #24219\n    development: !!(['1', 'actions', 'amp', 'amp4ads', 'amp4email'].indexOf(hashQuery['development']) >= 0 || win.AMP_DEV_MODE),\n    examiner: hashQuery['development'] == '2',\n    // amp-geo override\n    geoOverride: hashQuery['amp-geo'],\n    // amp-user-location override\n    userLocationOverride: hashQuery['amp-user-location'],\n    minified: IS_MINIFIED,\n    // Whether document is in an amp-lite viewer. It signal that the user\n    // would prefer to use less bandwidth.\n    lite: searchQuery['amp_lite'] != undefined,\n    test: runningTests,\n    testIe: runningTestsOnIe,\n    log: hashQuery['log'],\n    version: (0, _internalVersion.internalRuntimeVersion)(),\n    rtvVersion: rtvVersion,\n    singlePassType: singlePassType\n  };\n}\n/**\n * Retrieve the `rtvVersion` which will have a numeric prefix\n * denoting canary/prod/experiment (unless `isLocalDev` is true).\n *\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n */\n\n\nfunction getRtvVersion(win, isLocalDev) {\n  // If it's local dev then we won't actually have a full version so\n  // just use the version.\n  if (isLocalDev) {\n    return (0, _internalVersion.internalRuntimeVersion)();\n  }\n\n  if (win.AMP_CONFIG && win.AMP_CONFIG.v) {\n    return win.AMP_CONFIG.v;\n  } // Currently `internalRuntimeVersion` and thus `mode.version` contain only\n  // major version. The full version however must also carry the minor version.\n  // We will default to production default `01` minor version for now.\n  // TODO(erwinmombay): decide whether internalRuntimeVersion should contain\n  // minor version.\n\n\n  return \"01\" + (0, _internalVersion.internalRuntimeVersion)();\n}\n/**\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n * @visibleForTesting\n */\n\n\nfunction getRtvVersionForTesting(win, isLocalDev) {\n  return getRtvVersion(win, isLocalDev);\n}\n/** @visibleForTesting */\n\n\nfunction resetRtvVersionForTesting() {\n  rtvVersion = '';\n}\n\n},{\"./internal-version\":19,\"./url-parse-query-string\":36}],24:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.install = install;\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns true if the element is in the array and false otherwise.\n *\n * @param {*} value\n * @param {number=} opt_fromIndex\n * @return {boolean}\n * @this {Array}\n */\nfunction includes(value, opt_fromIndex) {\n  var fromIndex = opt_fromIndex || 0;\n  var len = this.length;\n  var i = fromIndex >= 0 ? fromIndex : Math.max(len + fromIndex, 0);\n\n  for (; i < len; i++) {\n    var other = this[i]; // If value has been found OR (value is NaN AND other is NaN)\n\n    /*eslint \"no-self-compare\": 0*/\n\n    if (other === value || value !== value && other !== other) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Sets the Array.contains polyfill if it does not exist.\n * @param {!Window} win\n */\n\n\nfunction install(win) {\n  if (!win.Array.prototype.includes) {\n    win.Object.defineProperty(Array.prototype, 'includes', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: includes\n    });\n  }\n}\n\n},{}],25:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.sign = sign;\nexports.install = install;\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Parses the number x and returns its sign. For positive x returns 1, for\n * negative, -1. For 0 and -0, returns 0 and -0 respectively. For any number\n * that parses to NaN, returns NaN.\n *\n * @param {number} x\n * @return {number}\n */\nfunction sign(x) {\n  x = Number(x); // If x is 0, -0, or NaN, return it.\n\n  if (!x) {\n    return x;\n  }\n\n  return x > 0 ? 1 : -1;\n}\n/**\n * Sets the Math.sign polyfill if it does not exist.\n * @param {!Window} win\n */\n\n\nfunction install(win) {\n  if (!win.Math.sign) {\n    win.Object.defineProperty(win.Math, 'sign', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: sign\n    });\n  }\n}\n\n},{}],26:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.assign = assign;\nexports.install = install;\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Copies values of all enumerable own properties from one or more source\n * objects (provided as extended arguments to the function) to a target object.\n *\n * @param {!Object} target\n * @param {...Object} var_args\n * @return {!Object}\n */\n\nfunction assign(target, var_args) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    if (source != null) {\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return output;\n}\n/**\n * Sets the Object.assign polyfill if it does not exist.\n * @param {!Window} win\n */\n\n\nfunction install(win) {\n  if (!win.Object.assign) {\n    win.Object.defineProperty(win.Object, 'assign', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: assign\n    });\n  }\n}\n\n},{}],27:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.values = values;\nexports.install = install;\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Implements `Object.values` API.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_objects/Object/values.\n *\n * @param {!Object} target\n * @return {!Array<*>}\n */\nfunction values(target) {\n  return Object.keys(target).map(function (k) {\n    return target[k];\n  });\n}\n/**\n * Sets the Object.values polyfill if it does not exist.\n * @param {!Window} win\n */\n\n\nfunction install(win) {\n  if (!win.Object.values) {\n    win.Object.defineProperty(win.Object, 'values', {\n      configurable: true,\n      writable: true,\n      value: values\n    });\n  }\n}\n\n},{}],28:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.waitForServices = waitForServices;\nexports.hasRenderDelayingServices = hasRenderDelayingServices;\nexports.isRenderDelayingService = isRenderDelayingService;\nexports.includedServices = includedServices;\nexports.RenderDelayingService = void 0;\n\nvar _services = require(\"./services\");\n\nvar _log = require(\"./log\");\n\nvar _service = require(\"./service\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A map of services that delay rendering. The key is the name of the service\n * and the value is a DOM query which is used to check if the service is needed\n * in the current document.\n * Do not add a service unless absolutely necessary.\n *\n * \\   \\  /  \\  /   / /   \\     |   _  \\     |  \\ |  | |  | |  \\ |  |  / _____|\n *  \\   \\/    \\/   / /  ^  \\    |  |_)  |    |   \\|  | |  | |   \\|  | |  |  __\n *   \\            / /  /_\\  \\   |      /     |  . `  | |  | |  . `  | |  | |_ |\n *    \\    /\\    / /  _____  \\  |  |\\  \\----.|  |\\   | |  | |  |\\   | |  |__| |\n *     \\__/  \\__/ /__/     \\__\\ | _| `._____||__| \\__| |__| |__| \\__|  \\______|\n *\n * The equivalent of this list is used for server-side rendering (SSR) and any\n * changes made to it must be made in coordination with caches that implement\n * SSR. For more information on SSR see bit.ly/amp-ssr.\n *\n * @const {!Object<string, string>}\n */\nvar SERVICES = {\n  'amp-dynamic-css-classes': '[custom-element=amp-dynamic-css-classes]',\n  'variant': 'amp-experiment',\n  'amp-story-render': 'amp-story[standalone]'\n};\n/**\n * Base class for render delaying services.\n * This should be extended to ensure the service\n * is properly handled\n *\n * @interface\n */\n\nvar RenderDelayingService =\n/*#__PURE__*/\nfunction () {\n  function RenderDelayingService() {}\n\n  var _proto = RenderDelayingService.prototype;\n\n  /**\n   * Function to return a promise for when\n   * it is finished delaying render, and is ready.\n   * NOTE: This should simply return Promise.resolve,\n   * if your service does not need to perform any logic\n   * after being registered.\n   * @return {!Promise}\n   */\n  _proto.whenReady = function whenReady() {};\n\n  return RenderDelayingService;\n}();\n/**\n * Maximum milliseconds to wait for all extensions to load before erroring.\n * @const\n */\n\n\nexports.RenderDelayingService = RenderDelayingService;\nvar LOAD_TIMEOUT = 3000;\n/**\n * Detects any render delaying services that are required on the page, and\n * returns a promise with a timeout.\n * @param {!Window} win\n * @return {!Promise<!Array<*>>} resolves to an Array that has the same length\n *     as the detected render delaying services\n */\n\nfunction waitForServices(win) {\n  var promises = includedServices(win).map(function (serviceId) {\n    var serviceReadyPromise = (0, _service.getServicePromise)(win, serviceId).then(function (service) {\n      if (service && isRenderDelayingService(service)) {\n        return service.whenReady().then(function () {\n          return service;\n        });\n      }\n\n      return service;\n    });\n    return _services.Services.timerFor(win).timeoutPromise(LOAD_TIMEOUT, serviceReadyPromise, \"Render timeout waiting for service \" + serviceId + \" to be ready.\");\n  });\n  return Promise.all(promises);\n}\n/**\n * Returns true if the page has a render delaying service.\n * @param {!Window} win\n * @return {boolean}\n */\n\n\nfunction hasRenderDelayingServices(win) {\n  return includedServices(win).length > 0;\n}\n/**\n * Function to determine if the passed\n * Object is a Render Delaying Service\n * @param {!Object} service\n * @return {boolean}\n */\n\n\nfunction isRenderDelayingService(service) {\n  var maybeRenderDelayingService =\n  /** @type {!RenderDelayingService}*/\n  service;\n  return typeof maybeRenderDelayingService.whenReady == 'function';\n}\n/**\n * Detects which, if any, render-delaying extensions are included on the page.\n * @param {!Window} win\n * @return {!Array<string>}\n */\n\n\nfunction includedServices(win) {\n  /** @const {!Document} */\n  var doc = win.document;\n  (0, _log.devAssert)(doc.body);\n  return Object.keys(SERVICES).filter(function (service) {\n    return doc.querySelector(SERVICES[service]);\n  });\n}\n\n},{\"./log\":21,\"./service\":29,\"./services\":30}],29:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getExistingServiceForDocInEmbedScope = getExistingServiceForDocInEmbedScope;\nexports.installServiceInEmbedScope = installServiceInEmbedScope;\nexports.registerServiceBuilder = registerServiceBuilder;\nexports.registerServiceBuilderForDoc = registerServiceBuilderForDoc;\nexports.rejectServicePromiseForDoc = rejectServicePromiseForDoc;\nexports.getService = getService;\nexports.getServicePromise = getServicePromise;\nexports.getExistingServiceOrNull = getExistingServiceOrNull;\nexports.getServicePromiseOrNull = getServicePromiseOrNull;\nexports.getServiceForDoc = getServiceForDoc;\nexports.getServicePromiseForDoc = getServicePromiseForDoc;\nexports.getServicePromiseOrNullForDoc = getServicePromiseOrNullForDoc;\nexports.setParentWindow = setParentWindow;\nexports.getParentWindow = getParentWindow;\nexports.getTopWindow = getTopWindow;\nexports.getParentWindowFrameElement = getParentWindowFrameElement;\nexports.getAmpdoc = getAmpdoc;\nexports.isDisposable = isDisposable;\nexports.assertDisposable = assertDisposable;\nexports.disposeServicesForDoc = disposeServicesForDoc;\nexports.disposeServicesForEmbed = disposeServicesForEmbed;\nexports.installServiceInEmbedIfEmbeddable = installServiceInEmbedIfEmbeddable;\nexports.adoptServiceForEmbedDoc = adoptServiceForEmbedDoc;\nexports.resetServiceForTesting = resetServiceForTesting;\nexports.EmbeddableService = exports.Disposable = void 0;\n\nvar _promise = require(\"./utils/promise\");\n\nvar _log = require(\"./log\");\n\nvar _experiments = require(\"./experiments\");\n\nvar _types = require(\"./types\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Registration and getter functions for AMP services.\n *\n * Invariant: Service getters never return null for registered services.\n */\n\n/**\n * Holds info about a service.\n * - obj: Actual service implementation when available.\n * - promise: Promise for the obj.\n * - resolve: Function to resolve the promise with the object.\n * - context: Argument for ctor, either a window or an ampdoc.\n * - ctor: Function that constructs and returns the service.\n * @typedef {{\n *   obj: (?Object),\n *   promise: (?Promise),\n *   resolve: (?function(!Object)),\n *   reject: (?function((*))),\n *   context: (?Window|?./service/ampdoc-impl.AmpDoc),\n *   ctor: (?function(new:Object, !Window)|\n *          ?function(new:Object, !./service/ampdoc-impl.AmpDoc)),\n * }}\n */\nvar ServiceHolderDef;\n/**\n * This interface provides a `dispose` method that will be called by\n * runtime when a service needs to be disposed of.\n * @interface\n */\n\nvar Disposable =\n/*#__PURE__*/\nfunction () {\n  function Disposable() {}\n\n  var _proto = Disposable.prototype;\n\n  /**\n   * Instructs the service to release any resources it might be holding. Can\n   * be called only once in the lifecycle of a service.\n   */\n  _proto.dispose = function dispose() {};\n\n  return Disposable;\n}();\n/**\n * Services must implement this interface to be embeddable in FIEs.\n * @interface\n */\n\n\nexports.Disposable = Disposable;\n\nvar EmbeddableService =\n/*#__PURE__*/\nfunction () {\n  function EmbeddableService() {}\n\n  /**\n   * Installs a new instance of the service in the given FIE window.\n   * @param {!Window} unusedEmbedWin\n   * @param {!./service/ampdoc-impl.AmpDoc} unusedAmpDoc\n   */\n  EmbeddableService.installInEmbedWindow = function installInEmbedWindow(unusedEmbedWin, unusedAmpDoc) {};\n\n  return EmbeddableService;\n}();\n/**\n * Returns a service with the given id. Assumes that it has been constructed\n * already.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id\n * @return {?Object}\n */\n\n\nexports.EmbeddableService = EmbeddableService;\n\nfunction getExistingServiceForDocInEmbedScope(element, id) {\n  // TODO(#22733): completely remove this method once ampdoc-fie launches.\n  var document = element.ownerDocument;\n  var win = (0, _types.toWin)(document.defaultView);\n  var topWin = getTopWindow(win); // First, try to resolve via local embed window (if applicable).\n\n  var isEmbed = win != topWin;\n  var ampdocFieExperimentOn = (0, _experiments.isExperimentOn)(topWin, 'ampdoc-fie');\n\n  if (isEmbed && !ampdocFieExperimentOn) {\n    if (isServiceRegistered(win, id)) {\n      return getServiceInternal(win, id);\n    } // Fallback from FIE to parent is intentionally unsupported for safety.\n\n\n    return null;\n  } else {\n    // Resolve via the element's ampdoc.\n    return getServiceForDocOrNullInternal(element, id);\n  }\n}\n/**\n * Installs a service override on amp-doc level.\n * @param {!Window} embedWin\n * @param {string} id\n * @param {!Object} service The service.\n */\n\n\nfunction installServiceInEmbedScope(embedWin, id, service) {\n  var topWin = getTopWindow(embedWin);\n  (0, _log.devAssert)(embedWin != topWin, 'Service override can only be installed in embed window: %s', id);\n  (0, _log.devAssert)(!isServiceRegistered(embedWin, id), 'Service override has already been installed: %s', id);\n  var ampdocFieExperimentOn = (0, _experiments.isExperimentOn)(topWin, 'ampdoc-fie');\n\n  if (ampdocFieExperimentOn) {\n    var ampdoc = getAmpdoc(embedWin.document);\n    registerServiceInternal(getAmpdocServiceHolder(ampdoc), ampdoc, id, function () {\n      return service;\n    },\n    /* override */\n    true);\n  } else {\n    registerServiceInternal(embedWin, embedWin, id, function () {\n      return service;\n    });\n    getServiceInternal(embedWin, id); // Force service to build.\n  }\n}\n/**\n * Registers a service given a class to be used as implementation.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {function(new:Object, !Window)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\n\n\nfunction registerServiceBuilder(win, id, constructor, opt_instantiate) {\n  win = getTopWindow(win);\n  registerServiceInternal(win, win, id, constructor);\n\n  if (opt_instantiate) {\n    getServiceInternal(win, id);\n  }\n}\n/**\n * Returns a service and registers it given a class to be used as\n * implementation.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id of the service.\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\n\n\nfunction registerServiceBuilderForDoc(nodeOrDoc, id, constructor, opt_instantiate) {\n  var ampdoc = getAmpdoc(nodeOrDoc);\n  var holder = getAmpdocServiceHolder(ampdoc);\n  registerServiceInternal(holder, ampdoc, id, constructor);\n\n  if (opt_instantiate) {\n    getServiceInternal(holder, id);\n  }\n}\n/**\n * Reject a service promise.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id\n * @param {*} error\n */\n\n\nfunction rejectServicePromiseForDoc(nodeOrDoc, id, error) {\n  var ampdoc = getAmpdoc(nodeOrDoc);\n  var holder = getAmpdocServiceHolder(ampdoc);\n  rejectServicePromiseInternal(holder, id, error);\n}\n/**\n * Returns a service for the given id and window (a per-window singleton). Users\n * should typically wrap this as a special purpose function (e.g.\n * `Services.vsyncFor(win)`) for type safety and because the factory should not\n * be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\n\n\nfunction getService(win, id) {\n  win = getTopWindow(win);\n  return getServiceInternal(win, id);\n}\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. `Services.vsyncFor(win)`) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\n\n\nfunction getServicePromise(win, id) {\n  return getServicePromiseInternal(win, id);\n}\n/**\n * Returns a service or null with the given id.\n * @param {!Window} win\n * @param {string} id\n * @return {?Object} The service.\n */\n\n\nfunction getExistingServiceOrNull(win, id) {\n  win = getTopWindow(win);\n\n  if (isServiceRegistered(win, id)) {\n    return getServiceInternal(win, id);\n  } else {\n    return null;\n  }\n}\n/**\n * Like getServicePromise but returns null if the service was never registered.\n * @param {!Window} win\n * @param {string} id\n * @return {?Promise<!Object>}\n */\n\n\nfunction getServicePromiseOrNull(win, id) {\n  return getServicePromiseOrNullInternal(win, id);\n}\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * Expects service `id` to be registered.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {T}\n * @template T\n */\n\n\nfunction getServiceForDoc(elementOrAmpDoc, id) {\n  var ampdoc = getAmpdoc(elementOrAmpDoc);\n  var holder = getAmpdocServiceHolder(ampdoc);\n  return getServiceInternal(holder, id);\n}\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * If service `id` is not registered, returns null.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id\n * @return {?Object}\n */\n\n\nfunction getServiceForDocOrNullInternal(element, id) {\n  var ampdoc = getAmpdoc(element);\n  var holder = getAmpdocServiceHolder(ampdoc);\n\n  if (isServiceRegistered(holder, id)) {\n    return getServiceInternal(holder, id);\n  } else {\n    return null;\n  }\n}\n/**\n * Returns a promise for a service for the given id and ampdoc. Also expects\n * a service that has the actual implementation. The promise resolves when\n * the implementation loaded.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {!Promise<!Object>}\n */\n\n\nfunction getServicePromiseForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n/**\n * Like getServicePromiseForDoc but returns null if the service was never\n * registered for this ampdoc.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Promise<!Object>}\n */\n\n\nfunction getServicePromiseOrNullForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseOrNullInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n/**\n * Set the parent and top windows on a child window (friendly iframe).\n * @param {!Window} win\n * @param {!Window} parentWin\n */\n\n\nfunction setParentWindow(win, parentWin) {\n  win.__AMP_PARENT = parentWin;\n  win.__AMP_TOP = getTopWindow(parentWin);\n}\n/**\n * Returns the parent window for a child window (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\n\n\nfunction getParentWindow(win) {\n  return win.__AMP_PARENT || win;\n}\n/**\n * Returns the top window where AMP Runtime is installed for a child window\n * (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\n\n\nfunction getTopWindow(win) {\n  return win.__AMP_TOP || (win.__AMP_TOP = win);\n}\n/**\n * Returns the parent \"friendly\" iframe if the node belongs to a child window.\n * @param {!Node} node\n * @param {!Window=} opt_topWin\n * @return {?HTMLIFrameElement}\n */\n\n\nfunction getParentWindowFrameElement(node, opt_topWin) {\n  var childWin = (node.ownerDocument || node).defaultView;\n  var topWin = opt_topWin || getTopWindow(childWin);\n\n  if (childWin && childWin != topWin && getTopWindow(childWin) == topWin) {\n    try {\n      return (\n        /** @type {?HTMLIFrameElement} */\n        childWin.frameElement\n      );\n    } catch (e) {// Ignore the error.\n    }\n  }\n\n  return null;\n}\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc}\n */\n\n\nfunction getAmpdoc(nodeOrDoc) {\n  if (nodeOrDoc.nodeType) {\n    var win = (0, _types.toWin)(\n    /** @type {!Document} */\n    (nodeOrDoc.ownerDocument || nodeOrDoc).defaultView);\n    return getAmpdocService(win).getAmpDoc(\n    /** @type {!Node} */\n    nodeOrDoc);\n  }\n\n  return (\n    /** @type {!./service/ampdoc-impl.AmpDoc} */\n    nodeOrDoc\n  );\n}\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc|!Window}\n */\n\n\nfunction getAmpdocServiceHolder(nodeOrDoc) {\n  var ampdoc = getAmpdoc(nodeOrDoc);\n  return ampdoc.isSingleDoc() ? ampdoc.win : ampdoc;\n}\n/**\n * This is essentially a duplicate of `ampdoc.js`, but necessary to avoid\n * circular dependencies.\n * @param {!Window} win\n * @return {!./service/ampdoc-impl.AmpDocService}\n */\n\n\nfunction getAmpdocService(win) {\n  return (\n    /** @type {!./service/ampdoc-impl.AmpDocService} */\n    getService(win, 'ampdoc')\n  );\n}\n/**\n * Get service `id` from `holder`. Assumes the service\n * has already been registered.\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {Object}\n * @template T\n */\n\n\nfunction getServiceInternal(holder, id) {\n  (0, _log.devAssert)(isServiceRegistered(holder, id), \"Expected service \" + id + \" to be registered\");\n  var services = getServices(holder);\n  var s = services[id];\n\n  if (!s.obj) {\n    (0, _log.devAssert)(s.ctor, \"Service \" + id + \" registered without ctor nor impl.\");\n    (0, _log.devAssert)(s.context, \"Service \" + id + \" registered without context.\");\n    s.obj = new s.ctor(s.context);\n    (0, _log.devAssert)(s.obj, \"Service \" + id + \" constructed to null.\");\n    s.ctor = null;\n    s.context = null; // The service may have been requested already, in which case we have a\n    // pending promise we need to fulfill.\n\n    if (s.resolve) {\n      s.resolve(s.obj);\n    }\n  }\n\n  return s.obj;\n}\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {!Window|!./service/ampdoc-impl.AmpDoc} context Win or AmpDoc.\n * @param {string} id of the service.\n * @param {?function(new:Object, !Window)|?function(new:Object, !./service/ampdoc-impl.AmpDoc)} ctor Constructor function to new the service. Called with context.\n * @param {boolean=} opt_override\n */\n\n\nfunction registerServiceInternal(holder, context, id, ctor, opt_override) {\n  var services = getServices(holder);\n  var s = services[id];\n\n  if (!s) {\n    s = services[id] = {\n      obj: null,\n      promise: null,\n      resolve: null,\n      reject: null,\n      context: null,\n      ctor: null\n    };\n  }\n\n  if (!opt_override && (s.ctor || s.obj)) {\n    // Service already registered.\n    return;\n  }\n\n  s.ctor = ctor;\n  s.context = context; // The service may have been requested already, in which case there is a\n  // pending promise that needs to fulfilled.\n\n  if (s.resolve) {\n    // getServiceInternal will resolve the promise.\n    getServiceInternal(holder, id);\n  }\n}\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\n\n\nfunction getServicePromiseInternal(holder, id) {\n  var cached = getServicePromiseOrNullInternal(holder, id);\n\n  if (cached) {\n    return cached;\n  } // Service is not registered.\n  // TODO(@cramforce): Add a check that if the element is eventually registered\n  // that the service is actually provided and this promise resolves.\n\n\n  var services = getServices(holder);\n  services[id] = emptyServiceHolderWithPromise();\n  return (\n    /** @type {!Promise<!Object>} */\n    services[id].promise\n  );\n}\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @param {*} error\n */\n\n\nfunction rejectServicePromiseInternal(holder, id, error) {\n  var services = getServices(holder);\n  var s = services[id];\n\n  if (s) {\n    if (s.reject) {\n      s.reject(error);\n    }\n\n    return;\n  }\n\n  services[id] = emptyServiceHolderWithPromise();\n  services[id].reject(error);\n}\n/**\n * Returns a promise for service `id` if the service has been registered\n * on `holder`.\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {?Promise<!Object>}\n */\n\n\nfunction getServicePromiseOrNullInternal(holder, id) {\n  var services = getServices(holder);\n  var s = services[id];\n\n  if (s) {\n    if (s.promise) {\n      return s.promise;\n    } else {\n      // Instantiate service if not already instantiated.\n      getServiceInternal(holder, id);\n      return s.promise = Promise.resolve(\n      /** @type {!Object} */\n      s.obj);\n    }\n  }\n\n  return null;\n}\n/**\n * Returns the object that holds the services registered in a holder.\n * @param {!Object} holder\n * @return {!Object<string,!ServiceHolderDef>}\n */\n\n\nfunction getServices(holder) {\n  var services = holder.__AMP_SERVICES;\n\n  if (!services) {\n    services = holder.__AMP_SERVICES = {};\n  }\n\n  return services;\n}\n/**\n * Whether the specified service implements `Disposable` interface.\n * @param {!Object} service\n * @return {boolean}\n */\n\n\nfunction isDisposable(service) {\n  return typeof service.dispose == 'function';\n}\n/**\n * Asserts that the specified service implements `Disposable` interface and\n * typecasts the instance to `Disposable`.\n * @param {!Object} service\n * @return {!Disposable}\n */\n\n\nfunction assertDisposable(service) {\n  (0, _log.devAssert)(isDisposable(service), 'required to implement Disposable');\n  return (\n    /** @type {!Disposable} */\n    service\n  );\n}\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * ampdoc scope.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n */\n\n\nfunction disposeServicesForDoc(ampdoc) {\n  disposeServicesInternal(ampdoc);\n}\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * embed scope.\n * @param {!Window} embedWin\n */\n\n\nfunction disposeServicesForEmbed(embedWin) {\n  disposeServicesInternal(embedWin);\n}\n/**\n * @param {!Object} holder Object holding the service instances.\n */\n\n\nfunction disposeServicesInternal(holder) {\n  // TODO(dvoytenko): Consider marking holder as destroyed for later-arriving\n  // service to be canceled automatically.\n  var services = getServices(holder);\n\n  var _loop = function _loop(id) {\n    if (!Object.prototype.hasOwnProperty.call(services, id)) {\n      return \"continue\";\n    }\n\n    var serviceHolder = services[id];\n\n    if (serviceHolder.obj) {\n      disposeServiceInternal(id, serviceHolder.obj);\n    } else if (serviceHolder.promise) {\n      serviceHolder.promise.then(function (instance) {\n        return disposeServiceInternal(id, instance);\n      });\n    }\n  };\n\n  for (var id in services) {\n    var _ret = _loop(id);\n\n    if (_ret === \"continue\") continue;\n  }\n}\n/**\n * @param {string} id\n * @param {!Object} service\n */\n\n\nfunction disposeServiceInternal(id, service) {\n  if (!isDisposable(service)) {\n    return;\n  }\n\n  try {\n    assertDisposable(service).dispose();\n  } catch (e) {\n    // Ensure that a failure to dispose a service does not disrupt other\n    // services.\n    (0, _log.dev)().error('SERVICE', 'failed to dispose service', id, e);\n  }\n}\n/**\n * Adopts an embeddable (implements `EmbeddableService` interface) service\n * in embed scope.\n * @param {!Window} embedWin\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} serviceClass\n * @suppress {missingProperties}\n * @return {boolean}\n */\n\n\nfunction installServiceInEmbedIfEmbeddable(embedWin, serviceClass) {\n  var isEmbeddableService = typeof serviceClass.installInEmbedWindow === 'function';\n\n  if (!isEmbeddableService) {\n    return false;\n  }\n\n  var frameElement = (0, _log.dev)().assertElement(embedWin.frameElement, 'frameElement not found for embed');\n  var ampdoc = getAmpdoc(frameElement);\n  serviceClass.installInEmbedWindow(embedWin, ampdoc);\n  return true;\n}\n/**\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\n\n\nfunction adoptServiceForEmbedDoc(ampdoc, id) {\n  var service = getServiceInternal(getAmpdocServiceHolder((0, _log.devAssert)(ampdoc.getParent())), id);\n  registerServiceInternal(getAmpdocServiceHolder(ampdoc), ampdoc, id, function () {\n    return service;\n  });\n}\n/**\n * Resets a single service, so it gets recreated on next getService invocation.\n * @param {!Object} holder\n * @param {string} id of the service.\n */\n\n\nfunction resetServiceForTesting(holder, id) {\n  if (holder.__AMP_SERVICES) {\n    holder.__AMP_SERVICES[id] = null;\n  }\n}\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {boolean}\n */\n\n\nfunction isServiceRegistered(holder, id) {\n  var service = holder.__AMP_SERVICES && holder.__AMP_SERVICES[id]; // All registered services must have an implementation or a constructor.\n\n  return !!(service && (service.ctor || service.obj));\n}\n/** @return {!ServiceHolderDef} */\n\n\nfunction emptyServiceHolderWithPromise() {\n  var deferred = new _promise.Deferred();\n  var promise = deferred.promise,\n      resolve = deferred.resolve,\n      reject = deferred.reject;\n  promise.catch(function () {}); // avoid uncaught exception when service gets rejected\n\n  return {\n    obj: null,\n    promise: promise,\n    resolve: resolve,\n    reject: reject,\n    context: null,\n    ctor: null\n  };\n}\n\n},{\"./experiments\":17,\"./log\":21,\"./types\":35,\"./utils/promise\":43}],30:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.Services = exports.SubscriptionService = void 0;\n\nvar _service = require(\"./service\");\n\nvar _elementService = require(\"./element-service\");\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {!../extensions/amp-subscriptions/0.1/amp-subscriptions.SubscriptionService} */\nvar SubscriptionService;\nexports.SubscriptionService = SubscriptionService;\n\nvar Services =\n/*#__PURE__*/\nfunction () {\n  function Services() {}\n\n  /**\n   * Hint: Add extensions folder path to compile.js with\n   * warnings cannot find modules.\n   */\n\n  /**\n   * Returns a promise for the Access service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  Services.accessServiceForDoc = function accessServiceForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'access', 'amp-access')\n    );\n  }\n  /**\n   * Returns a promise for the Access service or a promise for null if the\n   * service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  ;\n\n  Services.accessServiceForDocOrNull = function accessServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'access', 'amp-access')\n    );\n  }\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!SubscriptionService>}\n   */\n  ;\n\n  Services.subscriptionsServiceForDoc = function subscriptionsServiceForDoc(element) {\n    return (\n      /** @type {!Promise<!SubscriptionService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'subscriptions', 'amp-subscriptions')\n    );\n  }\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?SubscriptionService>}\n   */\n  ;\n\n  Services.subscriptionsServiceForDocOrNull = function subscriptionsServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?SubscriptionService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'subscriptions', 'amp-subscriptions')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/action-impl.ActionService}\n   */\n  ;\n\n  Services.actionServiceForDoc = function actionServiceForDoc(element) {\n    return (\n      /** @type {!./service/action-impl.ActionService} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'action')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/standard-actions-impl.StandardActions}\n   */\n  ;\n\n  Services.standardActionsForDoc = function standardActionsForDoc(element) {\n    return (\n      /** @type {!./service/standard-actions-impl.StandardActions} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'standard-actions')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>}\n   */\n  ;\n\n  Services.activityForDoc = function activityForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'activity', 'amp-analytics')\n    );\n  }\n  /**\n   * Returns the global instance of the `AmpDocService` service that can be\n   * used to resolve an ampdoc for any node: either in the single-doc or\n   * shadow-doc environment.\n   * @param {!Window} window\n   * @return {!./service/ampdoc-impl.AmpDocService}\n   */\n  ;\n\n  Services.ampdocServiceFor = function ampdocServiceFor(window) {\n    return (\n      /** @type {!./service/ampdoc-impl.AmpDocService} */\n      (0, _service.getService)(window, 'ampdoc')\n    );\n  }\n  /**\n   * Returns the AmpDoc for the specified context node.\n   * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrAmpDoc\n   * @return {!./service/ampdoc-impl.AmpDoc}\n   */\n  ;\n\n  Services.ampdoc = function ampdoc(nodeOrAmpDoc) {\n    return (0, _service.getAmpdoc)(nodeOrAmpDoc);\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @param {boolean=} loadAnalytics\n   * @return {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  ;\n\n  Services.analyticsForDoc = function analyticsForDoc(element, loadAnalytics) {\n    if (loadAnalytics === void 0) {\n      loadAnalytics = false;\n    }\n\n    if (loadAnalytics) {\n      // Get Extensions service and force load analytics extension.\n      var ampdoc = (0, _service.getAmpdoc)(element);\n      Services.extensionsFor(ampdoc.win).\n      /*OK*/\n      installExtensionForDoc(ampdoc, 'amp-analytics');\n    }\n\n    return (\n      /** @type {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'amp-analytics-instrumentation', 'amp-analytics')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  ;\n\n  Services.analyticsForDocOrNull = function analyticsForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'amp-analytics-instrumentation', 'amp-analytics')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/batched-xhr-impl.BatchedXhr}\n   */\n  ;\n\n  Services.batchedXhrFor = function batchedXhrFor(window) {\n    return (\n      /** @type {!./service/batched-xhr-impl.BatchedXhr} */\n      (0, _service.getService)(window, 'batched-xhr')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>}\n   */\n  ;\n\n  Services.bindForDocOrNull = function bindForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>} */\n      (0, _elementService.getElementServiceIfAvailableForDocInEmbedScope)(element, 'bind', 'amp-bind')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/cid-impl.CidDef>}\n   */\n  ;\n\n  Services.cidForDoc = function cidForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<!./service/cid-impl.CidDef>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'cid')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/navigation.Navigation}\n   */\n  ;\n\n  Services.navigationForDoc = function navigationForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/navigation.Navigation} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'navigation')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>}\n   */\n  ;\n\n  Services.loaderServiceForDoc = function loaderServiceForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'loader', 'amp-loader')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>}\n   */\n  ;\n\n  Services.standaloneServiceForDoc = function standaloneServiceForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'standalone', 'amp-standalone')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/crypto-impl.Crypto}\n   */\n  ;\n\n  Services.cryptoFor = function cryptoFor(window) {\n    return (\n      /** @type {!./service/crypto-impl.Crypto} */\n      (0, _service.getService)(window, 'crypto')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/document-info-impl.DocumentInfoDef} Info about the doc\n   */\n  ;\n\n  Services.documentInfoForDoc = function documentInfoForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/document-info-impl.DocInfo} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'documentInfo').get()\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/extensions-impl.Extensions}\n   */\n  ;\n\n  Services.extensionsFor = function extensionsFor(window) {\n    return (\n      /** @type {!./service/extensions-impl.Extensions} */\n      (0, _service.getService)(window, 'extensions')\n    );\n  }\n  /**\n   * Returns a service to register callbacks we wish to execute when an\n   * amp-form is submitted.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>}\n   */\n  ;\n\n  Services.formSubmitForDoc = function formSubmitForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'form-submit-service')\n    );\n  }\n  /**\n   * Returns service to listen for `hidden` attribute mutations.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/hidden-observer-impl.HiddenObserver}\n   */\n  ;\n\n  Services.hiddenObserverForDoc = function hiddenObserverForDoc(element) {\n    return (\n      /** @type {!./service/hidden-observer-impl.HiddenObserver} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'hidden-observer')\n    );\n  }\n  /**\n   * Returns service implemented in service/history-impl.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/history-impl.History}\n   */\n  ;\n\n  Services.historyForDoc = function historyForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/history-impl.History} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'history')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {!./input.Input}\n   */\n  ;\n\n  Services.inputFor = function inputFor(win) {\n    return (0, _service.getService)(win, 'input');\n  }\n  /**s\n   * Returns a promise for the Inputmask service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>}\n   */\n  ;\n\n  Services.inputmaskServiceForDocOrNull = function inputmaskServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'inputmask', 'amp-inputmask')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/owners-interface.OwnersInterface}\n   */\n  ;\n\n  Services.ownersForDoc = function ownersForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/owners-interface.OwnersInterface} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'owners')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  ;\n\n  Services.performanceFor = function performanceFor(window) {\n    return (\n      /** @type {!./service/performance-impl.Performance}*/\n      (0, _service.getService)(window, 'performance')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  ;\n\n  Services.performanceForOrNull = function performanceForOrNull(window) {\n    return (\n      /** @type {!./service/performance-impl.Performance}*/\n      (0, _service.getExistingServiceOrNull)(window, 'performance')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/platform-impl.Platform}\n   */\n  ;\n\n  Services.platformFor = function platformFor(window) {\n    return (\n      /** @type {!./service/platform-impl.Platform} */\n      (0, _service.getService)(window, 'platform')\n    );\n  }\n  /**\n   * Not installed by default; must be installed in extension code before use.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/position-observer/position-observer-impl.PositionObserver}\n   * @throws If the service is not installed.\n   */\n  ;\n\n  Services.positionObserverForDoc = function positionObserverForDoc(element) {\n    return (\n      /** @type {!./service/position-observer/position-observer-impl.PositionObserver} */\n      (0, _service.getServiceForDoc)(element, 'position-observer')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/resources-interface.ResourcesInterface}\n   */\n  ;\n\n  Services.resourcesForDoc = function resourcesForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/resources-interface.ResourcesInterface} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'resources')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/resources-interface.ResourcesInterface>}\n   */\n  ;\n\n  Services.resourcesPromiseForDoc = function resourcesPromiseForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<!./service/resources-interface.ResourcesInterface>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'resources')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?{incomingFragment: string, outgoingFragment: string}>}\n   */\n  ;\n\n  Services.shareTrackingForOrNull = function shareTrackingForOrNull(win) {\n    return (\n      /** @type {!Promise<?{incomingFragment: string, outgoingFragment: string}>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'share-tracking', 'amp-share-tracking', true)\n    );\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/variable-service.StoryVariableDef>}\n   */\n  ;\n\n  Services.storyVariableServiceForOrNull = function storyVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/variable-service.StoryVariableDef>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'story-variable', 'amp-story', true)\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService}\n   */\n  ;\n\n  Services.storyVariableService = function storyVariableService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-variable')\n    );\n  }\n  /**\n   * Version of the story store service depends on which version of amp-story\n   * the publisher is loading. They all have the same implementation.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService|?../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService>}\n   */\n  ;\n\n  Services.storyStoreServiceForOrNull = function storyStoreServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService|?../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'story-store', 'amp-story')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService}\n   */\n  ;\n\n  Services.storyStoreService = function storyStoreService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-store')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService}\n   */\n  ;\n\n  Services.storyMediaQueryService = function storyMediaQueryService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-media-query')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService}\n   */\n  ;\n\n  Services.storyRequestService = function storyRequestService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-request')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService}\n   */\n  ;\n\n  Services.mediaPerformanceMetricsService = function mediaPerformanceMetricsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService} */\n      (0, _service.getExistingServiceOrNull)(win, 'media-performance-metrics')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {!Promise<?./service/localization.LocalizationService>}\n   */\n  ;\n\n  Services.localizationServiceForOrNull = function localizationServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?./service/localization.LocalizationService>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'localization', 'amp-story', true)\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {!./service/localization.LocalizationService}\n   */\n  ;\n\n  Services.localizationService = function localizationService(win) {\n    return (0, _service.getService)(win, 'localization');\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>}\n   */\n  ;\n\n  Services.storyAnalyticsServiceForOrNull = function storyAnalyticsServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'story-analytics', 'amp-story', true)\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService}\n   */\n  ;\n\n  Services.storyAnalyticsService = function storyAnalyticsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-analytics')\n    );\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService}\n   */\n  ;\n\n  Services.storyStoreServiceV01 = function storyStoreServiceV01(win) {\n    return (0, _service.getService)(win, 'story-store');\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!../extensions/amp-story/0.1/amp-story-request-service.AmpStoryRequestService}\n   */\n  ;\n\n  Services.storyRequestServiceV01 = function storyRequestServiceV01(win) {\n    return (0, _service.getService)(win, 'story-request-v01');\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?./service/localization.LocalizationService>}\n   */\n  ;\n\n  Services.localizationServiceForOrNullV01 = function localizationServiceForOrNullV01(win) {\n    return (\n      /** @type {!Promise<?./service/localization.LocalizationService>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'localization-v01', 'amp-story', true)\n    );\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!./service/localization.LocalizationService}\n   */\n  ;\n\n  Services.localizationServiceV01 = function localizationServiceV01(win) {\n    return (0, _service.getService)(win, 'localization-v01');\n  }\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-viewer-integration/0.1/variable-service.ViewerIntegrationVariableDef>}\n   */\n  ;\n\n  Services.viewerIntegrationVariableServiceForOrNull = function viewerIntegrationVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-viewer-integration/0.1/variable-service.ViewerIntegrationVariableDef>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'viewer-integration-variable', 'amp-viewer-integration', true)\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>}\n   */\n  ;\n\n  Services.webAnimationServiceFor = function webAnimationServiceFor(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'web-animation', 'amp-animation')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   */\n  ;\n\n  Services.storageForDoc = function storageForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<!./service/storage-impl.Storage>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'storage')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/template-impl.Templates}\n   */\n  ;\n\n  Services.templatesFor = function templatesFor(window) {\n    return (\n      /** @type {!./service/template-impl.Templates} */\n      (0, _service.getService)(window, 'templates')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/timer-impl.Timer}\n   */\n  ;\n\n  Services.timerFor = function timerFor(window) {\n    // TODO(alabiaga): This will always return the top window's Timer service.\n    return (\n      /** @type {!./service/timer-impl.Timer} */\n      (0, _service.getService)(window, 'timer')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-replacements-impl.UrlReplacements}\n   */\n  ;\n\n  Services.urlReplacementsForDoc = function urlReplacementsForDoc(element) {\n    return (\n      /** @type {!./service/url-replacements-impl.UrlReplacements} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'url-replace')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>}\n   */\n  ;\n\n  Services.userNotificationManagerForDoc = function userNotificationManagerForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'userNotificationManager', 'amp-user-notification')\n    );\n  }\n  /**\n   * Returns a promise for the consentPolicy Service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>}\n   */\n  ;\n\n  Services.consentPolicyServiceForDocOrNull = function consentPolicyServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'consentPolicyManager', 'amp-consent')\n    );\n  }\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>}\n   */\n  ;\n\n  Services.geoForDocOrNull = function geoForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'geo', 'amp-geo', true)\n    );\n  }\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-user-location/0.1/user-location-service.UserLocationService>}\n   */\n  ;\n\n  Services.userLocationForDocOrNull = function userLocationForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-user-location/0.1/user-location-service.UserLocationService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'user-location', 'amp-user-location', true)\n    );\n  }\n  /**\n   * Unlike most service getters, passing `Node` is necessary for some FIE-scope\n   * services since sometimes we only have the FIE Document for context.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-impl.Url}\n   */\n  ;\n\n  Services.urlForDoc = function urlForDoc(element) {\n    return (\n      /** @type {!./service/url-impl.Url} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'url')\n    );\n  }\n  /**\n   * Returns a promise for the experiment variants or a promise for null if it\n   * is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>}\n   */\n  ;\n\n  Services.variantsForDocOrNull = function variantsForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'variant', 'amp-experiment', true)\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/video-manager-impl.VideoManager}\n   */\n  ;\n\n  Services.videoManagerForDoc = function videoManagerForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/video-manager-impl.VideoManager} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'video-manager')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-viewer-assistance/0.1/amp-viewer-assistance.AmpViewerAssistance>}\n   */\n  ;\n\n  Services.viewerAssistanceForDocOrNull = function viewerAssistanceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-viewer-assistance/0.1/amp-viewer-assistance.AmpViewerAssistance>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'amp-viewer-assistance', 'amp-viewer-assistance')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewer-interface.ViewerInterface}\n   */\n  ;\n\n  Services.viewerForDoc = function viewerForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/viewer-interface.ViewerInterface} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'viewer')\n    );\n  }\n  /**\n   * Returns promise for the viewer. This is an unusual case and necessary only\n   * for services that need reference to the viewer before it has been\n   * initialized. Most of the code, however, just should use `viewerForDoc`.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/viewer-interface.ViewerInterface>}\n   */\n  ;\n\n  Services.viewerPromiseForDoc = function viewerPromiseForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<!./service/viewer-interface.ViewerInterface>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'viewer')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/vsync-impl.Vsync}\n   */\n  ;\n\n  Services.vsyncFor = function vsyncFor(window) {\n    return (\n      /** @type {!./service/vsync-impl.Vsync} */\n      (0, _service.getService)(window, 'vsync')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewport/viewport-interface.ViewportInterface}\n   */\n  ;\n\n  Services.viewportForDoc = function viewportForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/viewport/viewport-interface.ViewportInterface} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'viewport')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/xhr-impl.Xhr}\n   */\n  ;\n\n  Services.xhrFor = function xhrFor(window) {\n    return (\n      /** @type {!./service/xhr-impl.Xhr} */\n      (0, _service.getService)(window, 'xhr')\n    );\n  };\n\n  return Services;\n}();\n\nexports.Services = Services;\n\n},{\"./element-service\":13,\"./service\":29}],31:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.srcsetFromElement = srcsetFromElement;\nexports.srcsetFromSrc = srcsetFromSrc;\nexports.parseSrcset = parseSrcset;\nexports.Srcset = void 0;\n\nvar _log = require(\"./log\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A single source within a srcset. Only one: width or DPR can be specified at\n * a time.\n * @typedef {{\n *   url: string,\n *   width: (number|undefined),\n *   dpr: (number|undefined)\n * }}\n */\nvar SrcsetSourceDef;\n/**\n * General grammar: (URL [NUM[w|x]],)*\n * Example 1: \"image1.png 100w, image2.png 50w\"\n * Example 2: \"image1.png 2x, image2.png\"\n * Example 3: \"image1,100w.png 100w, image2.png 50w\"\n */\n\nvar srcsetRegex = /(\\S+)(?:\\s+(?:(-?\\d+(?:\\.\\d+)?)([a-zA-Z]*)))?\\s*(?:,|$)/g;\n/**\n * Extracts `srcset` and fallbacks to `src` if not available.\n * @param {!Element} element\n * @return {!Srcset}\n */\n\nfunction srcsetFromElement(element) {\n  var srcsetAttr = element.getAttribute('srcset');\n\n  if (srcsetAttr) {\n    return parseSrcset(srcsetAttr);\n  } // We can't push `src` via `parseSrcset` because URLs in `src` are not always\n  // RFC compliant and can't be easily parsed as an `srcset`. For instance,\n  // they sometimes contain space characters.\n\n\n  var srcAttr = (0, _log.userAssert)(element.getAttribute('src'), 'Either non-empty \"srcset\" or \"src\" attribute must be specified: %s', element);\n  return srcsetFromSrc(srcAttr);\n}\n/**\n * Creates a Srcset from a `src` attribute value.\n * @param {string} src\n * @return {!Srcset}\n */\n\n\nfunction srcsetFromSrc(src) {\n  return new Srcset([{\n    url: src,\n    width: undefined,\n    dpr: 1\n  }]);\n}\n/**\n * Parses the text representation of srcset into Srcset object.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#Attributes.\n * See http://www.w3.org/html/wg/drafts/html/master/semantics.html#attr-img-srcset.\n * @param {string} s\n * @return {!Srcset}\n */\n\n\nfunction parseSrcset(s) {\n  var sources = [];\n  var match;\n\n  while (match = srcsetRegex.exec(s)) {\n    var url = match[1];\n    var width = void 0,\n        dpr = void 0;\n\n    if (match[2]) {\n      var type = match[3].toLowerCase();\n\n      if (type == 'w') {\n        width = parseInt(match[2], 10);\n      } else if (type == 'x') {\n        dpr = parseFloat(match[2]);\n      } else {\n        continue;\n      }\n    } else {\n      // If no \"w\" or \"x\" specified, we assume it's \"1x\".\n      dpr = 1;\n    }\n\n    sources.push({\n      url: url,\n      width: width,\n      dpr: dpr\n    });\n  }\n\n  return new Srcset(sources);\n}\n/**\n * A srcset object contains one or more sources.\n *\n * There are two types of sources: width-based and DPR-based. Only one type\n * of sources allowed to be specified within a single srcset. Depending on a\n * usecase, the components are free to choose any source that best corresponds\n * to the required rendering quality and network and CPU conditions. See\n * \"select\" method for details on how this selection is performed.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#Attributes\n */\n\n\nvar Srcset =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!Array<!SrcsetSourceDef>} sources\n   */\n  function Srcset(sources) {\n    (0, _log.userAssert)(sources.length > 0, 'Srcset must have at least one source');\n    /** @private @const {!Array<!SrcsetSourceDef>} */\n\n    this.sources_ = sources; // Only one type of source specified can be used - width or DPR.\n\n    var hasWidth = false;\n    var hasDpr = false;\n\n    for (var i = 0; i < sources.length; i++) {\n      var source = sources[i];\n      hasWidth = hasWidth || !!source.width;\n      hasDpr = hasDpr || !!source.dpr;\n    }\n\n    (0, _log.userAssert)(!!(hasWidth ^ hasDpr), 'Srcset must have width or dpr sources, but not both'); // Source and assert duplicates.\n\n    sources.sort(hasWidth ? sortByWidth : sortByDpr);\n    /** @private @const {boolean} */\n\n    this.widthBased_ = hasWidth;\n  }\n  /**\n   * Performs selection for specified width and DPR. Here, width is the width\n   * in screen pixels and DPR is the device-pixel-ratio or pixel density of\n   * the device. Depending on the circumstances, such as low network conditions,\n   * it's possible to manipulate the result of this method by passing a lower\n   * DPR value.\n   *\n   * The source selection depends on whether this is width-based or DPR-based\n   * srcset.\n   *\n   * In a width-based source, the source's width is the physical width of a\n   * resource (e.g. an image). Depending on the provided DPR, this width is\n   * converted to the screen pixels as following:\n   *   pixelWidth = sourceWidth / DPR\n   *\n   * Then, the source closest to the requested \"width\" is selected using\n   * the \"pixelWidth\". The slight preference is given to the bigger sources to\n   * ensure the most optimal quality.\n   *\n   * In a DPR-based source, the source's DPR is used to return the source that\n   * is closest to the requested DPR.\n   *\n   * Based on\n   * http://www.w3.org/html/wg/drafts/html/master/semantics.html#attr-img-srcset.\n   * @param {number} width\n   * @param {number} dpr\n   * @return {string}\n   */\n\n\n  var _proto = Srcset.prototype;\n\n  _proto.select = function select(width, dpr) {\n    (0, _log.devAssert)(width, 'width=%s', width);\n    (0, _log.devAssert)(dpr, 'dpr=%s', dpr);\n    var index = 0;\n\n    if (this.widthBased_) {\n      index = this.selectByWidth_(width * dpr);\n    } else {\n      index = this.selectByDpr_(dpr);\n    }\n\n    return this.sources_[index].url;\n  }\n  /**\n   * @param {number} width\n   * @return {number}\n   * @private\n   */\n  ;\n\n  _proto.selectByWidth_ = function selectByWidth_(width) {\n    var sources = this.sources_;\n    var minIndex = 0;\n    var minScore = Infinity;\n    var minWidth = Infinity;\n\n    for (var i = 0; i < sources.length; i++) {\n      var sWidth = sources[i].width;\n      var score = Math.abs(sWidth - width); // Select the one that is closer with a slight preference toward larger\n      // widths. If smaller size is closer, enforce minimum ratio to ensure\n      // image isn't too distorted.\n\n      if (score <= minScore * 1.1 || width / minWidth > 1.2) {\n        minIndex = i;\n        minScore = score;\n        minWidth = sWidth;\n      } else {\n        break;\n      }\n    }\n\n    return minIndex;\n  }\n  /**\n   * @param {number} dpr\n   * @return {number}\n   * @private\n   */\n  ;\n\n  _proto.selectByDpr_ = function selectByDpr_(dpr) {\n    var sources = this.sources_;\n    var minIndex = 0;\n    var minScore = Infinity;\n\n    for (var i = 0; i < sources.length; i++) {\n      var score = Math.abs(sources[i].dpr - dpr);\n\n      if (score <= minScore) {\n        minIndex = i;\n        minScore = score;\n      } else {\n        break;\n      }\n    }\n\n    return minIndex;\n  }\n  /**\n   * Returns all URLs in the srcset.\n   * @return {!Array<string>}\n   */\n  ;\n\n  _proto.getUrls = function getUrls() {\n    return this.sources_.map(function (s) {\n      return s.url;\n    });\n  }\n  /**\n   * Reconstructs the string expression for this srcset.\n   * @param {function(string):string=} opt_mapper\n   * @return {string}\n   */\n  ;\n\n  _proto.stringify = function stringify(opt_mapper) {\n    var res = [];\n    var sources = this.sources_;\n\n    for (var i = 0; i < sources.length; i++) {\n      var source = sources[i];\n      var src = source.url;\n\n      if (opt_mapper) {\n        src = opt_mapper(src);\n      }\n\n      if (this.widthBased_) {\n        src += \" \" + source.width + \"w\";\n      } else {\n        src += \" \" + source.dpr + \"x\";\n      }\n\n      res.push(src);\n    }\n\n    return res.join(', ');\n  };\n\n  return Srcset;\n}();\n/**\n * Sorts by width\n *\n * @param {number} s1\n * @param {number} s2\n * @return {number}\n */\n\n\nexports.Srcset = Srcset;\n\nfunction sortByWidth(s1, s2) {\n  (0, _log.userAssert)(s1.width != s2.width, 'Duplicate width: %s', s1.width);\n  return s1.width - s2.width;\n}\n/**\n * Sorts by dpr\n *\n * @param {!Object} s1\n * @param {!Object} s2\n * @return {number}\n */\n\n\nfunction sortByDpr(s1, s2) {\n  (0, _log.userAssert)(s1.dpr != s2.dpr, 'Duplicate dpr: %s', s1.dpr);\n  return s1.dpr - s2.dpr;\n}\n\n},{\"./log\":21}],32:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.dashToCamelCase = dashToCamelCase;\nexports.camelCaseToDash = camelCaseToDash;\nexports.dashToUnderline = dashToUnderline;\nexports.endsWith = endsWith;\nexports.startsWith = startsWith;\nexports.includes = includes;\nexports.expandTemplate = expandTemplate;\nexports.stringHash32 = stringHash32;\nexports.trimEnd = trimEnd;\nexports.trimStart = trimStart;\nexports.padStart = padStart;\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {string} _match\n * @param {string} character\n * @return {string}\n */\nfunction toUpperCase(_match, character) {\n  return character.toUpperCase();\n}\n/**\n * @param {string} match\n * @return {string}\n */\n\n\nfunction prependDashAndToLowerCase(match) {\n  return '-' + match.toLowerCase();\n}\n/**\n * @param {string} name Attribute name containing dashes.\n * @return {string} Dashes removed and successive character sent to upper case.\n * visibleForTesting\n */\n\n\nfunction dashToCamelCase(name) {\n  return name.replace(/-([a-z])/g, toUpperCase);\n}\n/**\n * Converts a string that is in camelCase to one that is in dash-case.\n *\n * @param {string} string The string to convert.\n * @return {string} The string in dash-case.\n */\n\n\nfunction camelCaseToDash(string) {\n  return string.replace(/(?!^)[A-Z]/g, prependDashAndToLowerCase);\n}\n/**\n * @param {string} name Attribute name with dashes\n * @return {string} Dashes replaced by underlines.\n */\n\n\nfunction dashToUnderline(name) {\n  return name.replace('-', '_');\n}\n/**\n * Polyfill for String.prototype.endsWith.\n * @param {string} string\n * @param {string} suffix\n * @return {boolean}\n */\n\n\nfunction endsWith(string, suffix) {\n  var index = string.length - suffix.length;\n  return index >= 0 && string.indexOf(suffix, index) == index;\n}\n/**\n * Polyfill for String.prototype.startsWith.\n * @param {string} string\n * @param {string} prefix\n * @return {boolean}\n */\n\n\nfunction startsWith(string, prefix) {\n  if (prefix.length > string.length) {\n    return false;\n  }\n\n  return string.lastIndexOf(prefix, 0) == 0;\n}\n/**\n * Polyfill for String.prototype.includes.\n * @param {string} string\n * @param {string} substring\n * @param {number=} start\n * @return {boolean}\n */\n\n\nfunction includes(string, substring, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + substring.length > string.length) {\n    return false;\n  }\n\n  return string.indexOf(substring, start) !== -1;\n}\n/**\n * Expands placeholders in a given template string with values.\n *\n * Placeholders use ${key-name} syntax and are replaced with the value\n * returned from the given getter function.\n *\n * @param {string} template The template string to expand.\n * @param {function(string):*} getter Function used to retrieve a value for a\n *   placeholder. Returns values will be coerced into strings.\n * @param {number=} opt_maxIterations Number of times to expand the template.\n *   Defaults to 1, but should be set to a larger value your placeholder tokens\n *   can be expanded to other placeholder tokens. Take caution with large values\n *   as recursively expanding a string can be exponentially expensive.\n * @return {string}\n */\n\n\nfunction expandTemplate(template, getter, opt_maxIterations) {\n  var maxIterations = opt_maxIterations || 1;\n\n  var _loop = function _loop(i) {\n    var matches = 0;\n    template = template.replace(/\\${([^}]*)}/g, function (_a, b) {\n      matches++;\n      return getter(b);\n    });\n\n    if (!matches) {\n      return \"break\";\n    }\n  };\n\n  for (var i = 0; i < maxIterations; i++) {\n    var _ret = _loop(i);\n\n    if (_ret === \"break\") break;\n  }\n\n  return template;\n}\n/**\n * Hash function djb2a\n * This is intended to be a simple, fast hashing function using minimal code.\n * It does *not* have good cryptographic properties.\n * @param {string} str\n * @return {string} 32-bit unsigned hash of the string\n */\n\n\nfunction stringHash32(str) {\n  var length = str.length;\n  var hash = 5381;\n\n  for (var i = 0; i < length; i++) {\n    hash = hash * 33 ^ str.charCodeAt(i);\n  } // Convert from 32-bit signed to unsigned.\n\n\n  return String(hash >>> 0);\n}\n/**\n * Trims a string on the end, removing whitespace characters.\n * @param {string} str  A string to trim.\n * @return {string} The string, with trailing whitespace removed.\n */\n\n\nfunction trimEnd(str) {\n  // TODO(sparhami) Does this get inlined for an ES2019 build?\n  if (str.trimEnd) {\n    return str.trimEnd();\n  }\n\n  return ('_' + str).trim().slice(1);\n}\n/**\n * Trims any leading whitespace from a string.\n * @param {string} str  A string to trim.\n * @return {string} The string, with leading whitespace removed.\n */\n\n\nfunction trimStart(str) {\n  if (str.trimStart) {\n    return str.trimStart();\n  }\n\n  return (str + '_').trim().slice(0, -1);\n}\n/**\n * Pads the beginning of a string with a substring to a target length.\n * @param {string} s\n * @param {number} targetLength\n * @param {string} padString\n * @return {*} TODO(#23582): Specify return type\n */\n\n\nfunction padStart(s, targetLength, padString) {\n  if (s.length >= targetLength) {\n    return s;\n  }\n\n  targetLength = targetLength - s.length;\n  var padding = padString;\n\n  while (targetLength > padding.length) {\n    padding += padString;\n  }\n\n  return padding.slice(0, targetLength) + s;\n}\n\n},{}],33:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.installStylesForDoc = installStylesForDoc;\nexports.installStylesLegacy = installStylesLegacy;\nexports.installCssTransformer = installCssTransformer;\nexports.setBodyMadeVisibleForTesting = setBodyMadeVisibleForTesting;\nexports.makeBodyVisible = makeBodyVisible;\nexports.makeBodyVisibleRecovery = makeBodyVisibleRecovery;\nexports.bodyAlwaysVisible = bodyAlwaysVisible;\n\nvar _commonSignals = require(\"./common-signals\");\n\nvar _services = require(\"./services\");\n\nvar _log = require(\"./log\");\n\nvar _service = require(\"./service\");\n\nvar _dom = require(\"./dom\");\n\nvar _object = require(\"./utils/object\");\n\nvar _style = require(\"./style\");\n\nvar _renderDelayingServices = require(\"./render-delaying-services\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar TRANSFORMER_PROP = '__AMP_CSS_TR';\nvar STYLE_MAP_PROP = '__AMP_CSS_SM';\n/**\n * Adds the given css text to the given ampdoc.\n *\n * The style tags will be at the beginning of the head before all author\n * styles. One element can be the main runtime CSS. This is guaranteed\n * to always be the first stylesheet in the doc.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc The ampdoc that should get the new styles.\n * @param {string} cssText\n * @param {?function(!Element)|undefined} cb Called when the new styles are available.\n *     Not using a promise, because this is synchronous when possible.\n *     for better performance.\n * @param {boolean=} opt_isRuntimeCss If true, this style tag will be inserted\n *     as the first element in head and all style elements will be positioned\n *     after.\n * @param {string=} opt_ext\n * @return {!Element}\n */\n\nfunction installStylesForDoc(ampdoc, cssText, cb, opt_isRuntimeCss, opt_ext) {\n  var cssRoot = ampdoc.getHeadNode();\n  var style = insertStyleElement(cssRoot, maybeTransform(cssRoot, cssText), opt_isRuntimeCss || false, opt_ext || null);\n\n  if (cb) {\n    var rootNode = ampdoc.getRootNode(); // Styles aren't always available synchronously. E.g. if there is a\n    // pending style download, it will have to finish before the new\n    // style is visible.\n    // For this reason we poll until the style becomes available.\n    // Sync case.\n\n    if (styleLoaded(rootNode, style)) {\n      cb(style);\n      return style;\n    } // Poll until styles are available.\n\n\n    var interval = setInterval(function () {\n      if (styleLoaded(rootNode, style)) {\n        clearInterval(interval);\n        cb(style);\n      }\n    }, 4);\n  }\n\n  return style;\n}\n/**\n * Adds the given css text to the given document.\n * TODO(dvoytenko, #22733): Remove this method once FIE/ampdoc migration is\n * done.\n *\n * @param {!Document} doc The document that should get the new styles.\n * @param {string} cssText\n * @param {?function(!Element)|undefined} cb Called when the new styles are\n *     available. Not using a promise, because this is synchronous when\n *     possible. for better performance.\n * @param {boolean=} opt_isRuntimeCss If true, this style tag will be inserted\n *     as the first element in head and all style elements will be positioned\n *     after.\n * @param {string=} opt_ext\n * @return {!Element}\n */\n\n\nfunction installStylesLegacy(doc, cssText, cb, opt_isRuntimeCss, opt_ext) {\n  var style = insertStyleElement((0, _log.dev)().assertElement(doc.head), cssText, opt_isRuntimeCss || false, opt_ext || null);\n\n  if (cb) {\n    // Styles aren't always available synchronously. E.g. if there is a\n    // pending style download, it will have to finish before the new\n    // style is visible.\n    // For this reason we poll until the style becomes available.\n    // Sync case.\n    if (styleLoaded(doc, style)) {\n      cb(style);\n      return style;\n    } // Poll until styles are available.\n\n\n    var interval = setInterval(function () {\n      if (styleLoaded(doc, style)) {\n        clearInterval(interval);\n        cb(style);\n      }\n    }, 4);\n  }\n\n  return style;\n}\n/**\n * Creates the properly configured style element.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @param {boolean} isRuntimeCss\n * @param {?string} ext\n * @return {!Element}\n */\n\n\nfunction insertStyleElement(cssRoot, cssText, isRuntimeCss, ext) {\n  var styleMap = cssRoot[STYLE_MAP_PROP];\n\n  if (!styleMap) {\n    styleMap = cssRoot[STYLE_MAP_PROP] = (0, _object.map)();\n  }\n\n  var isExtCss = !isRuntimeCss && ext && ext != 'amp-custom' && ext != 'amp-keyframes';\n  var key = isRuntimeCss ? 'amp-runtime' : isExtCss ? \"amp-extension=\" + ext : null; // Check if it has already been created or discovered.\n\n  if (key) {\n    var existing = getExistingStyleElement(cssRoot, styleMap, key);\n\n    if (existing) {\n      if (existing.textContent !== cssText) {\n        existing.textContent = cssText;\n      }\n\n      return existing;\n    }\n  } // Create the new style element and append to cssRoot.\n\n\n  var doc = cssRoot.ownerDocument || cssRoot;\n  var style = doc.createElement('style');\n  style.\n  /*OK*/\n  textContent = cssText;\n  var afterElement = null; // Make sure that we place style tags after the main runtime CSS. Otherwise\n  // the order is random.\n\n  if (isRuntimeCss) {\n    style.setAttribute('amp-runtime', '');\n  } else if (isExtCss) {\n    style.setAttribute('amp-extension', ext || '');\n    afterElement = (0, _log.dev)().assertElement(getExistingStyleElement(cssRoot, styleMap, 'amp-runtime'));\n  } else {\n    if (ext) {\n      style.setAttribute(ext, '');\n    }\n\n    afterElement = cssRoot.lastChild;\n  }\n\n  (0, _dom.insertAfterOrAtStart)(cssRoot, style, afterElement);\n\n  if (key) {\n    styleMap[key] = style;\n  }\n\n  return style;\n}\n/**\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {!Object<string, !Element>} styleMap\n * @param {string} key\n * @return {?Element}\n */\n\n\nfunction getExistingStyleElement(cssRoot, styleMap, key) {\n  // Already cached.\n  if (styleMap[key]) {\n    return styleMap[key];\n  } // Check if the style has already been added by the server layout.\n\n\n  var existing = cssRoot.\n  /*OK*/\n  querySelector(\"style[\" + key + \"]\");\n\n  if (existing) {\n    styleMap[key] = existing;\n    return existing;\n  } // Nothing found.\n\n\n  return null;\n}\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {function(string):string} transformer\n */\n\n\nfunction installCssTransformer(cssRoot, transformer) {\n  cssRoot[TRANSFORMER_PROP] = transformer;\n}\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @return {string}\n */\n\n\nfunction maybeTransform(cssRoot, cssText) {\n  var transformer = cssRoot[TRANSFORMER_PROP];\n  return transformer ? transformer(cssText) : cssText;\n}\n/** @private {boolean} */\n\n\nvar bodyMadeVisible = false;\n/**\n * @param {boolean} value\n * @visibleForTesting\n */\n\nfunction setBodyMadeVisibleForTesting(value) {\n  bodyMadeVisible = value;\n}\n/**\n * Sets the document's body opacity to 1.\n * If the body is not yet available (because our script was loaded\n * synchronously), polls until it is.\n * @param {!Document} doc The document who's body we should make visible.\n */\n\n\nfunction makeBodyVisible(doc) {\n  (0, _log.devAssert)(doc.defaultView, 'Passed in document must have a defaultView');\n  var win =\n  /** @type {!Window} */\n  doc.defaultView;\n  (0, _dom.waitForBodyOpenPromise)(doc).then(function () {\n    return (0, _renderDelayingServices.waitForServices)(win);\n  }).catch(function (reason) {\n    (0, _log.rethrowAsync)(reason);\n    return [];\n  }).then(function (services) {\n    bodyMadeVisible = true;\n    setBodyVisibleStyles(doc);\n    var ampdoc = (0, _service.getAmpdoc)(doc);\n    ampdoc.signals().signal(_commonSignals.CommonSignals.RENDER_START);\n\n    if (services.length > 0) {\n      var resources = _services.Services.resourcesForDoc(doc.documentElement);\n\n      resources.\n      /*OK*/\n      schedulePass(1,\n      /* relayoutAll */\n      true);\n    }\n\n    try {\n      var perf = _services.Services.performanceFor(win);\n\n      perf.tick('mbv');\n      perf.flush();\n    } catch (e) {}\n  });\n}\n/**\n * Set the document's body opacity to 1. Called in error cases.\n * @param {!Document} doc The document who's body we should make visible.\n */\n\n\nfunction makeBodyVisibleRecovery(doc) {\n  (0, _log.devAssert)(doc.defaultView, 'Passed in document must have a defaultView');\n\n  if (bodyMadeVisible) {\n    return;\n  }\n\n  bodyMadeVisible = true;\n  setBodyVisibleStyles(doc);\n}\n/**\n * Make sure that body exists, and make it visible.\n * @param {!Document} doc\n */\n\n\nfunction setBodyVisibleStyles(doc) {\n  (0, _style.setStyles)((0, _log.dev)().assertElement(doc.body), {\n    opacity: 1,\n    visibility: 'visible',\n    'animation': 'none'\n  });\n}\n/**\n * Indicates that the body is always visible. For instance, in case of PWA.\n * This check is on a module level variable, and could be problematic if you are\n * relying on this function across different binaries.\n * @param {!Window} unusedWin\n */\n\n\nfunction bodyAlwaysVisible(unusedWin) {\n  bodyMadeVisible = true;\n}\n/**\n * Checks whether a style element was registered in the DOM.\n * @param {!Document|!ShadowRoot} doc\n * @param {!Element} style\n * @return {boolean}\n */\n\n\nfunction styleLoaded(doc, style) {\n  var sheets = doc.styleSheets;\n\n  for (var i = 0; i < sheets.length; i++) {\n    var sheet = sheets[i];\n\n    if (sheet.ownerNode == style) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n},{\"./common-signals\":9,\"./dom\":12,\"./log\":21,\"./render-delaying-services\":28,\"./service\":29,\"./services\":30,\"./style\":34,\"./utils/object\":42}],34:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.camelCaseToTitleCase = camelCaseToTitleCase;\nexports.getVendorJsPropertyName = getVendorJsPropertyName;\nexports.setImportantStyles = setImportantStyles;\nexports.setStyle = setStyle;\nexports.getStyle = getStyle;\nexports.setStyles = setStyles;\nexports.assertNotDisplay = assertNotDisplay;\nexports.assertDoesNotContainDisplay = assertDoesNotContainDisplay;\nexports.setInitialDisplay = setInitialDisplay;\nexports.toggle = toggle;\nexports.px = px;\nexports.deg = deg;\nexports.translateX = translateX;\nexports.translate = translate;\nexports.scale = scale;\nexports.rotate = rotate;\nexports.removeAlphaFromColor = removeAlphaFromColor;\nexports.computedStyle = computedStyle;\nexports.resetStyles = resetStyles;\nexports.propagateObjectFitStyles = propagateObjectFitStyles;\n\nvar _log = require(\"./log\");\n\nvar _object = require(\"./utils/object.js\");\n\nvar _string = require(\"./string\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Note: loaded by 3p system. Cannot rely on babel polyfills.\n\n/** @type {Object<string, string>} */\nvar propertyNameCache;\n/** @const {!Array<string>} */\n\nvar vendorPrefixes = ['Webkit', 'webkit', 'Moz', 'moz', 'ms', 'O', 'o'];\n/**\n * @export\n * @param {string} camelCase camel cased string\n * @return {string} title cased string\n */\n\nfunction camelCaseToTitleCase(camelCase) {\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n}\n/**\n  Checks the style if a prefixed version of a property exists and returns\n * it or returns an empty string.\n * @private\n * @param {!Object} style\n * @param {string} titleCase the title case version of a css property name\n * @return {string} the prefixed property name or null.\n */\n\n\nfunction getVendorJsPropertyName_(style, titleCase) {\n  for (var i = 0; i < vendorPrefixes.length; i++) {\n    var propertyName = vendorPrefixes[i] + titleCase;\n\n    if (style[propertyName] !== undefined) {\n      return propertyName;\n    }\n  }\n\n  return '';\n}\n/**\n * Returns the possibly prefixed JavaScript property name of a style property\n * (ex. WebkitTransitionDuration) given a camelCase'd version of the property\n * (ex. transitionDuration).\n * @export\n * @param {!Object} style\n * @param {string} camelCase the camel cased version of a css property name\n * @param {boolean=} opt_bypassCache bypass the memoized cache of property\n *   mapping\n * @return {string}\n */\n\n\nfunction getVendorJsPropertyName(style, camelCase, opt_bypassCache) {\n  if ((0, _string.startsWith)(camelCase, '--')) {\n    // CSS vars are returned as is.\n    return camelCase;\n  }\n\n  if (!propertyNameCache) {\n    propertyNameCache = (0, _object.map)();\n  }\n\n  var propertyName = propertyNameCache[camelCase];\n\n  if (!propertyName || opt_bypassCache) {\n    propertyName = camelCase;\n\n    if (style[camelCase] === undefined) {\n      var titleCase = camelCaseToTitleCase(camelCase);\n      var prefixedPropertyName = getVendorJsPropertyName_(style, titleCase);\n\n      if (style[prefixedPropertyName] !== undefined) {\n        propertyName = prefixedPropertyName;\n      }\n    }\n\n    if (!opt_bypassCache) {\n      propertyNameCache[camelCase] = propertyName;\n    }\n  }\n\n  return propertyName;\n}\n/**\n * Sets the CSS styles of the specified element with !important. The styles\n * are specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\n\n\nfunction setImportantStyles(element, styles) {\n  var style = element.style;\n\n  for (var k in styles) {\n    style.setProperty(getVendorJsPropertyName(style, k), styles[k].toString(), 'important');\n  }\n}\n/**\n * Sets the CSS style of the specified element with optional units, e.g. \"px\".\n * @param {?Element} element\n * @param {string} property\n * @param {*} value\n * @param {string=} opt_units\n * @param {boolean=} opt_bypassCache\n */\n\n\nfunction setStyle(element, property, value, opt_units, opt_bypassCache) {\n  var propertyName = getVendorJsPropertyName(element.style, property, opt_bypassCache);\n\n  if (propertyName) {\n    element.style[propertyName] =\n    /** @type {string} */\n    opt_units ? value + opt_units : value;\n  }\n}\n/**\n * Returns the value of the CSS style of the specified element.\n * @param {!Element} element\n * @param {string} property\n * @param {boolean=} opt_bypassCache\n * @return {*}\n */\n\n\nfunction getStyle(element, property, opt_bypassCache) {\n  var propertyName = getVendorJsPropertyName(element.style, property, opt_bypassCache);\n\n  if (!propertyName) {\n    return undefined;\n  }\n\n  return element.style[propertyName];\n}\n/**\n * Sets the CSS styles of the specified element. The styles\n * a specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\n\n\nfunction setStyles(element, styles) {\n  for (var k in styles) {\n    setStyle(element, k, styles[k]);\n  }\n}\n/**\n * Asserts that the style is not the `display` style.\n * This is the only possible way to pass a dynamic style to setStyle.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {string} style\n * @return {string}\n */\n\n\nfunction assertNotDisplay(style) {\n  if (style === 'display') {\n    (0, _log.dev)().error('STYLE', '`display` style detected. You must use toggle instead.');\n  }\n\n  return style;\n}\n/**\n * Asserts that the styles does not contain the `display` style.\n * This is the only possible way to pass a dynamic styles object to setStyles\n * and setImportantStyles.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {!Object<string, *>} styles\n * @return {!Object<string, *>}\n */\n\n\nfunction assertDoesNotContainDisplay(styles) {\n  if ('display' in styles) {\n    (0, _log.dev)().error('STYLE', '`display` style detected in styles. You must use toggle instead.');\n  }\n\n  return styles;\n}\n/**\n * Sets the initial display style of an element. This is a last resort. If you\n * can set the initial display using CSS, YOU MUST.\n * DO NOT USE THIS TO ARBITRARILY SET THE DISPLAY STYLE AFTER INITIAL SETUP.\n *\n * @param {!Element} el\n * @param {string} value\n */\n\n\nfunction setInitialDisplay(el, value) {\n  var style = el.style;\n  (0, _log.devAssert)(value !== '' && value !== 'none', 'Initial display value must not be \"none\". Use toggle instead.');\n  (0, _log.devAssert)(!style['display'], 'setInitialDisplay MUST NOT be used for ' + 'resetting the display style. If you are looking for display:none ' + 'toggling, use toggle instead.');\n  style['display'] = value;\n}\n/**\n * Shows or hides the specified element.\n * @param {!Element} element\n * @param {boolean=} opt_display\n */\n\n\nfunction toggle(element, opt_display) {\n  if (opt_display === undefined) {\n    opt_display = element.hasAttribute('hidden');\n  }\n\n  if (opt_display) {\n    element.removeAttribute('hidden');\n  } else {\n    element.setAttribute('hidden', '');\n  }\n}\n/**\n * Returns a pixel value.\n * @param {number} value\n * @return {string}\n */\n\n\nfunction px(value) {\n  return value + \"px\";\n}\n/**\n * Returns a degree value.\n * @param {number} value\n * @return {string}\n */\n\n\nfunction deg(value) {\n  return value + \"deg\";\n}\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\n\n\nfunction translateX(value) {\n  if (typeof value == 'string') {\n    return \"translateX(\" + value + \")\";\n  }\n\n  return \"translateX(\" + px(value) + \")\";\n}\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} x\n * @param {(number|string)=} opt_y\n * @return {string}\n */\n\n\nfunction translate(x, opt_y) {\n  if (typeof x == 'number') {\n    x = px(x);\n  }\n\n  if (opt_y === undefined) {\n    return \"translate(\" + x + \")\";\n  }\n\n  if (typeof opt_y == 'number') {\n    opt_y = px(opt_y);\n  }\n\n  return \"translate(\" + x + \", \" + opt_y + \")\";\n}\n/**\n * Returns a \"scale\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\n\n\nfunction scale(value) {\n  return \"scale(\" + value + \")\";\n}\n/**\n * Returns a \"rotate\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\n\n\nfunction rotate(value) {\n  if (typeof value == 'number') {\n    value = deg(value);\n  }\n\n  return \"rotate(\" + value + \")\";\n}\n/**\n * Remove alpha value from a rgba color value.\n * Return the new color property with alpha equals if has the alpha value.\n * Caller needs to make sure the input color value is a valid rgba/rgb value\n * @param {string} rgbaColor\n * @return {string}\n */\n\n\nfunction removeAlphaFromColor(rgbaColor) {\n  return rgbaColor.replace(/\\(([^,]+),([^,]+),([^,)]+),[^)]+\\)/g, '($1,$2,$3, 1)');\n}\n/**\n * Gets the computed style of the element. The helper is necessary to enforce\n * the possible `null` value returned by a buggy Firefox.\n *\n * @param {!Window} win\n * @param {!Element} el\n * @return {!Object<string, string>}\n */\n\n\nfunction computedStyle(win, el) {\n  var style =\n  /** @type {?CSSStyleDeclaration} */\n  win.getComputedStyle(el);\n  return (\n    /** @type {!Object<string, string>} */\n    style || (0, _object.map)()\n  );\n}\n/**\n * Resets styles that were set dynamically (i.e. inline)\n * @param {!Element} element\n * @param {!Array<string>} properties\n */\n\n\nfunction resetStyles(element, properties) {\n  for (var i = 0; i < properties.length; i++) {\n    setStyle(element, properties[i], null);\n  }\n}\n/**\n * Propagates the object-fit/position element attributes as styles.\n * @param {!Element} fromEl ie: amp-img\n * @param {!Element} toEl ie: the img within amp-img\n */\n\n\nfunction propagateObjectFitStyles(fromEl, toEl) {\n  if (fromEl.hasAttribute('object-fit')) {\n    setStyle(toEl, 'object-fit', fromEl.getAttribute('object-fit'));\n  }\n\n  if (fromEl.hasAttribute('object-position')) {\n    setStyle(toEl, 'object-position', fromEl.getAttribute('object-position'));\n  }\n}\n\n},{\"./log\":21,\"./string\":32,\"./utils/object.js\":42}],35:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.isArray = isArray;\nexports.toArray = toArray;\nexports.isObject = isObject;\nexports.isFiniteNumber = isFiniteNumber;\nexports.isEnumValue = isEnumValue;\nexports.toWin = toWin;\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nvar toString_ = Object.prototype.toString;\n/**\n * Returns the ECMA [[Class]] of a value\n * @param {*} value\n * @return {string}\n */\n\nfunction toString(value) {\n  return toString_.call(value);\n}\n/**\n * Determines if value is actually an Array.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return Array.isArray(value);\n}\n/**\n * Converts an array-like object to an array.\n * @param {?IArrayLike<T>|string} arrayLike\n * @return {!Array<T>}\n * @template T\n */\n\n\nfunction toArray(arrayLike) {\n  return arrayLike ? Array.prototype.slice.call(arrayLike) : [];\n}\n/**\n * Determines if value is actually an Object.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  return toString(value) === '[object Object]';\n}\n/**\n * Determines if value is of number type and finite.\n * NaN and Infinity are not considered a finite number.\n * String numbers are not considered numbers.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFiniteNumber(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n/**\n * Checks whether `s` is a valid value of `enumObj`.\n *\n * @param {!Object<T>} enumObj\n * @param {T} s\n * @return {boolean}\n * @template T\n */\n\n\nfunction isEnumValue(enumObj, s) {\n  for (var k in enumObj) {\n    if (enumObj[k] === s) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Externs declare that access `defaultView` from `document` or\n * `ownerDocument` is of type `(Window|null)` but most of our parameter types\n * assume that it is never null. This is OK in practice as we ever only get\n * null on disconnected documents or old IE.\n * This helper function casts it into just a simple Window return type.\n *\n * @param {!Window|null} winOrNull\n * @return {!Window}\n */\n\n\nfunction toWin(winOrNull) {\n  return (\n    /** @type {!Window} */\n    winOrNull\n  );\n}\n\n},{}],36:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.parseQueryString_ = parseQueryString_;\n\nvar _urlTryDecodeUriComponent = require(\"./url-try-decode-uri-component\");\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar regex = /(?:^[#?]?|&)([^=&]+)(?:=([^&]*))?/g;\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * DO NOT import the function from this file. Instead, import parseQueryString\n * from `src/url.js`.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\n\nfunction parseQueryString_(queryString) {\n  var params =\n  /** @type {!JsonObject} */\n  Object.create(null);\n\n  if (!queryString) {\n    return params;\n  }\n\n  var match;\n\n  while (match = regex.exec(queryString)) {\n    var name = (0, _urlTryDecodeUriComponent.tryDecodeUriComponent_)(match[1], match[1]);\n    var value = match[2] ? (0, _urlTryDecodeUriComponent.tryDecodeUriComponent_)(match[2].replace(/\\+/g, ' '), match[2]) : '';\n    params[name] = value;\n  }\n\n  return params;\n}\n\n},{\"./url-try-decode-uri-component\":37}],37:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.tryDecodeUriComponent_ = tryDecodeUriComponent_;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * DO NOT import the function from this file. Instead, import\n * tryDecodeUriComponent from `src/url.js`.\n *\n * @param {string} component\n * @param {string=} fallback\n * @return {string}\n */\nfunction tryDecodeUriComponent_(component, fallback) {\n  if (fallback === void 0) {\n    fallback = '';\n  }\n\n  try {\n    return decodeURIComponent(component);\n  } catch (e) {\n    return fallback;\n  }\n}\n\n},{}],38:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getWinOrigin = getWinOrigin;\nexports.parseUrlDeprecated = parseUrlDeprecated;\nexports.parseUrlWithA = parseUrlWithA;\nexports.appendEncodedParamStringToUrl = appendEncodedParamStringToUrl;\nexports.addParamToUrl = addParamToUrl;\nexports.addParamsToUrl = addParamsToUrl;\nexports.addMissingParamsToUrl = addMissingParamsToUrl;\nexports.serializeQueryString = serializeQueryString;\nexports.isSecureUrlDeprecated = isSecureUrlDeprecated;\nexports.assertHttpsUrl = assertHttpsUrl;\nexports.assertAbsoluteHttpOrHttpsUrl = assertAbsoluteHttpOrHttpsUrl;\nexports.parseQueryString = parseQueryString;\nexports.removeFragment = removeFragment;\nexports.getFragment = getFragment;\nexports.isProxyOrigin = isProxyOrigin;\nexports.getProxyServingType = getProxyServingType;\nexports.isLocalhostOrigin = isLocalhostOrigin;\nexports.isProtocolValid = isProtocolValid;\nexports.removeAmpJsParamsFromUrl = removeAmpJsParamsFromUrl;\nexports.removeSearch = removeSearch;\nexports.removeParamsFromSearch = removeParamsFromSearch;\nexports.getSourceUrl = getSourceUrl;\nexports.getSourceOrigin = getSourceOrigin;\nexports.resolveRelativeUrl = resolveRelativeUrl;\nexports.resolveRelativeUrlFallback_ = resolveRelativeUrlFallback_;\nexports.getCorsUrl = getCorsUrl;\nexports.checkCorsUrl = checkCorsUrl;\nexports.tryDecodeUriComponent = tryDecodeUriComponent;\nexports.SOURCE_ORIGIN_PARAM = void 0;\n\nvar _lruCache = require(\"./utils/lru-cache\");\n\nvar _object = require(\"./utils/object\");\n\nvar _string = require(\"./string\");\n\nvar _mode = require(\"./mode\");\n\nvar _types = require(\"./types\");\n\nvar _urlParseQueryString = require(\"./url-parse-query-string\");\n\nvar _urlTryDecodeUriComponent = require(\"./url-try-decode-uri-component\");\n\nvar _config = require(\"./config\");\n\nvar _log = require(\"./log\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @type {!JsonObject}\n */\nvar SERVING_TYPE_PREFIX = (0, _object.dict)({\n  // No viewer\n  'c': true,\n  // In viewer\n  'v': true,\n  // Ad landing page\n  'a': true,\n  // Ad\n  'ad': true,\n  // Actions viewer\n  'action': true\n});\n/**\n * Cached a-tag to avoid memory allocation during URL parsing.\n * @type {HTMLAnchorElement}\n */\n\nvar a;\n/**\n * We cached all parsed URLs. As of now there are no use cases\n * of AMP docs that would ever parse an actual large number of URLs,\n * but we often parse the same one over and over again.\n * @type {LruCache}\n */\n\nvar cache;\n/** @private @const Matches amp_js_* parameters in query string. */\n\nvar AMP_JS_PARAMS_REGEX = /[?&]amp_js[^&]*/;\n/** @private @const Matches amp_gsa parameters in query string. */\n\nvar AMP_GSA_PARAMS_REGEX = /[?&]amp_gsa[^&]*/;\n/** @private @const Matches amp_r parameters in query string. */\n\nvar AMP_R_PARAMS_REGEX = /[?&]amp_r[^&]*/;\n/** @private @const Matches amp_kit parameters in query string. */\n\nvar AMP_KIT_PARAMS_REGEX = /[?&]amp_kit[^&]*/;\n/** @private @const Matches usqp parameters from goog experiment in query string. */\n\nvar GOOGLE_EXPERIMENT_PARAMS_REGEX = /[?&]usqp[^&]*/;\nvar INVALID_PROTOCOLS = [\n/*eslint no-script-url: 0*/\n'javascript:',\n/*eslint no-script-url: 0*/\n'data:',\n/*eslint no-script-url: 0*/\n'vbscript:'];\n/** @const {string} */\n\nvar SOURCE_ORIGIN_PARAM = '__amp_source_origin';\n/**\n * Returns the correct origin for a given window.\n * @param {!Window} win\n * @return {string} origin\n */\n\nexports.SOURCE_ORIGIN_PARAM = SOURCE_ORIGIN_PARAM;\n\nfunction getWinOrigin(win) {\n  return win.origin || parseUrlDeprecated(win.location.href).origin;\n}\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {string} url\n * @param {boolean=} opt_nocache\n * @return {!Location}\n */\n\n\nfunction parseUrlDeprecated(url, opt_nocache) {\n  if (!a) {\n    a =\n    /** @type {!HTMLAnchorElement} */\n    self.document.createElement('a');\n    cache = self.__AMP_URL_CACHE || (self.__AMP_URL_CACHE = new _lruCache.LruCache(100));\n  }\n\n  return parseUrlWithA(a, url, opt_nocache ? null : cache);\n}\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {!HTMLAnchorElement} a\n * @param {string} url\n * @param {LruCache=} opt_cache\n * @return {!Location}\n * @restricted\n */\n\n\nfunction parseUrlWithA(a, url, opt_cache) {\n  if (opt_cache && opt_cache.has(url)) {\n    return opt_cache.get(url);\n  }\n\n  a.href = url; // IE11 doesn't provide full URL components when parsing relative URLs.\n  // Assigning to itself again does the trick #3449.\n\n  if (!a.protocol) {\n    a.href = a.href;\n  }\n\n  var info =\n  /** @type {!Location} */\n  {\n    href: a.href,\n    protocol: a.protocol,\n    host: a.host,\n    hostname: a.hostname,\n    port: a.port == '0' ? '' : a.port,\n    pathname: a.pathname,\n    search: a.search,\n    hash: a.hash,\n    origin: null // Set below.\n\n  }; // Some IE11 specific polyfills.\n  // 1) IE11 strips out the leading '/' in the pathname.\n\n  if (info.pathname[0] !== '/') {\n    info.pathname = '/' + info.pathname;\n  } // 2) For URLs with implicit ports, IE11 parses to default ports while\n  // other browsers leave the port field empty.\n\n\n  if (info.protocol == 'http:' && info.port == 80 || info.protocol == 'https:' && info.port == 443) {\n    info.port = '';\n    info.host = info.hostname;\n  } // For data URI a.origin is equal to the string 'null' which is not useful.\n  // We instead return the actual origin which is the full URL.\n\n\n  var origin;\n\n  if (a.origin && a.origin != 'null') {\n    origin = a.origin;\n  } else if (info.protocol == 'data:' || !info.host) {\n    origin = info.href;\n  } else {\n    origin = info.protocol + '//' + info.host;\n  }\n\n  info.origin = origin; // Freeze during testing to avoid accidental mutation.\n\n  var frozen = (0, _mode.getMode)().test && Object.freeze ? Object.freeze(info) : info;\n\n  if (opt_cache) {\n    opt_cache.put(url, frozen);\n  }\n\n  return frozen;\n}\n/**\n * Appends the string just before the fragment part (or optionally\n * to the front of the query string) of the URL.\n * @param {string} url\n * @param {string} paramString\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\n\n\nfunction appendEncodedParamStringToUrl(url, paramString, opt_addToFront) {\n  if (!paramString) {\n    return url;\n  }\n\n  var mainAndFragment = url.split('#', 2);\n  var mainAndQuery = mainAndFragment[0].split('?', 2);\n  var newUrl = mainAndQuery[0] + (mainAndQuery[1] ? opt_addToFront ? \"?\" + paramString + \"&\" + mainAndQuery[1] : \"?\" + mainAndQuery[1] + \"&\" + paramString : \"?\" + paramString);\n  newUrl += mainAndFragment[1] ? \"#\" + mainAndFragment[1] : '';\n  return newUrl;\n}\n/**\n * Appends a query string field and value to a url. `key` and `value`\n * will be ran through `encodeURIComponent` before appending.\n * @param {string} url\n * @param {string} key\n * @param {string} value\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\n\n\nfunction addParamToUrl(url, key, value, opt_addToFront) {\n  var field = encodeURIComponent(key) + \"=\" + encodeURIComponent(value);\n  return appendEncodedParamStringToUrl(url, field, opt_addToFront);\n}\n/**\n * Appends query string fields and values to a url. The `params` objects'\n * `key`s and `value`s will be transformed into query string keys/values.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\n\n\nfunction addParamsToUrl(url, params) {\n  return appendEncodedParamStringToUrl(url, serializeQueryString(params));\n}\n/**\n * Append query string fields and values to a url, only if the key does not\n * exist in current query string.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\n\n\nfunction addMissingParamsToUrl(url, params) {\n  var location = parseUrlDeprecated(url);\n  var existingParams = parseQueryString(location.search);\n  var paramsToAdd = (0, _object.dict)({});\n  var keys = Object.keys(params);\n\n  for (var i = 0; i < keys.length; i++) {\n    if (!(0, _object.hasOwn)(existingParams, keys[i])) {\n      paramsToAdd[keys[i]] = params[keys[i]];\n    }\n  }\n\n  return addParamsToUrl(url, paramsToAdd);\n}\n/**\n * Serializes the passed parameter map into a query string with both keys\n * and values encoded.\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\n\n\nfunction serializeQueryString(params) {\n  var s = [];\n\n  for (var k in params) {\n    var v = params[k];\n\n    if (v == null) {\n      continue;\n    } else if ((0, _types.isArray)(v)) {\n      for (var i = 0; i < v.length; i++) {\n        var sv =\n        /** @type {string} */\n        v[i];\n        s.push(encodeURIComponent(k) + \"=\" + encodeURIComponent(sv));\n      }\n    } else {\n      var _sv =\n      /** @type {string} */\n      v;\n      s.push(encodeURIComponent(k) + \"=\" + encodeURIComponent(_sv));\n    }\n  }\n\n  return s.join('&');\n}\n/**\n * Returns `true` if the URL is secure: either HTTPS or localhost (for testing).\n * @param {string|!Location} url\n * @return {boolean}\n */\n\n\nfunction isSecureUrlDeprecated(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  return url.protocol == 'https:' || url.hostname == 'localhost' || url.hostname == '127.0.0.1' || (0, _string.endsWith)(url.hostname, '.localhost');\n}\n/**\n * Asserts that a given url is HTTPS or protocol relative. It's a user-level\n * assert.\n *\n * Provides an exception for localhost.\n *\n * @param {?string|undefined} urlString\n * @param {!Element|string} elementContext Element where the url was found.\n * @param {string=} sourceName Used for error messages.\n * @return {string}\n */\n\n\nfunction assertHttpsUrl(urlString, elementContext, sourceName) {\n  if (sourceName === void 0) {\n    sourceName = 'source';\n  }\n\n  (0, _log.userAssert)(urlString != null, '%s %s must be available', elementContext, sourceName); // (erwinm, #4560): type cast necessary until #4560 is fixed.\n\n  var theUrlString =\n  /** @type {string} */\n  urlString;\n  (0, _log.userAssert)(isSecureUrlDeprecated(theUrlString) || /^(\\/\\/)/.test(theUrlString), '%s %s must start with ' + '\"https://\" or \"//\" or be relative and served from ' + 'either https or from localhost. Invalid value: %s', elementContext, sourceName, theUrlString);\n  return theUrlString;\n}\n/**\n * Asserts that a given url is an absolute HTTP or HTTPS URL.\n * @param {string} urlString\n * @return {string}\n */\n\n\nfunction assertAbsoluteHttpOrHttpsUrl(urlString) {\n  (0, _log.userAssert)(/^https?\\:/i.test(urlString), 'URL must start with \"http://\" or \"https://\". Invalid value: %s', urlString);\n  return parseUrlDeprecated(urlString).href;\n}\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * This function is implemented in a separate file to avoid a circular\n * dependency.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\n\n\nfunction parseQueryString(queryString) {\n  return (0, _urlParseQueryString.parseQueryString_)(queryString);\n}\n/**\n * Returns the URL without fragment. If URL doesn't contain fragment, the same\n * string is returned.\n * @param {string} url\n * @return {string}\n */\n\n\nfunction removeFragment(url) {\n  var index = url.indexOf('#');\n\n  if (index == -1) {\n    return url;\n  }\n\n  return url.substring(0, index);\n}\n/**\n * Returns the fragment from the URL. If the URL doesn't contain fragment,\n * the empty string is returned.\n * @param {string} url\n * @return {string}\n */\n\n\nfunction getFragment(url) {\n  var index = url.indexOf('#');\n\n  if (index == -1) {\n    return '';\n  }\n\n  return url.substring(index);\n}\n/**\n * Returns whether the URL has the origin of a proxy.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\n\n\nfunction isProxyOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  return _config.urls.cdnProxyRegex.test(url.origin);\n}\n/**\n * For proxy-origin URLs, returns the serving type. Otherwise, returns null.\n * E.g., 'https://amp-com.cdn.ampproject.org/a/s/amp.com/amp_document.html'\n * returns 'a'.\n * @param {string|!Location} url URL of an AMP document.\n * @return {?string}\n */\n\n\nfunction getProxyServingType(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  if (!isProxyOrigin(url)) {\n    return null;\n  }\n\n  var path = url.pathname.split('/', 2);\n  return path[1];\n}\n/**\n * Returns whether the URL origin is localhost.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\n\n\nfunction isLocalhostOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  return _config.urls.localhostRegex.test(url.origin);\n}\n/**\n * Returns whether the URL has valid protocol.\n * Deep link protocol is valid, but not javascript etc.\n * @param {string|!Location} url\n * @return {boolean}\n */\n\n\nfunction isProtocolValid(url) {\n  if (!url) {\n    return true;\n  }\n\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  return !INVALID_PROTOCOLS.includes(url.protocol);\n}\n/**\n * Returns a URL without AMP JS parameters.\n * @param {string} url\n * @return {string}\n */\n\n\nfunction removeAmpJsParamsFromUrl(url) {\n  var parsed = parseUrlDeprecated(url);\n  var search = removeAmpJsParamsFromSearch(parsed.search);\n  return parsed.origin + parsed.pathname + search + parsed.hash;\n}\n/**\n * Returns a URL without a query string.\n * @param {string} url\n * @return {string}\n */\n\n\nfunction removeSearch(url) {\n  var index = url.indexOf('?');\n\n  if (index == -1) {\n    return url;\n  }\n\n  var fragment = getFragment(url);\n  return url.substring(0, index) + fragment;\n}\n/**\n * Removes parameters that start with amp js parameter pattern and returns the\n * new search string.\n * @param {string} urlSearch\n * @return {string}\n */\n\n\nfunction removeAmpJsParamsFromSearch(urlSearch) {\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n\n  var search = urlSearch.replace(AMP_JS_PARAMS_REGEX, '').replace(AMP_GSA_PARAMS_REGEX, '').replace(AMP_R_PARAMS_REGEX, '').replace(AMP_KIT_PARAMS_REGEX, '').replace(GOOGLE_EXPERIMENT_PARAMS_REGEX, '').replace(/^[?&]/, ''); // Removes first ? or &.\n\n  return search ? '?' + search : '';\n}\n/**\n * Removes parameters with param name and returns the new search string.\n * @param {string} urlSearch\n * @param {string} paramName\n * @return {string}\n */\n\n\nfunction removeParamsFromSearch(urlSearch, paramName) {\n  // TODO: reuse the function in removeAmpJsParamsFromSearch. Accept paramNames\n  // as an array.\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n\n  var paramRegex = new RegExp(\"[?&]\" + paramName + \"=[^&]*\", 'g');\n  var search = urlSearch.replace(paramRegex, '').replace(/^[?&]/, '');\n  return search ? '?' + search : '';\n}\n/**\n * Returns the source URL of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string}\n */\n\n\nfunction getSourceUrl(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  } // Not a proxy URL - return the URL itself.\n\n\n  if (!isProxyOrigin(url)) {\n    return url.href;\n  } // A proxy URL.\n  // Example path that is being matched here.\n  // https://cdn.ampproject.org/c/s/www.origin.com/foo/\n  // The /s/ is optional and signals a secure origin.\n\n\n  var path = url.pathname.split('/');\n  var prefix = path[1];\n  (0, _log.userAssert)(SERVING_TYPE_PREFIX[prefix], 'Unknown path prefix in url %s', url.href);\n  var domainOrHttpsSignal = path[2];\n  var origin = domainOrHttpsSignal == 's' ? 'https://' + decodeURIComponent(path[3]) : 'http://' + decodeURIComponent(domainOrHttpsSignal); // Sanity test that what we found looks like a domain.\n\n  (0, _log.userAssert)(origin.indexOf('.') > 0, 'Expected a . in origin %s', origin);\n  path.splice(1, domainOrHttpsSignal == 's' ? 3 : 2);\n  return origin + path.join('/') + removeAmpJsParamsFromSearch(url.search) + (url.hash || '');\n}\n/**\n * Returns the source origin of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string} The source origin of the URL.\n */\n\n\nfunction getSourceOrigin(url) {\n  return parseUrlDeprecated(getSourceUrl(url)).origin;\n}\n/**\n * Returns absolute URL resolved based on the relative URL and the base.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n */\n\n\nfunction resolveRelativeUrl(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n\n  if (typeof URL == 'function') {\n    return new URL(relativeUrlString, baseUrl.href).toString();\n  }\n\n  return resolveRelativeUrlFallback_(relativeUrlString, baseUrl);\n}\n/**\n * Fallback for URL resolver when URL class is not available.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n * @private Visible for testing.\n */\n\n\nfunction resolveRelativeUrlFallback_(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n\n  relativeUrlString = relativeUrlString.replace(/\\\\/g, '/');\n  var relativeUrl = parseUrlDeprecated(relativeUrlString); // Absolute URL.\n\n  if ((0, _string.startsWith)(relativeUrlString.toLowerCase(), relativeUrl.protocol)) {\n    return relativeUrl.href;\n  } // Protocol-relative URL.\n\n\n  if ((0, _string.startsWith)(relativeUrlString, '//')) {\n    return baseUrl.protocol + relativeUrlString;\n  } // Absolute path.\n\n\n  if ((0, _string.startsWith)(relativeUrlString, '/')) {\n    return baseUrl.origin + relativeUrlString;\n  } // Relative path.\n\n\n  return baseUrl.origin + baseUrl.pathname.replace(/\\/[^/]*$/, '/') + relativeUrlString;\n}\n/**\n * Add \"__amp_source_origin\" query parameter to the URL.\n * @param {!Window} win\n * @param {string} url\n * @return {string}\n */\n\n\nfunction getCorsUrl(win, url) {\n  checkCorsUrl(url);\n  var sourceOrigin = getSourceOrigin(win.location.href);\n  return addParamToUrl(url, SOURCE_ORIGIN_PARAM, sourceOrigin);\n}\n/**\n * Checks if the url has __amp_source_origin and throws if it does.\n * @param {string} url\n */\n\n\nfunction checkCorsUrl(url) {\n  var parsedUrl = parseUrlDeprecated(url);\n  var query = parseQueryString(parsedUrl.search);\n  (0, _log.userAssert)(!(SOURCE_ORIGIN_PARAM in query), 'Source origin is not allowed in %s', url);\n}\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * @param {string} component\n * @param {string=} opt_fallback\n * @return {string}\n */\n\n\nfunction tryDecodeUriComponent(component, opt_fallback) {\n  return (0, _urlTryDecodeUriComponent.tryDecodeUriComponent_)(component, opt_fallback);\n}\n\n},{\"./config\":10,\"./log\":21,\"./mode\":23,\"./string\":32,\"./types\":35,\"./url-parse-query-string\":36,\"./url-try-decode-uri-component\":37,\"./utils/lru-cache\":41,\"./utils/object\":42}],39:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.areEqualOrdered = areEqualOrdered;\nexports.remove = remove;\nexports.findIndex = findIndex;\nexports.fromIterator = fromIterator;\nexports.pushIfNotExist = pushIfNotExist;\nexports.lastItem = lastItem;\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Compares if two arrays contains exactly same elements of same number\n * of same order. Note that it does NOT handle NaN case as expected.\n *\n * @param {!Array<T>} arr1\n * @param {!Array<T>} arr2\n * @return {boolean}\n * @template T\n */\nfunction areEqualOrdered(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n\n  for (var i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * Removes elements that shouldRemove returns true for from the array.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} shouldRemove\n * @return {!Array<T>}\n * @template T\n */\n\n\nfunction remove(array, shouldRemove) {\n  var removed = [];\n  var index = 0;\n\n  for (var i = 0; i < array.length; i++) {\n    var item = array[i];\n\n    if (shouldRemove(item, i, array)) {\n      removed.push(item);\n    } else {\n      if (index < i) {\n        array[index] = item;\n      }\n\n      index++;\n    }\n  }\n\n  if (index < array.length) {\n    array.length = index;\n  }\n\n  return removed;\n}\n/**\n * Returns the index of the first element matching the predicate.\n * Like Array#findIndex.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} predicate\n * @return {number}\n * @template T\n */\n\n\nfunction findIndex(array, predicate) {\n  for (var i = 0; i < array.length; i++) {\n    if (predicate(array[i], i, array)) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n/**\n * Converts the given iterator to an array.\n *\n * @param {!Iterator<T>} iterator\n * @return {Array<T>}\n * @template T\n */\n\n\nfunction fromIterator(iterator) {\n  var array = [];\n\n  for (var e = iterator.next(); !e.done; e = iterator.next()) {\n    array.push(e.value);\n  }\n\n  return array;\n}\n/**\n * Adds item to array if it is not already present.\n *\n * @param {Array<T>} array\n * @param {T} item\n * @template T\n */\n\n\nfunction pushIfNotExist(array, item) {\n  if (array.indexOf(item) < 0) {\n    array.push(item);\n  }\n}\n/**\n * Returns the last item in an array.\n *\n * @param {Array<T>} array\n * @template T\n * @return {?T}\n */\n\n\nfunction lastItem(array) {\n  return array[array.length - 1];\n}\n\n},{}],40:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.once = once;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// TODO(rsimha, #15334): Enable this rule.\n\n/* eslint jsdoc/check-types: 0 */\n\n/**\n * Creates a function that is evaluated only once and returns the cached result\n * subsequently.\n *\n * Please note that `once` only takes the function definition into account,\n * so it will return the same cached value even when the arguments are\n * different.\n *\n * @param {function(...):T} fn\n * @return {function(...):T}\n * @template T\n */\nfunction once(fn) {\n  var evaluated = false;\n  var retValue = null;\n  var callback = fn;\n  return function () {\n    if (!evaluated) {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      retValue = callback.apply(self, args);\n      evaluated = true;\n      callback = null; // GC\n    }\n\n    return retValue;\n  };\n}\n\n},{}],41:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.LruCache = void 0;\n\nvar _log = require(\"../log\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const {string} */\nvar TAG = 'lru-cache';\n/**\n * @template T\n */\n\nvar LruCache =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {number} capacity\n   */\n  function LruCache(capacity) {\n    /** @private @const {number} */\n    this.capacity_ = capacity;\n    /** @private {number} */\n\n    this.size_ = 0;\n    /**\n     * An incrementing counter to define the last access.\n     * @private {number}\n     */\n\n    this.access_ = 0;\n    /** @private {!Object<(number|string), {payload: T, access: number}>} */\n\n    this.cache_ = Object.create(null);\n  }\n  /**\n   * Returns whether key is cached.\n   *\n   * @param {number|string} key\n   * @return {boolean}\n   */\n\n\n  var _proto = LruCache.prototype;\n\n  _proto.has = function has(key) {\n    return !!this.cache_[key];\n  }\n  /**\n   * @param {number|string} key\n   * @return {T} The cached payload.\n   */\n  ;\n\n  _proto.get = function get(key) {\n    var cacheable = this.cache_[key];\n\n    if (cacheable) {\n      cacheable.access = ++this.access_;\n      return cacheable.payload;\n    }\n\n    return undefined;\n  }\n  /**\n   * @param {number|string} key\n   * @param {T} payload The payload to cache.\n   */\n  ;\n\n  _proto.put = function put(key, payload) {\n    if (!this.has(key)) {\n      this.size_++;\n    }\n\n    this.cache_[key] = {\n      payload: payload,\n      access: this.access_\n    };\n    this.evict_();\n  }\n  /**\n   * Evicts the oldest cache entry, if we've exceeded capacity.\n   */\n  ;\n\n  _proto.evict_ = function evict_() {\n    if (this.size_ <= this.capacity_) {\n      return;\n    }\n\n    (0, _log.dev)().warn(TAG, 'Trimming LRU cache');\n    var cache = this.cache_;\n    var oldest = this.access_ + 1;\n    var oldestKey;\n\n    for (var key in cache) {\n      var access = cache[key].access;\n\n      if (access < oldest) {\n        oldest = access;\n        oldestKey = key;\n      }\n    }\n\n    if (oldestKey !== undefined) {\n      delete cache[oldestKey];\n      this.size_--;\n    }\n  };\n\n  return LruCache;\n}();\n\nexports.LruCache = LruCache;\n\n},{\"../log\":21}],42:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.map = map;\nexports.dict = dict;\nexports.hasOwn = hasOwn;\nexports.ownProperty = ownProperty;\nexports.deepMerge = deepMerge;\nexports.omit = omit;\n\nvar _types = require(\"../types\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nvar hasOwn_ = Object.prototype.hasOwnProperty;\n/**\n * Returns a map-like object.\n * If opt_initial is provided, copies its own properties into the\n * newly created object.\n * @param {T=} opt_initial This should typically be an object literal.\n * @return {T}\n * @template T\n */\n\nfunction map(opt_initial) {\n  var obj = Object.create(null);\n\n  if (opt_initial) {\n    Object.assign(obj, opt_initial);\n  }\n\n  return obj;\n}\n/**\n * Return an empty JsonObject or makes the passed in object literal\n * an JsonObject.\n * The JsonObject type is just a simple object that is at-dict.\n * See\n * https://github.com/google/closure-compiler/wiki/@struct-and-@dict-Annotations\n * for what a dict is type-wise.\n * The linter enforces that the argument is, in fact, at-dict like.\n * @param {!Object=} opt_initial\n * @return {!JsonObject}\n */\n\n\nfunction dict(opt_initial) {\n  // We do not copy. The linter enforces that the passed in object is a literal\n  // and thus the caller cannot have a reference to it.\n  return (\n    /** @type {!JsonObject} */\n    opt_initial || {}\n  );\n}\n/**\n * Checks if the given key is a property in the map.\n *\n * @param {T}  obj a map like property.\n * @param {string}  key\n * @return {boolean}\n * @template T\n */\n\n\nfunction hasOwn(obj, key) {\n  return hasOwn_.call(obj, key);\n}\n/**\n * Returns obj[key] iff key is obj's own property (is not inherited).\n * Otherwise, returns undefined.\n *\n * @param {Object} obj\n * @param {string} key\n * @return {*}\n */\n\n\nfunction ownProperty(obj, key) {\n  if (hasOwn(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n/**\n * Deep merges source into target.\n *\n * @param {!Object} target\n * @param {!Object} source\n * @param {number} depth The maximum merge depth. If exceeded, Object.assign\n *                       will be used instead.\n * @return {!Object}\n * @throws {Error} If source contains a circular reference.\n * Note: Only nested objects are deep-merged, primitives and arrays are not.\n */\n\n\nfunction deepMerge(target, source, depth) {\n  if (depth === void 0) {\n    depth = 10;\n  }\n\n  // Keep track of seen objects to detect recursive references.\n  var seen = [];\n  /** @type {!Array<{t: !Object, s: !Object, d: number}>} */\n\n  var queue = [];\n  queue.push({\n    t: target,\n    s: source,\n    d: 0\n  }); // BFS to ensure objects don't have recursive references at shallower depths.\n\n  var _loop = function _loop() {\n    var _queue$shift = queue.shift(),\n        t = _queue$shift.t,\n        s = _queue$shift.s,\n        d = _queue$shift.d;\n\n    if (seen.includes(s)) {\n      throw new Error('Source object has a circular reference.');\n    }\n\n    seen.push(s);\n\n    if (t === s) {\n      return \"continue\";\n    }\n\n    if (d > depth) {\n      Object.assign(t, s);\n      return \"continue\";\n    }\n\n    Object.keys(s).forEach(function (key) {\n      var newValue = s[key]; // Perform a deep merge IFF both target and source have the same key\n      // whose corresponding values are objects.\n\n      if (hasOwn(t, key)) {\n        var oldValue = t[key];\n\n        if ((0, _types.isObject)(newValue) && (0, _types.isObject)(oldValue)) {\n          queue.push({\n            t: oldValue,\n            s: newValue,\n            d: d + 1\n          });\n          return;\n        }\n      }\n\n      t[key] = newValue;\n    });\n  };\n\n  while (queue.length > 0) {\n    var _ret = _loop();\n\n    if (_ret === \"continue\") continue;\n  }\n\n  return target;\n}\n/**\n * @param {!Object} o An object to remove properties from\n * @param {!Array<string>} props A list of properties to remove from the Object\n * @return {!Object} An object with the given properties removed\n */\n\n\nfunction omit(o, props) {\n  return Object.keys(o).reduce(function (acc, key) {\n    if (!props.includes(key)) {\n      acc[key] = o[key];\n    }\n\n    return acc;\n  }, {});\n}\n\n},{\"../types\":35}],43:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.tryResolve = tryResolve;\nexports.some = some;\nexports.LastAddedResolver = exports.Deferred = void 0;\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a Deferred struct, which holds a pending promise and its associated\n * resolve and reject functions.\n *\n * This is preferred instead of creating a Promise instance to extract the\n * resolve/reject functions yourself:\n *\n * ```\n * // Avoid doing\n * let resolve;\n * const promise = new Promise(res => {\n *   resolve = res;\n * });\n *\n * // Good\n * const deferred = new Deferred();\n * const { promise, resolve } = deferred;\n * ```\n *\n * @template T\n */\nvar Deferred =\n/**\n * Creates an instance of Deferred.\n */\nfunction Deferred() {\n  var resolve, reject;\n  /**\n   * @const {!Promise<T>}\n   */\n\n  this.promise = new\n  /*OK*/\n  Promise(function (res, rej) {\n    resolve = res;\n    reject = rej;\n  });\n  /**\n   * @const {function(T=)}\n   */\n\n  this.resolve = resolve;\n  /**\n   * @const {function(*=)}\n   */\n\n  this.reject = reject;\n};\n/**\n * Creates a promise resolved to the return value of fn.\n * If fn sync throws, it will cause the promise to reject.\n *\n * @param {function():T} fn\n * @return {!Promise<T>}\n * @template T\n */\n\n\nexports.Deferred = Deferred;\n\nfunction tryResolve(fn) {\n  return new Promise(function (resolve) {\n    resolve(fn());\n  });\n}\n/**\n * Returns a promise which resolves if a threshold amount of the given promises\n * resolve, and rejects otherwise.\n * @param {!Array<!Promise>} promises The array of promises to test.\n * @param {number} count The number of promises that must resolve for the\n *     returned promise to resolve.\n * @return {!Promise} A promise that resolves if any of the given promises\n *     resolve, and which rejects otherwise.\n */\n\n\nfunction some(promises, count) {\n  if (count === void 0) {\n    count = 1;\n  }\n\n  return new Promise(function (resolve, reject) {\n    count = Math.max(count, 0);\n    var extra = promises.length - count;\n\n    if (extra < 0) {\n      reject(new Error('not enough promises to resolve'));\n    }\n\n    if (promises.length == 0) {\n      resolve([]);\n    }\n\n    var values = [];\n    var reasons = [];\n\n    var onFulfilled = function onFulfilled(value) {\n      if (values.length < count) {\n        values.push(value);\n      }\n\n      if (values.length == count) {\n        resolve(values);\n      }\n    };\n\n    var onRejected = function onRejected(reason) {\n      if (reasons.length <= extra) {\n        reasons.push(reason);\n      }\n\n      if (reasons.length > extra) {\n        reject(reasons);\n      }\n    };\n\n    for (var i = 0; i < promises.length; i++) {\n      Promise.resolve(promises[i]).then(onFulfilled, onRejected);\n    }\n  });\n}\n/**\n * Resolves with the result of the last promise added.\n * @implements {IThenable}\n */\n\n\nvar LastAddedResolver =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!Array<!Promise>=} opt_promises\n   */\n  function LastAddedResolver(opt_promises) {\n    var resolve_, reject_;\n    /** @private @const {!Promise} */\n\n    this.promise_ = new Promise(function (resolve, reject) {\n      resolve_ = resolve;\n      reject_ = reject;\n    });\n    /** @private */\n\n    this.resolve_ = resolve_;\n    /** @private */\n\n    this.reject_ = reject_;\n    /** @private */\n\n    this.count_ = 0;\n\n    if (opt_promises) {\n      for (var i = 0; i < opt_promises.length; i++) {\n        this.add(opt_promises[i]);\n      }\n    }\n  }\n  /**\n   * Add a promise to possibly be resolved.\n   * @param {!Promise} promise\n   * @return {!Promise}\n   */\n\n\n  var _proto = LastAddedResolver.prototype;\n\n  _proto.add = function add(promise) {\n    var _this = this;\n\n    var countAtAdd = ++this.count_;\n    Promise.resolve(promise).then(function (result) {\n      if (_this.count_ === countAtAdd) {\n        _this.resolve_(result);\n      }\n    }, function (error) {\n      // Don't follow behavior of Promise.all and Promise.race error so that\n      // this will only reject when most recently added promise fails.\n      if (_this.count_ === countAtAdd) {\n        _this.reject_(error);\n      }\n    });\n    return this.promise_;\n  }\n  /** @override */\n  ;\n\n  _proto.then = function then(opt_resolve, opt_reject) {\n    return this.promise_.then(opt_resolve, opt_reject);\n  };\n\n  return LastAddedResolver;\n}();\n\nexports.LastAddedResolver = LastAddedResolver;\n\n},{}],44:[function(require,module,exports){\n\"use strict\";\n\nvar _arrayIncludes = require(\"../polyfills/array-includes\");\n\nvar _mathSign = require(\"../polyfills/math-sign\");\n\nvar _objectAssign = require(\"../polyfills/object-assign\");\n\nvar _objectValues = require(\"../polyfills/object-values\");\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Directly imported into web-worker.js entry point so polyfills\n *     can be used in top-level scope in module dependencies.\n */\n(0, _arrayIncludes.install)(self);\n(0, _objectAssign.install)(self);\n(0, _objectValues.install)(self);\n(0, _mathSign.install)(self);\n\n},{\"../polyfills/array-includes\":24,\"../polyfills/math-sign\":25,\"../polyfills/object-assign\":26,\"../polyfills/object-values\":27}],45:[function(require,module,exports){\n\"use strict\";\n\nrequire(\"./web-worker-polyfills\");\n\nvar _bindEvaluator = require(\"../../extensions/amp-bind/0.1/bind-evaluator\");\n\nvar _log = require(\"../log\");\n\nvar _exponentialBackoff = require(\"../exponential-backoff\");\n\nvar _error = require(\"../error\");\n\nvar _config = require(\"../config\");\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Web worker entry point. Currently only used by a single\n *   extension (amp-bind), so dependencies are directly imported.\n *   Eventually, each extension that uses this worker will bundle its own\n *   \"lib\" JS files and loaded at runtime via `importScripts()`.\n */\n(0, _log.initLogConstructor)();\n(0, _log.setReportError)(_error.reportError);\n/** @const {string} */\n\nvar TAG = 'web-worker';\n/**\n * Exponential backoff for error reports to avoid any given\n * worker from generating a very large number of errors.\n * @const {function(function()): number}\n */\n\nvar backoff_ = (0, _exponentialBackoff.exponentialBackoff)(1.5);\n/**\n * @param {!Event} event\n */\n\nfunction errorHandler_(event) {\n  backoff_(function () {\n    return report_(event.reason);\n  });\n}\n/**\n * Element `i` contains the evaluator for scope `i`.\n * @private {!Array<!BindEvaluator>}\n */\n\n\nvar evaluators_ = []; // Install error reporting on the `self` global. Error requests contain a\n// URL param \"ww=1\" that identifies the originating worker.\n\nself.addEventListener('unhandledrejection', errorHandler_);\nself.addEventListener('error', errorHandler_);\nself.addEventListener('message', function (event) {\n  var _event$data =\n  /** @type {ToWorkerMessageDef} */\n  event.data,\n      method = _event$data.method,\n      args = _event$data.args,\n      id = _event$data.id,\n      scope = _event$data.scope;\n  var returnValue; // TODO(choumx): Remove this fallback when we confirm there are no errors.\n\n  if (method !== 'bind.init' && !evaluators_[scope]) {\n    (0, _log.dev)().error(TAG, 'Missing evaluator for scope: %s', scope);\n    evaluators_[scope] = new _bindEvaluator.BindEvaluator(\n    /* allowUrlProperties */\n    true);\n  }\n\n  var evaluator = evaluators_[scope];\n\n  switch (method) {\n    case 'bind.init':\n      if (evaluator) {\n        (0, _log.dev)().warn(TAG, 'Overwriting existing evaluator for scope:', scope);\n      }\n\n      var allowUrlProperties = args[0];\n      evaluators_[scope] = new _bindEvaluator.BindEvaluator(allowUrlProperties);\n      returnValue = true;\n      break;\n\n    case 'bind.addBindings':\n      returnValue = evaluator.addBindings.apply(evaluator, args);\n      break;\n\n    case 'bind.removeBindingsWithExpressionStrings':\n      var removeBindings = evaluator.removeBindingsWithExpressionStrings;\n      returnValue = removeBindings.apply(evaluator, args);\n      break;\n\n    case 'bind.addMacros':\n      returnValue = evaluator.addMacros.apply(evaluator, args);\n      break;\n\n    case 'bind.evaluateBindings':\n      returnValue = evaluator.evaluateBindings.apply(evaluator, args);\n      break;\n\n    case 'bind.evaluateExpression':\n      returnValue = evaluator.evaluateExpression.apply(evaluator, args);\n      break;\n\n    default:\n      (0, _log.dev)().error(TAG, 'Unrecognized method: %s', method);\n  }\n\n  var message =\n  /** @type {FromWorkerMessageDef} */\n  {\n    method: method,\n    returnValue: returnValue,\n    id: id\n  }; // `message` may only contain values or objects handled by the\n  // structured clone algorithm.\n  // https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm\n\n  self.\n  /*OK*/\n  postMessage(message);\n});\n/**\n * Report error to AMP's error reporting frontend.\n * @param {*} e\n */\n\nfunction report_(e) {\n  // Don't report local dev errors.\n  if (_config.urls.localhostRegex.test(self.location.origin)) {\n    return;\n  }\n\n  if (!(e instanceof Error)) {\n    e = new Error(e);\n  }\n\n  var config = self.AMP_CONFIG || {};\n  var url = _config.urls.errorReporting + '?' + 'ww=1' + // Tags request as coming from a worker.\n  '&v=' + encodeURIComponent(config.v) + '&m=' + encodeURIComponent(e.message) + '&ca=' + (config.canary ? 1 : 0) + '&s=' + encodeURIComponent(e.stack || '');\n  fetch(url,\n  /** @type {!RequestInit} */\n  {\n    // We don't care about the response.\n    mode: 'no-cors'\n  }).catch(function (reason) {\n    console.\n    /*OK*/\n    error(reason);\n  });\n}\n\n},{\"../../extensions/amp-bind/0.1/bind-evaluator\":2,\"../config\":10,\"../error\":14,\"../exponential-backoff\":18,\"../log\":21,\"./web-worker-polyfills\":44}],46:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.cssEscape = cssEscape;\n\n/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n\n/**\n * This regex consists of 4 matching capture groups and one (non-matching) fallback:\n *\n * - (\\0), catch the null terminator character so it may be replaced by UTF\n *   Replacement Char\n * - ^(-)$, catch a solitary dash char, so that it may be backslash escaped.\n *   This is a separate capture group so that the legal-chars (group 4) doesn't\n *   capture it first, since that group doesn't need to escape its dash.\n * - ([\\x01-\\x1f\\x7f]|^-?[0-9]), catch a UTF control char, or any leading\n *   number (with an optional leading dash). The control or the number (but not\n *   the leading dash) must be hex-escaped,.\n * - ([\\x80-\\uffff0-9a-zA-Z_-]+), catch legal-chars, with the exception of a\n *   solitary dash, which will already have matched in group 1.\n * - [^], finally, a catch-all that allows us to backslash escape the char.\n *\n * Together, this matches everything necessary for CSS.escape.\n */\nvar regex = /(\\0)|^(-)$|([\\x01-\\x1f\\x7f]|^-?[0-9])|([\\x80-\\uffff0-9a-zA-Z_-]+)|[^]/g;\n\nfunction escaper(match, nil, dash, hexEscape, chars) {\n  // Chars is the legal-chars (group 4) capture\n  if (chars) {\n    return chars;\n  } // Nil is the null terminator (group 1) capture\n\n\n  if (nil) {\n    return \"\\uFFFD\";\n  } // Both UTF control chars, and leading numbers (with optional leading dash)\n  // (group 3) must be backslash escaped with a trailing space.  Funnily, the\n  // leading dash must not be escaped, but the number. :shrug:\n\n\n  if (hexEscape) {\n    return match.slice(0, -1) + '\\\\' + match.slice(-1).charCodeAt(0).toString(16) + ' ';\n  } // Finally, the solitary dash and the catch-all chars require backslash\n  // escaping.\n\n\n  return '\\\\' + match;\n}\n/**\n * https://drafts.csswg.org/cssom/#serialize-an-identifier\n * @param {string} value\n * @return {string}\n */\n\n\nfunction cssEscape(value) {\n  return String(value).replace(regex, escaper);\n}\n\n},{}]},{},[45])\n\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/** @fileoverview @suppress {checkTypes, suspiciousCode, uselessCode} */\n\nimport {AstNode, AstNodeType} from '../../extensions/amp-bind/0.1/bind-expr-defines';\nimport {tryParseJson} from '../../src/json';\n\n/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,7],$V1=[1,10],$V2=[1,11],$V3=[1,12],$V4=[1,13],$V5=[1,23],$V6=[1,17],$V7=[1,18],$V8=[1,19],$V9=[1,20],$Va=[1,21],$Vb=[1,22],$Vc=[1,26],$Vd=[1,25],$Ve=[1,27],$Vf=[1,28],$Vg=[1,29],$Vh=[1,30],$Vi=[1,31],$Vj=[1,32],$Vk=[1,33],$Vl=[1,34],$Vm=[1,35],$Vn=[1,36],$Vo=[1,37],$Vp=[1,38],$Vq=[1,39],$Vr=[1,41],$Vs=[5,10,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,33,38,39,49],$Vt=[2,40],$Vu=[1,47],$Vv=[1,52],$Vw=[1,54],$Vx=[5,10,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,33,39,49],$Vy=[1,75],$Vz=[33,49],$VA=[10,33,39],$VB=[5,10,14,15,19,20,21,22,23,24,25,26,27,28,33,39,49],$VC=[5,10,19,20,21,22,23,24,25,26,27,28,33,39,49],$VD=[5,10,19,20,25,26,27,28,33,39,49],$VE=[10,33];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"result\":3,\"expr\":4,\"EOF\":5,\"operation\":6,\"invocation\":7,\"member_access\":8,\"(\":9,\")\":10,\"variable\":11,\"literal\":12,\"!\":13,\"-\":14,\"+\":15,\"*\":16,\"/\":17,\"%\":18,\"&&\":19,\"||\":20,\"<=\":21,\"<\":22,\">=\":23,\">\":24,\"!=\":25,\"==\":26,\"?\":27,\":\":28,\"NAME\":29,\"args\":30,\".\":31,\"arrow_function\":32,\",\":33,\"=>\":34,\"params\":35,\"array\":36,\"member\":37,\"[\":38,\"]\":39,\"primitive\":40,\"object_literal\":41,\"array_literal\":42,\"STRING\":43,\"NUMBER\":44,\"TRUE\":45,\"FALSE\":46,\"NULL\":47,\"{\":48,\"}\":49,\"object\":50,\"key_value\":51,\"key\":52,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",9:\"(\",10:\")\",13:\"!\",14:\"-\",15:\"+\",16:\"*\",17:\"/\",18:\"%\",19:\"&&\",20:\"||\",21:\"<=\",22:\"<\",23:\">=\",24:\">\",25:\"!=\",26:\"==\",27:\"?\",28:\":\",29:\"NAME\",31:\".\",33:\",\",34:\"=>\",38:\"[\",39:\"]\",43:\"STRING\",44:\"NUMBER\",45:\"TRUE\",46:\"FALSE\",47:\"NULL\",48:\"{\",49:\"}\"},\nproductions_: [0,[3,2],[3,1],[4,1],[4,1],[4,1],[4,3],[4,1],[4,1],[6,2],[6,2],[6,2],[6,3],[6,3],[6,3],[6,3],[6,3],[6,3],[6,3],[6,3],[6,3],[6,3],[6,3],[6,3],[6,3],[6,5],[7,2],[7,4],[7,6],[7,8],[32,4],[32,3],[32,5],[35,3],[35,3],[30,2],[30,3],[8,2],[37,2],[37,3],[11,1],[12,1],[12,1],[12,1],[40,1],[40,1],[40,1],[40,1],[40,1],[42,2],[42,3],[42,4],[36,1],[36,3],[41,2],[41,3],[41,4],[50,1],[50,3],[51,3],[52,1],[52,1],[52,3]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\nreturn $$[$0-1];\nbreak;\ncase 2:\nreturn '';\nbreak;\ncase 3: case 4: case 5: case 7: case 8:\nthis.$ = $$[$0];\nbreak;\ncase 6:\nthis.$ = $$[$0-1];\nbreak;\ncase 9:\n\n        this.$ = new AstNode(AstNodeType.NOT, [$$[$0]]);\n      \nbreak;\ncase 10:\n\n        this.$ = new AstNode(AstNodeType.UNARY_MINUS, [$$[$0]]);\n      \nbreak;\ncase 11:\n\n        this.$ = new AstNode(AstNodeType.UNARY_PLUS, [$$[$0]]);\n      \nbreak;\ncase 12:\n\n        this.$ = new AstNode(AstNodeType.PLUS, [$$[$0-2], $$[$0]]);\n      \nbreak;\ncase 13:\n\n        this.$ = new AstNode(AstNodeType.MINUS, [$$[$0-2], $$[$0]]);\n      \nbreak;\ncase 14:\n\n        this.$ = new AstNode(AstNodeType.MULTIPLY, [$$[$0-2], $$[$0]]);\n      \nbreak;\ncase 15:\n\n        this.$ = new AstNode(AstNodeType.DIVIDE, [$$[$0-2], $$[$0]]);\n      \nbreak;\ncase 16:\n\n        this.$ = new AstNode(AstNodeType.MODULO, [$$[$0-2], $$[$0]]);\n      \nbreak;\ncase 17:\n\n        this.$ = new AstNode(AstNodeType.LOGICAL_AND, [$$[$0-2], $$[$0]]);\n      \nbreak;\ncase 18:\n\n        this.$ = new AstNode(AstNodeType.LOGICAL_OR, [$$[$0-2], $$[$0]]);\n      \nbreak;\ncase 19:\n\n        this.$ = new AstNode(AstNodeType.LESS_OR_EQUAL, [$$[$0-2], $$[$0]]);\n      \nbreak;\ncase 20:\n\n        this.$ = new AstNode(AstNodeType.LESS, [$$[$0-2], $$[$0]]);\n      \nbreak;\ncase 21:\n\n        this.$ = new AstNode(AstNodeType.GREATER_OR_EQUAL, [$$[$0-2], $$[$0]]);\n      \nbreak;\ncase 22:\n\n        this.$ = new AstNode(AstNodeType.GREATER, [$$[$0-2], $$[$0]]);\n      \nbreak;\ncase 23:\n\n        this.$ = new AstNode(AstNodeType.NOT_EQUAL, [$$[$0-2], $$[$0]]);\n      \nbreak;\ncase 24:\n\n        this.$ = new AstNode(AstNodeType.EQUAL, [$$[$0-2], $$[$0]]);\n      \nbreak;\ncase 25:\n\n        this.$ = new AstNode(AstNodeType.TERNARY, [$$[$0-4], $$[$0-2], $$[$0]]);\n      \nbreak;\ncase 26:\n\n        this.$ = new AstNode(AstNodeType.INVOCATION, [undefined, $$[$0]], $$[$0-1]);\n      \nbreak;\ncase 27:\n\n        this.$ = new AstNode(AstNodeType.INVOCATION, [$$[$0-3], $$[$0]], $$[$0-1]);\n      \nbreak;\ncase 28:\n\n        {\n          const array = new AstNode(AstNodeType.ARRAY, [$$[$0-1]]);\n          this.$ = new AstNode(AstNodeType.INVOCATION, [$$[$0-5], array], $$[$0-3]);\n        }\n      \nbreak;\ncase 29:\n\n        {\n          const array = new AstNode(AstNodeType.ARRAY, [$$[$0-3], $$[$0-1]]);\n          this.$ = new AstNode(AstNodeType.INVOCATION, [$$[$0-7], array], $$[$0-5]);\n        }\n      \nbreak;\ncase 30:\n\n        this.$ = new AstNode(AstNodeType.ARROW_FUNCTION, [undefined, $$[$0]]);\n      \nbreak;\ncase 31:\n\n        const param = new AstNode(AstNodeType.LITERAL, null, [$$[$0-2]]);\n        this.$ = new AstNode(AstNodeType.ARROW_FUNCTION, [param, $$[$0]]);\n      \nbreak;\ncase 32:\n\n        this.$ = new AstNode(AstNodeType.ARROW_FUNCTION, [$$[$0-3], $$[$0]]);\n      \nbreak;\ncase 33:\n\n        this.$ = new AstNode(AstNodeType.LITERAL, null, [$$[$0-2], $$[$0]]);\n      \nbreak;\ncase 34:\n\n        this.$ = $$[$0-2];\n        this.$.value.push($$[$0]);\n      \nbreak;\ncase 35:\n\n        this.$ = new AstNode(AstNodeType.ARGS, []);\n      \nbreak;\ncase 36:\n\n        this.$ = new AstNode(AstNodeType.ARGS, [$$[$0-1]]);\n      \nbreak;\ncase 37:\n\n        this.$ = new AstNode(AstNodeType.MEMBER_ACCESS, [$$[$0-1], $$[$0]]);\n      \nbreak;\ncase 38:\n\n        this.$ = new AstNode(AstNodeType.MEMBER, null, $$[$0]);\n      \nbreak;\ncase 39:\n\n        this.$ = new AstNode(AstNodeType.MEMBER, [$$[$0-1]]);\n      \nbreak;\ncase 40:\n\n        this.$ = new AstNode(AstNodeType.VARIABLE, null, $$[$0]);\n      \nbreak;\ncase 41: case 42: case 43: case 61:\n\n        this.$ = $$[$0];\n      \nbreak;\ncase 44:\n\n        // Use JSON.parse() to process special chars e.g. '\\n'.\n        // JSON doesn't recognize single-quotes, so use double-quote in\n        // leading/trailing chars and escape double-quote in the string.\n        const string = yytext.substr(1, yyleng - 2);\n        const parsed = tryParseJson(`\"${string.replace(/\"/g, '\\\\\"')}\"`);\n        this.$ = new AstNode(AstNodeType.LITERAL, null, parsed || string);\n      \nbreak;\ncase 45:\n\n        this.$ = new AstNode(AstNodeType.LITERAL, null, Number(yytext));\n      \nbreak;\ncase 46:\n\n        this.$ = new AstNode(AstNodeType.LITERAL, null, true);\n      \nbreak;\ncase 47:\n\n        this.$ = new AstNode(AstNodeType.LITERAL, null, false);\n      \nbreak;\ncase 48:\n\n        this.$ = new AstNode(AstNodeType.LITERAL, null, null);\n      \nbreak;\ncase 49:\n\n        this.$ = new AstNode(AstNodeType.ARRAY_LITERAL, []);\n      \nbreak;\ncase 50:\n\n        this.$ = new AstNode(AstNodeType.ARRAY_LITERAL, [$$[$0-1]]);\n      \nbreak;\ncase 51:\n\n        this.$ = new AstNode(AstNodeType.ARRAY_LITERAL, [$$[$0-2]]);\n      \nbreak;\ncase 52:\n\n        this.$ = new AstNode(AstNodeType.ARRAY, [$$[$0]]);\n      \nbreak;\ncase 53: case 58:\n\n        this.$ = $$[$0-2];\n        this.$.args.push($$[$0]);\n      \nbreak;\ncase 54:\n\n        this.$ = new AstNode(AstNodeType.OBJECT_LITERAL, []);\n      \nbreak;\ncase 55:\n\n        this.$ = new AstNode(AstNodeType.OBJECT_LITERAL, [$$[$0-1]]);\n      \nbreak;\ncase 56:\n\n        this.$ = new AstNode(AstNodeType.OBJECT_LITERAL, [$$[$0-2]]);\n      \nbreak;\ncase 57:\n\n        this.$ = new AstNode(AstNodeType.OBJECT, [$$[$0]]);\n      \nbreak;\ncase 59:\n\n        this.$ = new AstNode(AstNodeType.KEY_VALUE, [$$[$0-2], $$[$0]]);\n      \nbreak;\ncase 60:\n\n        this.$ = new AstNode(AstNodeType.LITERAL, null, $$[$0]);\n      \nbreak;\ncase 62:\n\n        this.$ = $$[$0-1];\n      \nbreak;\n}\n},\ntable: [{3:1,4:2,5:[1,3],6:4,7:5,8:6,9:$V0,11:8,12:9,13:$V1,14:$V2,15:$V3,29:$V4,38:$V5,40:14,41:15,42:16,43:$V6,44:$V7,45:$V8,46:$V9,47:$Va,48:$Vb},{1:[3]},{5:[1,24],14:$Vc,15:$Vd,16:$Ve,17:$Vf,18:$Vg,19:$Vh,20:$Vi,21:$Vj,22:$Vk,23:$Vl,24:$Vm,25:$Vn,26:$Vo,27:$Vp,31:$Vq,37:40,38:$Vr},{1:[2,2]},o($Vs,[2,3]),o($Vs,[2,4]),o($Vs,[2,5]),{4:42,6:4,7:5,8:6,9:$V0,11:8,12:9,13:$V1,14:$V2,15:$V3,29:$V4,38:$V5,40:14,41:15,42:16,43:$V6,44:$V7,45:$V8,46:$V9,47:$Va,48:$Vb},o($Vs,[2,7]),o($Vs,[2,8]),{4:43,6:4,7:5,8:6,9:$V0,11:8,12:9,13:$V1,14:$V2,15:$V3,29:$V4,38:$V5,40:14,41:15,42:16,43:$V6,44:$V7,45:$V8,46:$V9,47:$Va,48:$Vb},{4:44,6:4,7:5,8:6,9:$V0,11:8,12:9,13:$V1,14:$V2,15:$V3,29:$V4,38:$V5,40:14,41:15,42:16,43:$V6,44:$V7,45:$V8,46:$V9,47:$Va,48:$Vb},{4:45,6:4,7:5,8:6,9:$V0,11:8,12:9,13:$V1,14:$V2,15:$V3,29:$V4,38:$V5,40:14,41:15,42:16,43:$V6,44:$V7,45:$V8,46:$V9,47:$Va,48:$Vb},o($Vs,$Vt,{30:46,9:$Vu}),o($Vs,[2,41]),o($Vs,[2,42]),o($Vs,[2,43]),o($Vs,[2,44]),o($Vs,[2,45]),o($Vs,[2,46]),o($Vs,[2,47]),o($Vs,[2,48]),{29:$Vv,38:$Vw,40:53,43:$V6,44:$V7,45:$V8,46:$V9,47:$Va,49:[1,48],50:49,51:50,52:51},{4:57,6:4,7:5,8:6,9:$V0,11:8,12:9,13:$V1,14:$V2,15:$V3,29:$V4,36:56,38:$V5,39:[1,55],40:14,41:15,42:16,43:$V6,44:$V7,45:$V8,46:$V9,47:$Va,48:$Vb},{1:[2,1]},{4:58,6:4,7:5,8:6,9:$V0,11:8,12:9,13:$V1,14:$V2,15:$V3,29:$V4,38:$V5,40:14,41:15,42:16,43:$V6,44:$V7,45:$V8,46:$V9,47:$Va,48:$Vb},{4:59,6:4,7:5,8:6,9:$V0,11:8,12:9,13:$V1,14:$V2,15:$V3,29:$V4,38:$V5,40:14,41:15,42:16,43:$V6,44:$V7,45:$V8,46:$V9,47:$Va,48:$Vb},{4:60,6:4,7:5,8:6,9:$V0,11:8,12:9,13:$V1,14:$V2,15:$V3,29:$V4,38:$V5,40:14,41:15,42:16,43:$V6,44:$V7,45:$V8,46:$V9,47:$Va,48:$Vb},{4:61,6:4,7:5,8:6,9:$V0,11:8,12:9,13:$V1,14:$V2,15:$V3,29:$V4,38:$V5,40:14,41:15,42:16,43:$V6,44:$V7,45:$V8,46:$V9,47:$Va,48:$Vb},{4:62,6:4,7:5,8:6,9:$V0,11:8,12:9,13:$V1,14:$V2,15:$V3,29:$V4,38:$V5,40:14,41:15,42:16,43:$V6,44:$V7,45:$V8,46:$V9,47:$Va,48:$Vb},{4:63,6:4,7:5,8:6,9:$V0,11:8,12:9,13:$V1,14:$V2,15:$V3,29:$V4,38:$V5,40:14,41:15,42:16,43:$V6,44:$V7,45:$V8,46:$V9,47:$Va,48:$Vb},{4:64,6:4,7:5,8:6,9:$V0,11:8,12:9,13:$V1,14:$V2,15:$V3,29:$V4,38:$V5,40:14,41:15,42:16,43:$V6,44:$V7,45:$V8,46:$V9,47:$Va,48:$Vb},{4:65,6:4,7:5,8:6,9:$V0,11:8,12:9,13:$V1,14:$V2,15:$V3,29:$V4,38:$V5,40:14,41:15,42:16,43:$V6,44:$V7,45:$V8,46:$V9,47:$Va,48:$Vb},{4:66,6:4,7:5,8:6,9:$V0,11:8,12:9,13:$V1,14:$V2,15:$V3,29:$V4,38:$V5,40:14,41:15,42:16,43:$V6,44:$V7,45:$V8,46:$V9,47:$Va,48:$Vb},{4:67,6:4,7:5,8:6,9:$V0,11:8,12:9,13:$V1,14:$V2,15:$V3,29:$V4,38:$V5,40:14,41:15,42:16,43:$V6,44:$V7,45:$V8,46:$V9,47:$Va,48:$Vb},{4:68,6:4,7:5,8:6,9:$V0,11:8,12:9,13:$V1,14:$V2,15:$V3,29:$V4,38:$V5,40:14,41:15,42:16,43:$V6,44:$V7,45:$V8,46:$V9,47:$Va,48:$Vb},{4:69,6:4,7:5,8:6,9:$V0,11:8,12:9,13:$V1,14:$V2,15:$V3,29:$V4,38:$V5,40:14,41:15,42:16,43:$V6,44:$V7,45:$V8,46:$V9,47:$Va,48:$Vb},{4:70,6:4,7:5,8:6,9:$V0,11:8,12:9,13:$V1,14:$V2,15:$V3,29:$V4,38:$V5,40:14,41:15,42:16,43:$V6,44:$V7,45:$V8,46:$V9,47:$Va,48:$Vb},{4:71,6:4,7:5,8:6,9:$V0,11:8,12:9,13:$V1,14:$V2,15:$V3,29:$V4,38:$V5,40:14,41:15,42:16,43:$V6,44:$V7,45:$V8,46:$V9,47:$Va,48:$Vb},{29:[1,72]},o($Vs,[2,37]),{4:73,6:4,7:5,8:6,9:$V0,11:8,12:9,13:$V1,14:$V2,15:$V3,29:$V4,38:$V5,40:14,41:15,42:16,43:$V6,44:$V7,45:$V8,46:$V9,47:$Va,48:$Vb},{10:[1,74],14:$Vc,15:$Vd,16:$Ve,17:$Vf,18:$Vg,19:$Vh,20:$Vi,21:$Vj,22:$Vk,23:$Vl,24:$Vm,25:$Vn,26:$Vo,27:$Vp,31:$Vq,37:40,38:$Vr},o($Vx,[2,9],{37:40,31:$Vq,38:$Vr}),o($Vx,[2,10],{37:40,31:$Vq,38:$Vr}),o($Vx,[2,11],{37:40,31:$Vq,38:$Vr}),o($Vs,[2,26]),{4:57,6:4,7:5,8:6,9:$V0,10:$Vy,11:8,12:9,13:$V1,14:$V2,15:$V3,29:$V4,36:76,38:$V5,40:14,41:15,42:16,43:$V6,44:$V7,45:$V8,46:$V9,47:$Va,48:$Vb},o($Vs,[2,54]),{33:[1,78],49:[1,77]},o($Vz,[2,57]),{28:[1,79]},{28:[2,60]},{28:[2,61]},{4:80,6:4,7:5,8:6,9:$V0,11:8,12:9,13:$V1,14:$V2,15:$V3,29:$V4,38:$V5,40:14,41:15,42:16,43:$V6,44:$V7,45:$V8,46:$V9,47:$Va,48:$Vb},o($Vs,[2,49]),{33:[1,82],39:[1,81]},o($VA,[2,52],{37:40,14:$Vc,15:$Vd,16:$Ve,17:$Vf,18:$Vg,19:$Vh,20:$Vi,21:$Vj,22:$Vk,23:$Vl,24:$Vm,25:$Vn,26:$Vo,27:$Vp,31:$Vq,38:$Vr}),o($VB,[2,12],{37:40,16:$Ve,17:$Vf,18:$Vg,31:$Vq,38:$Vr}),o($VB,[2,13],{37:40,16:$Ve,17:$Vf,18:$Vg,31:$Vq,38:$Vr}),o($Vx,[2,14],{37:40,31:$Vq,38:$Vr}),o($Vx,[2,15],{37:40,31:$Vq,38:$Vr}),o($Vx,[2,16],{37:40,31:$Vq,38:$Vr}),o([5,10,19,20,27,28,33,39,49],[2,17],{37:40,14:$Vc,15:$Vd,16:$Ve,17:$Vf,18:$Vg,21:$Vj,22:$Vk,23:$Vl,24:$Vm,25:$Vn,26:$Vo,31:$Vq,38:$Vr}),o([5,10,20,27,28,33,39,49],[2,18],{37:40,14:$Vc,15:$Vd,16:$Ve,17:$Vf,18:$Vg,19:$Vh,21:$Vj,22:$Vk,23:$Vl,24:$Vm,25:$Vn,26:$Vo,31:$Vq,38:$Vr}),o($VC,[2,19],{37:40,14:$Vc,15:$Vd,16:$Ve,17:$Vf,18:$Vg,31:$Vq,38:$Vr}),o($VC,[2,20],{37:40,14:$Vc,15:$Vd,16:$Ve,17:$Vf,18:$Vg,31:$Vq,38:$Vr}),o($VC,[2,21],{37:40,14:$Vc,15:$Vd,16:$Ve,17:$Vf,18:$Vg,31:$Vq,38:$Vr}),o($VC,[2,22],{37:40,14:$Vc,15:$Vd,16:$Ve,17:$Vf,18:$Vg,31:$Vq,38:$Vr}),o($VD,[2,23],{37:40,14:$Vc,15:$Vd,16:$Ve,17:$Vf,18:$Vg,21:$Vj,22:$Vk,23:$Vl,24:$Vm,31:$Vq,38:$Vr}),o($VD,[2,24],{37:40,14:$Vc,15:$Vd,16:$Ve,17:$Vf,18:$Vg,21:$Vj,22:$Vk,23:$Vl,24:$Vm,31:$Vq,38:$Vr}),{14:$Vc,15:$Vd,16:$Ve,17:$Vf,18:$Vg,19:$Vh,20:$Vi,21:$Vj,22:$Vk,23:$Vl,24:$Vm,25:$Vn,26:$Vo,27:$Vp,28:[1,83],31:$Vq,37:40,38:$Vr},o($Vs,[2,38],{30:84,9:[1,85]}),{14:$Vc,15:$Vd,16:$Ve,17:$Vf,18:$Vg,19:$Vh,20:$Vi,21:$Vj,22:$Vk,23:$Vl,24:$Vm,25:$Vn,26:$Vo,27:$Vp,31:$Vq,37:40,38:$Vr,39:[1,86]},o($Vs,[2,6]),o($Vs,[2,35]),{10:[1,87],33:[1,88]},o($Vs,[2,55]),{29:$Vv,38:$Vw,40:53,43:$V6,44:$V7,45:$V8,46:$V9,47:$Va,49:[1,89],51:90,52:51},{4:91,6:4,7:5,8:6,9:$V0,11:8,12:9,13:$V1,14:$V2,15:$V3,29:$V4,38:$V5,40:14,41:15,42:16,43:$V6,44:$V7,45:$V8,46:$V9,47:$Va,48:$Vb},{14:$Vc,15:$Vd,16:$Ve,17:$Vf,18:$Vg,19:$Vh,20:$Vi,21:$Vj,22:$Vk,23:$Vl,24:$Vm,25:$Vn,26:$Vo,27:$Vp,31:$Vq,37:40,38:$Vr,39:[1,92]},o($Vs,[2,50]),{4:94,6:4,7:5,8:6,9:$V0,11:8,12:9,13:$V1,14:$V2,15:$V3,29:$V4,38:$V5,39:[1,93],40:14,41:15,42:16,43:$V6,44:$V7,45:$V8,46:$V9,47:$Va,48:$Vb},{4:95,6:4,7:5,8:6,9:$V0,11:8,12:9,13:$V1,14:$V2,15:$V3,29:$V4,38:$V5,40:14,41:15,42:16,43:$V6,44:$V7,45:$V8,46:$V9,47:$Va,48:$Vb},o($Vs,[2,27]),{4:57,6:4,7:5,8:6,9:[1,97],10:$Vy,11:8,12:9,13:$V1,14:$V2,15:$V3,29:[1,98],32:96,36:76,38:$V5,40:14,41:15,42:16,43:$V6,44:$V7,45:$V8,46:$V9,47:$Va,48:$Vb},o($Vs,[2,39]),o($Vs,[2,36]),{4:94,6:4,7:5,8:6,9:$V0,11:8,12:9,13:$V1,14:$V2,15:$V3,29:$V4,38:$V5,40:14,41:15,42:16,43:$V6,44:$V7,45:$V8,46:$V9,47:$Va,48:$Vb},o($Vs,[2,56]),o($Vz,[2,58]),o($Vz,[2,59],{37:40,14:$Vc,15:$Vd,16:$Ve,17:$Vf,18:$Vg,19:$Vh,20:$Vi,21:$Vj,22:$Vk,23:$Vl,24:$Vm,25:$Vn,26:$Vo,27:$Vp,31:$Vq,38:$Vr}),{28:[2,62]},o($Vs,[2,51]),o($VA,[2,53],{37:40,14:$Vc,15:$Vd,16:$Ve,17:$Vf,18:$Vg,19:$Vh,20:$Vi,21:$Vj,22:$Vk,23:$Vl,24:$Vm,25:$Vn,26:$Vo,27:$Vp,31:$Vq,38:$Vr}),o([5,10,28,33,39,49],[2,25],{37:40,14:$Vc,15:$Vd,16:$Ve,17:$Vf,18:$Vg,19:$Vh,20:$Vi,21:$Vj,22:$Vk,23:$Vl,24:$Vm,25:$Vn,26:$Vo,27:$Vp,31:$Vq,38:$Vr}),{10:[1,99],33:[1,100]},{4:42,6:4,7:5,8:6,9:$V0,10:[1,101],11:8,12:9,13:$V1,14:$V2,15:$V3,29:[1,103],35:102,38:$V5,40:14,41:15,42:16,43:$V6,44:$V7,45:$V8,46:$V9,47:$Va,48:$Vb},o([10,14,15,16,17,18,19,20,21,22,23,24,25,26,27,31,33,38],$Vt,{30:46,9:$Vu,34:[1,104]}),o($Vs,[2,28]),{4:105,6:4,7:5,8:6,9:$V0,11:8,12:9,13:$V1,14:$V2,15:$V3,29:$V4,38:$V5,40:14,41:15,42:16,43:$V6,44:$V7,45:$V8,46:$V9,47:$Va,48:$Vb},{34:[1,106]},{10:[1,107],33:[1,108]},o([10,14,15,16,17,18,19,20,21,22,23,24,25,26,27,31,38],$Vt,{30:46,9:$Vu,33:[1,109]}),{4:110,6:4,7:5,8:6,9:$V0,11:8,12:9,13:$V1,14:$V2,15:$V3,29:$V4,38:$V5,40:14,41:15,42:16,43:$V6,44:$V7,45:$V8,46:$V9,47:$Va,48:$Vb},{10:[1,111],14:$Vc,15:$Vd,16:$Ve,17:$Vf,18:$Vg,19:$Vh,20:$Vi,21:$Vj,22:$Vk,23:$Vl,24:$Vm,25:$Vn,26:$Vo,27:$Vp,31:$Vq,37:40,38:$Vr},{4:112,6:4,7:5,8:6,9:$V0,11:8,12:9,13:$V1,14:$V2,15:$V3,29:$V4,38:$V5,40:14,41:15,42:16,43:$V6,44:$V7,45:$V8,46:$V9,47:$Va,48:$Vb},{34:[1,113]},{29:[1,114]},{29:[1,115]},o($VE,[2,31],{37:40,14:$Vc,15:$Vd,16:$Ve,17:$Vf,18:$Vg,19:$Vh,20:$Vi,21:$Vj,22:$Vk,23:$Vl,24:$Vm,25:$Vn,26:$Vo,27:$Vp,31:$Vq,38:$Vr}),o($Vs,[2,29]),o($VE,[2,30],{37:40,14:$Vc,15:$Vd,16:$Ve,17:$Vf,18:$Vg,19:$Vh,20:$Vi,21:$Vj,22:$Vk,23:$Vl,24:$Vm,25:$Vn,26:$Vo,27:$Vp,31:$Vq,38:$Vr}),{4:116,6:4,7:5,8:6,9:$V0,11:8,12:9,13:$V1,14:$V2,15:$V3,29:$V4,38:$V5,40:14,41:15,42:16,43:$V6,44:$V7,45:$V8,46:$V9,47:$Va,48:$Vb},o($VE,[2,34]),o($VE,[2,33]),o($VE,[2,32],{37:40,14:$Vc,15:$Vd,16:$Ve,17:$Vf,18:$Vg,19:$Vh,20:$Vi,21:$Vj,22:$Vk,23:$Vl,24:$Vm,25:$Vn,26:$Vo,27:$Vp,31:$Vq,38:$Vr})],\ndefaultActions: {3:[2,2],24:[2,1],52:[2,60],53:[2,61],92:[2,62]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/* skip whitespace */\nbreak;\ncase 1:return 47\nbreak;\ncase 2:return 45\nbreak;\ncase 3:return 46\nbreak;\ncase 4:return 44\nbreak;\ncase 5:return 29\nbreak;\ncase 6:return 43\nbreak;\ncase 7:return 43\nbreak;\ncase 8:return 34\nbreak;\ncase 9:return 15\nbreak;\ncase 10:return 14\nbreak;\ncase 11:return 16\nbreak;\ncase 12:return 17\nbreak;\ncase 13:return 19\nbreak;\ncase 14:return 20\nbreak;\ncase 15:return 25\nbreak;\ncase 16:return 26\nbreak;\ncase 17:return 21\nbreak;\ncase 18:return 22\nbreak;\ncase 19:return 23\nbreak;\ncase 20:return 24\nbreak;\ncase 21:return 13\nbreak;\ncase 22:return 27\nbreak;\ncase 23:return 28\nbreak;\ncase 24:return 18\nbreak;\ncase 25:return 38\nbreak;\ncase 26:return 39\nbreak;\ncase 27:return 48\nbreak;\ncase 28:return 49\nbreak;\ncase 29:return 9\nbreak;\ncase 30:return 10\nbreak;\ncase 31:return 33\nbreak;\ncase 32:return 31\nbreak;\ncase 33:return 'INVALID'\nbreak;\ncase 34:return 5\nbreak;\n}\n},\nrules: [/^(?:\\s+)/,/^(?:null\\b)/,/^(?:true\\b)/,/^(?:false\\b)/,/^(?:[0-9]+(\\.[0-9]+)?\\b)/,/^(?:[a-zA-Z_][a-zA-Z0-9_]*)/,/^(?:'[^\\']*')/,/^(?:\"[^\\\"]*\")/,/^(?:=>)/,/^(?:\\+)/,/^(?:-)/,/^(?:\\*)/,/^(?:\\/)/,/^(?:&&)/,/^(?:\\|\\|)/,/^(?:!=)/,/^(?:==)/,/^(?:<=)/,/^(?:<)/,/^(?:>=)/,/^(?:>)/,/^(?:!)/,/^(?:\\?)/,/^(?::)/,/^(?:%)/,/^(?:\\[)/,/^(?:\\])/,/^(?:\\{)/,/^(?:\\})/,/^(?:\\()/,/^(?:\\))/,/^(?:,)/,/^(?:\\.)/,/^(?:.)/,/^(?:$)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\nexport const bindParser = parser;\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {BindExpression} from './bind-expression';\nimport {BindMacro} from './bind-macro';\nimport {BindValidator} from './bind-validator';\nimport {remove} from '../../../src/utils/array';\n\n/**\n * Asynchronously evaluates a set of Bind expressions.\n */\nexport class BindEvaluator {\n  /**\n   * Creates an instance of BindEvaluator.\n   * @param {boolean} allowUrlProperties\n   */\n  constructor(allowUrlProperties) {\n    /** @const @private {!Array<!BindBindingDef>} */\n    this.bindings_ = [];\n\n    /**\n     * Maps `id` to parsed BindMacro objects for all <amp-bind-macro> on page.\n     * @private @const {!Object<string, !./bind-macro.BindMacro>}\n     */\n    this.macros_ = Object.create(null);\n\n    /** @const @private {!./bind-validator.BindValidator} */\n    this.validator_ = new BindValidator(allowUrlProperties);\n\n    /** @const @private {!Object<string, !BindExpression>} */\n    this.expressions_ = Object.create(null);\n  }\n\n  /**\n   * Parses and stores given bindings into expression objects and returns map\n   * of expression string to parse errors.\n   * @param {!Array<!BindBindingDef>} bindings\n   * @return {!Object<string, !BindEvaluatorErrorDef>},\n   */\n  addBindings(bindings) {\n    const errors = Object.create(null);\n    // Create BindExpression objects from expression strings.\n    bindings.forEach(binding => {\n      const parsed = this.parse_(binding.expressionString);\n      if (parsed.error) {\n        errors[binding.expressionString] = parsed.error;\n      } else {\n        this.bindings_.push(binding);\n      }\n    });\n    return errors;\n  }\n\n  /**\n   * Removes all parsed bindings for the provided expressions.\n   * @param {!Array<string>} expressionStrings\n   */\n  removeBindingsWithExpressionStrings(expressionStrings) {\n    const expressionsToRemove = Object.create(null);\n\n    expressionStrings.forEach(expressionString => {\n      delete this.expressions_[expressionString];\n      expressionsToRemove[expressionString] = true;\n    });\n\n    remove(\n      this.bindings_,\n      binding => !!expressionsToRemove[binding.expressionString]\n    );\n  }\n\n  /**\n   * Parses and stores the given macros and returns map of macro `id` to\n   * parse errors.\n   * @param {!Array<!BindMacroDef>} macros\n   * @return {!Object<string, !BindEvaluatorErrorDef>}\n   */\n  addMacros(macros) {\n    const errors = [];\n    // Create BindMacro objects from BindMacroDef.\n    macros.forEach((macro, index) => {\n      // Only allow a macro to reference macros defined before it to prevent\n      // cycles and recursion.\n      // TODO(willchou): Would be better if cycle/recursion errors are thrown\n      // at creation instead of evaluation.\n      const referableMacros = Object.assign(Object.create(null), this.macros_);\n      try {\n        this.macros_[macro.id] = new BindMacro(macro, referableMacros);\n      } catch (e) {\n        errors[index] = {message: e.message, stack: e.stack};\n      }\n    });\n    return errors;\n  }\n\n  /**\n   * Evaluates all expressions with the given `scope` data returns two maps:\n   * expression strings to results and expression strings to errors.\n   * @param {!JsonObject} scope\n   * @return {!BindEvaluateBindingsResultDef}\n   */\n  evaluateBindings(scope) {\n    /** @type {!Object<string, BindExpressionResultDef>} */\n    const cache = Object.create(null);\n    /** @type {!Object<string, !BindEvaluatorErrorDef>} */\n    const errors = Object.create(null);\n\n    this.setGlobals_(scope);\n\n    // First, evaluate all of the expression strings in the bindings.\n    this.bindings_.forEach(binding => {\n      const {expressionString} = binding;\n      // Skip if we've already evaluated this expression string.\n      if (cache[expressionString] !== undefined || errors[expressionString]) {\n        return;\n      }\n      const expression = this.expressions_[expressionString];\n      if (!expression) {\n        const error = new Error(\n          `Expression \"${expressionString}\"\" is not cached.`\n        );\n        errors[expressionString] = {message: error.message, stack: error.stack};\n        return;\n      }\n      const {result, error} = this.evaluate_(expression, scope);\n      if (error) {\n        errors[expressionString] = error;\n        return;\n      }\n      cache[expressionString] = result;\n    });\n\n    // Then, validate each binding and delete invalid expression results.\n    this.bindings_.forEach(binding => {\n      const {tagName, property, expressionString} = binding;\n      const result = cache[expressionString];\n      if (result === undefined) {\n        return;\n      }\n      // Don't validate non-primitive expression results e.g. arrays, objects.\n      if (result !== null && typeof result === 'object') {\n        return;\n      }\n      // IMPORTANT: We need to validate expression results on each binding\n      // since validity depends on the `tagName` and `property` rather than\n      // just the `result`.\n      const resultString = this.stringValueOf_(property, result);\n      if (!this.validator_.isResultValid(tagName, property, resultString)) {\n        // TODO(choumx): If this expression string is used in another\n        // tagName/property which is valid, we ought to allow it.\n        delete cache[expressionString];\n        const error = new Error(\n          `\"${result}\" is not a valid result for [${property}].`\n        );\n        errors[expressionString] = {message: error.message, stack: error.stack};\n      }\n    });\n\n    return {results: cache, errors};\n  }\n\n  /**\n   * Evaluates and returns a single expression string.\n   * @param {string} expressionString\n   * @param {!JsonObject} scope\n   * @return {!BindEvaluateExpressionResultDef}\n   */\n  evaluateExpression(expressionString, scope) {\n    const parsed = this.parse_(expressionString);\n    if (!parsed.expression) {\n      return {result: null, error: parsed.error};\n    }\n    this.setGlobals_(scope);\n    const evaluated = this.evaluate_(parsed.expression, scope);\n    if (!evaluated.result) {\n      return {result: null, error: evaluated.error};\n    }\n    return {result: evaluated.result, error: null};\n  }\n\n  /**\n   * Sets global references in scope if they're not already set or overriden.\n   * @param {!JsonObject} scope\n   */\n  setGlobals_(scope) {\n    if (!('global' in scope)) {\n      scope['global'] = scope;\n    }\n  }\n\n  /**\n   * Parses a single expression string, caches and returns it.\n   * @param {string} expressionString\n   * @return {{expression: ?BindExpression, error: ?BindEvaluatorErrorDef}}\n   * @private\n   */\n  parse_(expressionString) {\n    let expression = this.expressions_[expressionString];\n    let error = null;\n    if (!expression) {\n      try {\n        expression = new BindExpression(expressionString, this.macros_);\n        this.expressions_[expressionString] = expression;\n      } catch (e) {\n        error = {message: e.message, stack: e.stack};\n      }\n    }\n    return {expression, error};\n  }\n\n  /**\n   * Evaluate a single expression with the given scope.\n   * @param {!BindExpression} expression\n   * @param {!JsonObject} scope\n   * @return {{result: ?BindExpressionResultDef, error: ?BindEvaluatorErrorDef}}\n   * @private\n   */\n  evaluate_(expression, scope) {\n    let result = null;\n    let error = null;\n    try {\n      result = expression.evaluate(scope);\n    } catch (e) {\n      error = {message: e.message, stack: e.stack};\n    }\n    return {result, error};\n  }\n\n  /**\n   * Return parsed bindings for testing.\n   * @return {!Array<!BindBindingDef>}\n   * @visibleForTesting\n   */\n  bindingsForTesting() {\n    return this.bindings_;\n  }\n\n  /**\n   * Returns the expression cache for testing.\n   * @return {!Object<string, !BindExpression>}\n   * @visibleForTesting\n   */\n  expressionsForTesting() {\n    return this.expressions_;\n  }\n\n  /**\n   * Returns the expression result string for a binding to `property`.\n   * @param {string} property\n   * @param {BindExpressionResultDef} result\n   * @return {?string}\n   * @private\n   */\n  stringValueOf_(property, result) {\n    if (result === null) {\n      return null;\n    }\n    switch (property) {\n      case 'text':\n        break;\n      case 'class':\n        if (Array.isArray(result)) {\n          return result.join(' ');\n        }\n        break;\n      default:\n        if (typeof result === 'boolean') {\n          return result ? '' : null;\n        }\n        break;\n    }\n    return String(result);\n  }\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A single node in the AST of a `BindExpression`.\n * @struct\n */\nexport class AstNode {\n  /**\n   * @param {AstNodeType} type\n   * @param {?Array<AstNode>} args\n   * @param {(AstNodeValue|undefined)=} opt_value\n   */\n  constructor(type, args, opt_value) {\n    /** @const {AstNodeType} */\n    this.type = type;\n\n    /** @const {?Array<AstNode>} */\n    this.args = args;\n\n    /** @const {(AstNodeValue|undefined)} */\n    this.value = opt_value;\n  }\n}\n\n/**\n * Type of a node in the AST of a `BindExpression`.\n * @enum {number}\n */\nexport const AstNodeType = {\n  // Grammar rules.\n  EXPRESSION: 0,\n  INVOCATION: 1,\n  ARGS: 2,\n  MEMBER_ACCESS: 3,\n  MEMBER: 4,\n  VARIABLE: 5,\n  LITERAL: 6,\n  ARRAY_LITERAL: 7,\n  ARRAY: 8,\n  OBJECT_LITERAL: 9,\n  OBJECT: 10,\n  KEY_VALUE: 11,\n  // Instead of using having an OPERATION type with subtypes, flatten and use\n  // the operation types directly.\n  NOT: 12,\n  UNARY_MINUS: 13,\n  UNARY_PLUS: 14,\n  PLUS: 15,\n  MINUS: 16,\n  MULTIPLY: 17,\n  DIVIDE: 18,\n  MODULO: 19,\n  LOGICAL_AND: 20,\n  LOGICAL_OR: 21,\n  LESS_OR_EQUAL: 22,\n  LESS: 23,\n  GREATER_OR_EQUAL: 24,\n  GREATER: 25,\n  NOT_EQUAL: 26,\n  EQUAL: 27,\n  TERNARY: 28,\n  ARROW_FUNCTION: 29,\n};\n\n/**\n * Value of a primitive or variable node.\n * @typedef {(boolean|string|number|null)}\n */\nexport let AstNodeValue;\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AstNodeType} from './bind-expr-defines';\nimport {devAssert, user} from '../../../src/log';\nimport {dict, hasOwn, map} from '../../../src/utils/object';\nimport {getMode} from '../../../src/mode';\nimport {isArray, isObject} from '../../../src/types';\nimport {bindParser as parser} from '../../../build/parsers/bind-expr-impl';\n\nconst TAG = 'amp-bind';\n\n/**\n * Maximum number of nodes in an expression AST.\n * @const @private {number}\n */\nconst MAX_AST_SIZE = 100;\n\n/** @const @private {string} */\nconst CUSTOM_FUNCTIONS = 'custom-functions';\n\n/**\n * Map of object type to function name to whitelisted function.\n * @private {!Object<string, !Object<string, Function>>}\n */\nlet FUNCTION_WHITELIST;\n\n/**\n * @return {!Object<string, !Object<string, Function>>}\n * @private\n */\nfunction generateFunctionWhitelist() {\n  /**\n   * Deprecated. Static, not-in-place variant of Array#splice.\n   * @param {!Array} array\n   * @param {number=} unusedStart\n   * @param {number=} unusedDeleteCount\n   * @param {...?} unusedItems\n   * @return {!Array}\n   */\n  function splice(array, unusedStart, unusedDeleteCount, unusedItems) {\n    if (!isArray(array)) {\n      throw new Error(`splice: ${array} is not an array.`);\n    }\n    const copy = Array.prototype.slice.call(array);\n    const args = Array.prototype.slice.call(arguments, 1);\n    Array.prototype.splice.apply(copy, args);\n    return copy;\n  }\n\n  /**\n   * Needs to be wrapped to avoid a duplicate name conflict with the deprecated\n   * splice function above.\n   * @return {!Function}\n   */\n  function instanceSplice() {\n    /**\n     * @param {number=} unusedStart\n     * @param {number=} unusedDeleteCount\n     * @param {...?} unusedItems\n     * @return {!Array}\n     * @this {!Array}\n     */\n    function splice(unusedStart, unusedDeleteCount, unusedItems) {\n      const copy = Array.prototype.slice.call(this);\n      Array.prototype.splice.apply(copy, arguments);\n      return copy;\n    }\n    return splice;\n  }\n\n  /**\n   * Deprecated. Static, not-in-place variant of Array#sort.\n   * @param {!Array} array\n   * @return {!Array}\n   */\n  function sort(array) {\n    if (!isArray(array)) {\n      throw new Error(`sort: ${array} is not an array.`);\n    }\n    const copy = Array.prototype.slice.call(array);\n    Array.prototype.sort.call(copy);\n    return copy;\n  }\n\n  /**\n   * Needs to be wrapped to avoid a duplicate name conflict with the deprecated\n   * sort function above.\n   * @return {!Function}\n   */\n  function instanceSort() {\n    /**\n     * @param {!Function} compareFunction\n     * @return {!Array}\n     * @this {!Array}\n     */\n    function sort(compareFunction) {\n      const copy = Array.prototype.slice.call(this);\n      Array.prototype.sort.call(copy, compareFunction);\n      return copy;\n    }\n    return sort;\n  }\n\n  // Prototype functions.\n  const whitelist = dict({\n    '[object Array]': {\n      // TODO(choumx): Polyfill Array#find and Array#findIndex for IE.\n      'concat': Array.prototype.concat,\n      'filter': Array.prototype.filter,\n      'indexOf': Array.prototype.indexOf,\n      'join': Array.prototype.join,\n      'lastIndexOf': Array.prototype.lastIndexOf,\n      'map': Array.prototype.map,\n      'reduce': Array.prototype.reduce,\n      'slice': Array.prototype.slice,\n      'some': Array.prototype.some,\n      'sort': instanceSort(),\n      'splice': instanceSplice(),\n      'includes': Array.prototype.includes,\n    },\n    '[object Number]': {\n      'toExponential': Number.prototype.toExponential,\n      'toFixed': Number.prototype.toFixed,\n      'toPrecision': Number.prototype.toPrecision,\n      'toString': Number.prototype.toString,\n    },\n    '[object String]': {\n      'charAt': String.prototype.charAt,\n      'charCodeAt': String.prototype.charCodeAt,\n      'concat': String.prototype.concat,\n      'indexOf': String.prototype.indexOf,\n      'lastIndexOf': String.prototype.lastIndexOf,\n      'replace': String.prototype.replace,\n      'slice': String.prototype.slice,\n      'split': String.prototype.split,\n      'substr': String.prototype.substr,\n      'substring': String.prototype.substring,\n      'toLowerCase': String.prototype.toLowerCase,\n      'toUpperCase': String.prototype.toUpperCase,\n    },\n  });\n\n  // Un-namespaced static functions.\n  whitelist[CUSTOM_FUNCTIONS] = {\n    'encodeURI': encodeURI,\n    'encodeURIComponent': encodeURIComponent,\n    'abs': Math.abs,\n    'ceil': Math.ceil,\n    'floor': Math.floor,\n    'sqrt': Math.sqrt,\n    'log': Math.log,\n    'max': Math.max,\n    'min': Math.min,\n    'pow': Math.pow,\n    'random': Math.random,\n    'round': Math.round,\n    'sign': Math.sign,\n    'keys': Object.keys,\n    'values': Object.values,\n  };\n\n  // Creates a map of function name to the function itself.\n  // This makes function lookups faster (compared to Array.indexOf).\n  const out = map();\n  Object.keys(whitelist).forEach(type => {\n    out[type] = map();\n\n    const functionsForType = whitelist[type];\n    Object.keys(functionsForType).forEach(name => {\n      const func = functionsForType[name];\n      if (func) {\n        devAssert(\n          !func.name || name === func.name,\n          'Listed function name ' +\n            `\"${name}\" doesn't match name property \"${func.name}\".`\n        );\n        out[type][name] = func;\n      } else {\n        // This can happen if a browser doesn't support a built-in function.\n        throw new Error(`Unsupported function: ${type}.${name}`);\n      }\n    });\n  });\n\n  // Custom functions (non-JS-built-ins) must be added manually as their names\n  // will be minified at compile time.\n  out[CUSTOM_FUNCTIONS]['copyAndSplice'] = splice; // Deprecated.\n  out[CUSTOM_FUNCTIONS]['sort'] = sort; // Deprecated.\n  out[CUSTOM_FUNCTIONS]['splice'] = splice; // Deprecated.\n\n  return out;\n}\n\n/**\n * A single Bind expression.\n */\nexport class BindExpression {\n  /**\n   * @param {string} expressionString\n   * @param {!Object<string, !./bind-macro.BindMacro>} macros\n   * @param {number=} opt_maxAstSize\n   * @throws {Error} On malformed expressions.\n   */\n  constructor(expressionString, macros, opt_maxAstSize) {\n    if (!FUNCTION_WHITELIST) {\n      FUNCTION_WHITELIST = generateFunctionWhitelist();\n    }\n\n    /** @const {string} */\n    this.expressionString = expressionString;\n\n    /** @private @const {!Object<string, !./bind-macro.BindMacro>} */\n    this.macros_ = macros;\n\n    /** @const @private {!./bind-expr-defines.AstNode} */\n    this.ast_ = parser.parse(this.expressionString);\n\n    /** @const {number} */\n    this.expressionSize = this.numberOfNodesInAst_(this.ast_);\n\n    // Check if this expression string is too large (for performance).\n    const maxSize = opt_maxAstSize || MAX_AST_SIZE;\n    const skipConstraint = getMode().localDev && !getMode().test;\n    if (this.expressionSize > maxSize && !skipConstraint) {\n      throw new Error(\n        `Expression size (${this.expressionSize}) exceeds max ` +\n          `(${maxSize}). Please reduce number of operands.`\n      );\n    }\n  }\n\n  /**\n   * Evaluates the expression given a scope.\n   * @param {!JsonObject} scope\n   * @throws {Error} On illegal function invocation.\n   * @return {BindExpressionResultDef}\n   */\n  evaluate(scope) {\n    return this.eval_(this.ast_, scope);\n  }\n\n  /**\n   * @param {!./bind-expr-defines.AstNode} ast\n   * @return {number}\n   * @private\n   */\n  numberOfNodesInAst_(ast) {\n    // Include the node count of any nested macros in the expression.\n    if (this.isMacroInvocationNode_(ast)) {\n      const macro = this.macros_[String(ast.value)];\n      let nodes = macro.getExpressionSize();\n      this.argumentsForInvocation_(ast).forEach(arg => {\n        if (arg) {\n          nodes += this.numberOfNodesInAst_(arg) - 1;\n        }\n      });\n      return nodes;\n    } else {\n      let nodes = 1;\n      if (ast.args) {\n        ast.args.forEach(arg => {\n          if (arg) {\n            nodes += this.numberOfNodesInAst_(arg);\n          }\n        });\n      }\n      return nodes;\n    }\n  }\n\n  /**\n   * @param {!./bind-expr-defines.AstNode} ast\n   * @return {boolean}\n   * @private\n   */\n  isMacroInvocationNode_(ast) {\n    const isInvocationWithNoCaller =\n      ast.type === AstNodeType.INVOCATION && !ast.args[0];\n    if (isInvocationWithNoCaller) {\n      const macroExistsWithValue = this.macros_[String(ast.value)] != null;\n      return macroExistsWithValue;\n    }\n    return false;\n  }\n\n  /**\n   * Given an INVOCATION node, returns an array containing its arguments.\n   * Also unwraps its ARGS child, if it has one.\n   * @param {!./bind-expr-defines.AstNode} ast\n   * @return {!Array<./bind-expr-defines.AstNode>}\n   * @private\n   */\n  argumentsForInvocation_(ast) {\n    // The INVOCATION node may or may not contain an ARGS child node.\n    const argsNode =\n      ast.args.length === 2 && ast.args[1].type === AstNodeType.ARGS\n        ? ast.args[1]\n        : null;\n    if (argsNode) {\n      // An ARGS node can either have an empty array or an ARRAY child.\n      const {args} = argsNode;\n      if (args.length === 0) {\n        return [];\n      } else if (args.length === 1 && args[0].type === AstNodeType.ARRAY) {\n        // An ARRAY node contains an actual array.\n        const arrayNode = args[0];\n        return arrayNode.args || [];\n      }\n    }\n    // Otherwise, just return the array of its non-ARGS arguments.\n    return ast.args || [];\n  }\n\n  /**\n   * Recursively evaluates and returns value of `node` and its children.\n   * @param {./bind-expr-defines.AstNode} node\n   * @param {!JsonObject} scope\n   * @throws {Error}\n   * @return {BindExpressionResultDef}\n   * @private\n   */\n  eval_(node, scope) {\n    if (!node) {\n      return null;\n    }\n\n    const {type, args, value} = node;\n\n    // `value` should always exist for literals.\n    if (type === AstNodeType.LITERAL && value !== undefined) {\n      return value;\n    }\n\n    switch (type) {\n      case AstNodeType.EXPRESSION:\n        return this.eval_(args[0], scope);\n\n      case AstNodeType.INVOCATION:\n        // Built-in functions and macros don't have a caller object.\n        const isBuiltInOrMacro = args[0] === undefined;\n\n        const caller = this.eval_(args[0], scope);\n        const params = this.eval_(args[1], scope);\n        const method = String(value);\n\n        let validFunction;\n        let unsupportedError;\n\n        if (isBuiltInOrMacro) {\n          const macro = this.macros_[method];\n          if (macro) {\n            validFunction = function() {\n              return macro.evaluate(\n                scope,\n                Array.prototype.slice.call(arguments)\n              );\n            };\n          } else {\n            validFunction = FUNCTION_WHITELIST[CUSTOM_FUNCTIONS][method];\n          }\n          if (!validFunction) {\n            unsupportedError = `${method} is not a supported function.`;\n          }\n        } else {\n          if (caller === null) {\n            user().warn(\n              TAG,\n              `Cannot invoke method ${method} on null; returning null.`\n            );\n            return null;\n          }\n          const callerType = Object.prototype.toString.call(caller);\n          const whitelist = FUNCTION_WHITELIST[callerType];\n          if (whitelist) {\n            const f = caller[method];\n            if (f && f === whitelist[method]) {\n              validFunction = f;\n            } else if (this.isCustomInstanceFunction_(method)) {\n              validFunction = whitelist[method];\n            }\n          }\n          if (!validFunction) {\n            unsupportedError = `${callerType}.${method} is not a supported function.`;\n          }\n        }\n\n        if (validFunction) {\n          if (Array.isArray(params)) {\n            if (this.containsInvalidArgument_(method, params)) {\n              throw new Error(`Unexpected argument type in ${method}().`);\n            }\n            return validFunction.apply(caller, params);\n          }\n        }\n\n        throw new Error(unsupportedError);\n\n      case AstNodeType.MEMBER_ACCESS:\n        const target = this.eval_(args[0], scope);\n        const member = this.eval_(args[1], scope);\n\n        if (target === null || member === null) {\n          return null;\n        }\n        const targetType = typeof target;\n        if (targetType !== 'string' && targetType !== 'object') {\n          return null;\n        }\n        const memberType = typeof member;\n        if (memberType !== 'string' && memberType !== 'number') {\n          return null;\n        }\n        if (hasOwn(target, String(member))) {\n          return target[member];\n        }\n        return null;\n\n      case AstNodeType.MEMBER:\n        return value || this.eval_(args[0], scope);\n\n      case AstNodeType.VARIABLE:\n        const variable = value;\n        if (hasOwn(scope, String(variable))) {\n          return scope[variable];\n        }\n        return null;\n\n      case AstNodeType.ARGS:\n      case AstNodeType.ARRAY_LITERAL:\n        return args.length > 0 ? this.eval_(args[0], scope) : [];\n\n      case AstNodeType.ARRAY:\n        return args.map(element => this.eval_(element, scope));\n\n      case AstNodeType.OBJECT_LITERAL:\n        return args.length > 0 ? this.eval_(args[0], scope) : map();\n\n      case AstNodeType.OBJECT:\n        const object = map();\n        args.forEach(keyValue => {\n          const {k, v} = this.eval_(keyValue, scope);\n          object[k] = v;\n        });\n        return object;\n\n      case AstNodeType.KEY_VALUE:\n        return {\n          k: this.eval_(args[0], scope),\n          v: this.eval_(args[1], scope),\n        };\n\n      case AstNodeType.NOT:\n        return !this.eval_(args[0], scope);\n\n      case AstNodeType.UNARY_MINUS:\n        return -Number(this.eval_(args[0], scope));\n\n      case AstNodeType.UNARY_PLUS:\n        return +Number(this.eval_(args[0], scope));\n\n      case AstNodeType.PLUS:\n        return this.eval_(args[0], scope) + this.eval_(args[1], scope);\n\n      case AstNodeType.MINUS:\n        return (\n          Number(this.eval_(args[0], scope)) -\n          Number(this.eval_(args[1], scope))\n        );\n\n      case AstNodeType.MULTIPLY:\n        return (\n          Number(this.eval_(args[0], scope)) *\n          Number(this.eval_(args[1], scope))\n        );\n\n      case AstNodeType.DIVIDE:\n        return (\n          Number(this.eval_(args[0], scope)) /\n          Number(this.eval_(args[1], scope))\n        );\n\n      case AstNodeType.MODULO:\n        return (\n          Number(this.eval_(args[0], scope)) %\n          Number(this.eval_(args[1], scope))\n        );\n\n      case AstNodeType.LOGICAL_AND:\n        return this.eval_(args[0], scope) && this.eval_(args[1], scope);\n\n      case AstNodeType.LOGICAL_OR:\n        return this.eval_(args[0], scope) || this.eval_(args[1], scope);\n\n      case AstNodeType.LESS_OR_EQUAL:\n        return this.eval_(args[0], scope) <= this.eval_(args[1], scope);\n\n      case AstNodeType.LESS:\n        return this.eval_(args[0], scope) < this.eval_(args[1], scope);\n\n      case AstNodeType.GREATER_OR_EQUAL:\n        return this.eval_(args[0], scope) >= this.eval_(args[1], scope);\n\n      case AstNodeType.GREATER:\n        return this.eval_(args[0], scope) > this.eval_(args[1], scope);\n\n      case AstNodeType.NOT_EQUAL:\n        return this.eval_(args[0], scope) != this.eval_(args[1], scope);\n\n      case AstNodeType.EQUAL:\n        return this.eval_(args[0], scope) == this.eval_(args[1], scope);\n\n      case AstNodeType.TERNARY:\n        return this.eval_(args[0], scope)\n          ? this.eval_(args[1], scope)\n          : this.eval_(args[2], scope);\n\n      case AstNodeType.ARROW_FUNCTION:\n        const functionScope = map(scope);\n        return (...values) => {\n          // Support parameters in arrow functions by forwarding their values\n          // into the function's scope. For example, in this function call:\n          //\n          //     const f = (x, y) => x + y;\n          //     f(2, 7);\n          //\n          // `names` == ['x', 'y'] and `values` == [2, 7], so we include\n          // {x: 2, y: 7} in the scope when evaluating `x + y`.\n\n          const names = this.eval_(args[0], scope);\n          if (names) {\n            names.forEach((name, i) => {\n              functionScope[name] = values[i];\n            });\n          }\n          return this.eval_(args[1], functionScope);\n        };\n\n      default:\n        throw new Error(`Unexpected AstNodeType: ${type}.`);\n    }\n  }\n\n  /**\n   * Returns true if `method` is a non-standard instance function.\n   * We alter certain functions e.g. Array.sort to modify and return a copy\n   * instead of operating in-place.\n   * @param {string} method\n   * @return {boolean}\n   * @private\n   */\n  isCustomInstanceFunction_(method) {\n    return method === 'sort' || method === 'splice';\n  }\n\n  /**\n   * @param {string} method\n   * @param {!Array} params\n   * @return {boolean}\n   * @private\n   */\n  containsInvalidArgument_(method, params) {\n    // Don't allow objects as parameters except for certain functions.\n    if (method == 'keys' || method == 'values' || method == 'splice') {\n      return false;\n    }\n    return this.containsObject_(params);\n  }\n\n  /**\n   * Returns true if input array contains a plain object.\n   * @param {!Array} array\n   * @return {boolean}\n   * @private\n   */\n  containsObject_(array) {\n    for (let i = 0; i < array.length; i++) {\n      if (isObject(array[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {BindExpression} from './bind-expression';\n\n/**\n * A single parsed Bind macro.\n */\nexport class BindMacro {\n  /**\n   * @param {!BindMacroDef} data\n   * @param {!Object<string, !BindMacro>} referableMacros\n   */\n  constructor(data, referableMacros) {\n    /** @const @private {!Array<string>} */\n    this.argumentNames_ = data.argumentNames || [];\n\n    /** @const @private {!BindExpression} */\n    this.expression_ = new BindExpression(\n      data.expressionString,\n      referableMacros\n    );\n  }\n\n  /**\n   * @param {!JsonObject} scope\n   * @param {!Array} args\n   * @throws {Error} On illegal function invocation.\n   * @return {BindExpressionResultDef}\n   */\n  evaluate(scope, args) {\n    const copy = /** @type {!JsonObject} */ (Object.assign({}, scope));\n    for (let i = 0; i < this.argumentNames_.length; i++) {\n      copy[this.argumentNames_[i]] = args[i];\n    }\n    return this.expression_.evaluate(copy);\n  }\n\n  /**\n   * @return {number}\n   */\n  getExpressionSize() {\n    return this.expression_.expressionSize;\n  }\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {hasOwn, ownProperty} from '../../../src/utils/object';\nimport {parseSrcset} from '../../../src/srcset';\nimport {startsWith} from '../../../src/string';\nimport {user} from '../../../src/log';\n\nconst TAG = 'amp-bind';\n\n/**\n * @typedef {{\n *   allowedProtocols: (!Object<string,boolean>|undefined),\n *   alternativeName: (string|undefined),\n * }}\n */\nlet PropertyRulesDef;\n\n/**\n * Property rules that apply to any and all tags.\n * @private {Object<string, ?PropertyRulesDef>}\n */\nconst GLOBAL_PROPERTY_RULES = {\n  'class': {\n    blacklistedValueRegex: '(^|\\\\W)i-amphtml-',\n  },\n  'hidden': null,\n  'text': null,\n};\n\n/**\n * Property rules that apply to all AMP elements.\n * @private {Object<string, ?PropertyRulesDef>}\n */\nconst AMP_PROPERTY_RULES = {\n  'width': null,\n  'height': null,\n};\n\n/**\n * Maps tag names to property names to PropertyRulesDef.\n * If `ELEMENT_RULES[tag][property]` is null, then all values are valid\n * for that property in that tag.\n * @private {Object<string, Object<string, ?PropertyRulesDef>>}}\n */\nconst ELEMENT_RULES = createElementRules_();\n\n/**\n * Map whose keys comprise all properties that contain URLs.\n * @private {Object<string, boolean>}\n */\nconst URL_PROPERTIES = {\n  'src': true,\n  'srcset': true,\n  'href': true,\n  'xlink:href': true,\n};\n\n/**\n * BindValidator performs runtime validation of Bind expression results.\n *\n * For performance reasons, the validation rules enforced are a subset\n * of the AMP validator's, selected with a focus on security and UX.\n */\nexport class BindValidator {\n  /**\n   * @param {boolean} allowUrlBindings\n   */\n  constructor(allowUrlBindings) {\n    /** @const @private {boolean} */\n    this.allowUrlBindings_ = allowUrlBindings;\n  }\n\n  /**\n   * Returns true if (tag, property) binding is allowed.\n   * Otherwise, returns false.\n   * NOTE: `tag` and `property` are case-sensitive.\n   * @param {string} tag\n   * @param {string} property\n   * @return {boolean}\n   */\n  canBind(tag, property) {\n    return this.rulesForTagAndProperty_(tag, property) !== undefined;\n  }\n\n  /**\n   * Returns true if `value` is a valid result for a (tag, property) binding.\n   * Otherwise, returns false.\n   * @param {string} tag\n   * @param {string} property\n   * @param {?string} value\n   * @return {boolean}\n   */\n  isResultValid(tag, property, value) {\n    let rules = this.rulesForTagAndProperty_(tag, property);\n    // `alternativeName` is a reference to another property's rules.\n    if (rules && rules.alternativeName) {\n      rules = this.rulesForTagAndProperty_(tag, rules.alternativeName);\n    }\n    // If binding to (tag, property) is not allowed, return false.\n    if (rules === undefined) {\n      return false;\n    }\n    // If binding is allowed but have no specific rules, return true.\n    if (rules === null) {\n      return true;\n    }\n    // Validate URL(s) if applicable.\n    if (value && ownProperty(URL_PROPERTIES, property)) {\n      let urls;\n      if (property === 'srcset') {\n        let srcset;\n        try {\n          srcset = parseSrcset(value);\n        } catch (e) {\n          user().error(TAG, 'Failed to parse srcset: ', e);\n          return false;\n        }\n        urls = srcset.getUrls();\n      } else {\n        urls = [value];\n      }\n      for (let i = 0; i < urls.length; i++) {\n        if (!this.isUrlValid_(urls[i], rules)) {\n          return false;\n        }\n      }\n    }\n    // @see validator/engine/validator.ParsedTagSpec.validateAttributes()\n    const {blacklistedValueRegex} = rules;\n    if (value && blacklistedValueRegex) {\n      const re = new RegExp(blacklistedValueRegex, 'i');\n      if (re.test(value)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Returns true if a url's value is valid within a property rules spec.\n   * @param {string} url\n   * @param {!PropertyRulesDef} rules\n   * @return {boolean}\n   * @private\n   */\n  isUrlValid_(url, rules) {\n    // @see validator/engine/validator.js#validateUrlAndProtocol()\n    if (url) {\n      if (/__amp_source_origin/.test(url)) {\n        return false;\n      }\n      const {allowedProtocols} = rules;\n      if (allowedProtocols) {\n        const re = /^([^:\\/?#.]+):[\\s\\S]*$/;\n        const match = re.exec(url);\n        if (match !== null) {\n          const protocol = match[1].toLowerCase().trim();\n          // hasOwn() needed since nested objects are not prototype-less.\n          if (!hasOwn(allowedProtocols, protocol)) {\n            return false;\n          }\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Returns the property rules object for (tag, property), if it exists.\n   * Returns null if binding is allowed without constraints.\n   * Returns undefined if binding is not allowed.\n   * @param {string} tag\n   * @param {string} property\n   * @return {(?PropertyRulesDef|undefined)}\n   * @private\n   */\n  rulesForTagAndProperty_(tag, property) {\n    // Allow binding to all ARIA attributes.\n    if (startsWith(property, 'aria-')) {\n      return null;\n    }\n    // Disallow URL property bindings if configured as such.\n    if (ownProperty(URL_PROPERTIES, property) && !this.allowUrlBindings_) {\n      return undefined;\n    }\n    const globalRules = ownProperty(GLOBAL_PROPERTY_RULES, property);\n    if (globalRules !== undefined) {\n      return /** @type {PropertyRulesDef} */ (globalRules);\n    }\n    const ampPropertyRules = ownProperty(AMP_PROPERTY_RULES, property);\n    if (startsWith(tag, 'AMP-') && ampPropertyRules !== undefined) {\n      return /** @type {PropertyRulesDef} */ (ampPropertyRules);\n    }\n    const tagRules = ownProperty(ELEMENT_RULES, tag);\n    if (tagRules) {\n      return tagRules[property];\n    }\n    return undefined;\n  }\n}\n\n/**\n * @return {Object<string, Object<string, ?PropertyRulesDef>>}}\n * @private\n */\nfunction createElementRules_() {\n  // Initialize `rules` with tag-specific constraints.\n  const rules = {\n    'AMP-AUDIO': {\n      'album': null,\n      'artist': null,\n      'artwork': null,\n      'controlsList': null,\n      'loop': null,\n      'src': {\n        'allowedProtocols': {\n          'https': true,\n        },\n      },\n      'title': null,\n    },\n    'AMP-AUTOCOMPLETE': {\n      'src': {\n        'allowedProtocols': {\n          'https': true,\n        },\n      },\n    },\n    'AMP-BASE-CAROUSEL': {\n      'advance-count': null,\n      'auto-advance-count': null,\n      'auto-advance-interval': null,\n      'auto-advance-loops': null,\n      'auto-advance': null,\n      'horizontal': null,\n      'initial-index': null,\n      'loop': null,\n      'mixed-length': null,\n      'side-slide-count': null,\n      'slide': null,\n      'snap-align': null,\n      'snap-by': null,\n      'snap': null,\n      'visible-count': null,\n    },\n    'AMP-BRIGHTCOVE': {\n      'data-account': null,\n      'data-embed': null,\n      'data-player': null,\n      'data-player-id': null,\n      'data-playlist-id': null,\n      'data-video-id': null,\n    },\n    'AMP-CAROUSEL': {\n      'slide': null,\n    },\n    'AMP-DATE-PICKER': {\n      'max': null,\n      'min': null,\n      'src': {\n        'allowedProtocols': {\n          'https': true,\n        },\n      },\n    },\n    'AMP-GOOGLE-DOCUMENT-EMBED': {\n      'src': null,\n      'title': null,\n    },\n    'AMP-IFRAME': {\n      'src': null,\n    },\n    'AMP-IMG': {\n      'alt': null,\n      'attribution': null,\n      'src': {\n        'allowedProtocols': {\n          'data': true,\n          'http': true,\n          'https': true,\n        },\n      },\n      'srcset': {\n        'alternativeName': 'src',\n      },\n    },\n    'AMP-LIGHTBOX': {\n      'open': null,\n    },\n    'AMP-LIST': {\n      'src': {\n        'allowedProtocols': {\n          'https': true,\n        },\n      },\n      'state': null,\n      'is-layout-container': null,\n    },\n    'AMP-SELECTOR': {\n      'disabled': null,\n      'selected': null,\n    },\n    'AMP-STATE': {\n      'src': {\n        'allowedProtocols': {\n          'https': true,\n        },\n      },\n    },\n    'AMP-TIMEAGO': {\n      'datetime': null,\n      'title': null,\n    },\n    'AMP-TWITTER': {\n      'data-tweetid': null,\n    },\n    'AMP-VIDEO': {\n      'album': null,\n      'alt': null,\n      'artist': null,\n      'artwork': null,\n      'attribution': null,\n      'controls': null,\n      'controlslist': null,\n      'loop': null,\n      'poster': null,\n      'preload': null,\n      'src': {\n        'allowedProtocols': {\n          'https': true,\n        },\n      },\n      'title': null,\n    },\n    'AMP-YOUTUBE': {\n      'data-videoid': null,\n    },\n    'A': {\n      'href': {\n        'allowedProtocols': {\n          'ftp': true,\n          'http': true,\n          'https': true,\n          'mailto': true,\n          'fb-messenger': true,\n          'intent': true,\n          'skype': true,\n          'sms': true,\n          'snapchat': true,\n          'tel': true,\n          'tg': true,\n          'threema': true,\n          'twitter': true,\n          'viber': true,\n          'whatsapp': true,\n        },\n      },\n    },\n    'BUTTON': {\n      'disabled': null,\n      'type': null,\n      'value': null,\n    },\n    'DETAILS': {\n      'open': null,\n    },\n    'FIELDSET': {\n      'disabled': null,\n    },\n    'IMAGE': {\n      'xlink:href': {\n        'allowedProtocols': {\n          'http': true,\n          'https': true,\n        },\n      },\n    },\n    'INPUT': {\n      'accept': null,\n      'accesskey': null,\n      'autocomplete': null,\n      'checked': null,\n      'disabled': null,\n      'height': null,\n      'inputmode': null,\n      'max': null,\n      'maxlength': null,\n      'min': null,\n      'minlength': null,\n      'multiple': null,\n      'pattern': null,\n      'placeholder': null,\n      'readonly': null,\n      'required': null,\n      'selectiondirection': null,\n      'size': null,\n      'spellcheck': null,\n      'step': null,\n      'type': {\n        blacklistedValueRegex: '(^|\\\\s)(button|image|)(\\\\s|$)',\n      },\n      'value': null,\n      'width': null,\n    },\n    'OPTION': {\n      'disabled': null,\n      'label': null,\n      'selected': null,\n      'value': null,\n    },\n    'OPTGROUP': {\n      'disabled': null,\n      'label': null,\n    },\n    'SECTION': {\n      'data-expand': null,\n    },\n    'SELECT': {\n      'autofocus': null,\n      'disabled': null,\n      'multiple': null,\n      'required': null,\n      'size': null,\n    },\n    'SOURCE': {\n      'src': {\n        'allowedProtocols': {\n          'https': true,\n        },\n      },\n      'type': null,\n    },\n    'TRACK': {\n      'label': null,\n      'src': {\n        'allowedProtocols': {\n          'https': true,\n        },\n      },\n      'srclang': null,\n    },\n    'TEXTAREA': {\n      'autocomplete': null,\n      'autofocus': null,\n      'cols': null,\n      'disabled': null,\n      'maxlength': null,\n      'minlength': null,\n      'pattern': null,\n      'placeholder': null,\n      'readonly': null,\n      'required': null,\n      'rows': null,\n      'selectiondirection': null,\n      'selectionend': null,\n      'selectionstart': null,\n      'spellcheck': null,\n      'wrap': null,\n      // Non-standard property.\n      'defaulttext': null,\n    },\n  };\n  return rules;\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Common AMP events.\n * @enum {string}\n */\nexport const AmpEvents = {\n  DOM_UPDATE: 'amp:dom-update',\n  FORM_DIRTINESS_CHANGE: 'amp:form-dirtiness-change',\n  FORM_VALUE_CHANGE: 'amp:form-value-change',\n  VISIBILITY_CHANGE: 'amp:visibilitychange', // https://github.com/ampproject/amphtml/blob/master/ads/README.md#page-visibility\n  // The following codes are only used for testing.\n  // TODO(choumx): Move these to a separate enum so they can be DCE'd.\n  ATTACHED: 'amp:attached',\n  STUBBED: 'amp:stubbed',\n  LOAD_START: 'amp:load:start',\n  LOAD_END: 'amp:load:end',\n  ERROR: 'amp:error',\n  SIZE_CHANGED: 'amp:size-changed',\n};\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from './services';\n\n/**\n * Helper method to trigger analytics event if amp-analytics is available.\n * TODO: Do not expose this function\n * @param {!Element} target\n * @param {string} eventType\n * @param {!JsonObject=} opt_vars A map of vars and their values.\n */\nexport function triggerAnalyticsEvent(target, eventType, opt_vars) {\n  Services.analyticsForDocOrNull(target).then(analytics => {\n    if (!analytics) {\n      return;\n    }\n    analytics.triggerEventForTarget(target, eventType, opt_vars);\n  });\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Commonly used signals across different elements and documents.\n * @enum {string}\n */\nexport const CommonSignals = {\n  /**\n   * The element has been upgraded from ElementStub to its real implementation.\n   */\n  UPGRADED: 'upgraded',\n\n  /**\n   * The element has been built.\n   */\n  BUILT: 'built',\n\n  /**\n   * The element has started loading.\n   * LOAD_START triggers at the start of the layoutCallback.\n   */\n  LOAD_START: 'load-start',\n\n  /**\n   * Rendering has been confirmed to have been started.\n   * It is a signal to indicate meaningful display (e.g. text could be displayed\n   * CSS is correctly installed/applied).\n   *\n   * Elements can optionally implement RENDER_START signal. (e.g. ad, shadowdoc)\n   * if it want to define its own meaningful display time and toggle visibility.\n   *\n   * Simpler elements's RENDER_START can be equal to the start of the\n   * buildCallback\n   */\n  RENDER_START: 'render-start',\n\n  /**\n   * The element has been loaded.\n   * LOAD_END triggers at the end of the layoutCallback.\n   *\n   */\n  LOAD_END: 'load-end',\n\n  /**\n   * The initial contents of an element/document/embed have been loaded.\n   * INI_LOAD is an optional signal, implemented by ads, story, and elements\n   * that consist of other resources.\n   * It instructs that all critical resources has been loaded, and can be used\n   * for more accurate visibility measurement.\n   * When an element doesn't consist multiple child resources, LOAD_END signal\n   * can be used to indicate resource load completion.\n   * Note: Based on the implementation, INI_LOAD can trigger before or after\n   * LOAD_END.\n   */\n  INI_LOAD: 'ini-load',\n\n  /**\n   * The element has been unlaid out.\n   */\n  UNLOAD: 'unload',\n};\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows for runtime configuration. Internally, the runtime should\n * use the src/config.js module for various constants. We can use the\n * AMP_CONFIG global to translate user-defined configurations to this\n * module.\n * @type {!Object<string, string>}\n */\nconst env = self.AMP_CONFIG || {};\n\nconst thirdPartyFrameRegex =\n  typeof env['thirdPartyFrameRegex'] == 'string'\n    ? new RegExp(env['thirdPartyFrameRegex'])\n    : env['thirdPartyFrameRegex'];\n\nconst cdnProxyRegex =\n  typeof env['cdnProxyRegex'] == 'string'\n    ? new RegExp(env['cdnProxyRegex'])\n    : env['cdnProxyRegex'];\n\n/** @type {!Object<string, string|boolean|RegExp|Array<RegExp>>} */\nexport const urls = {\n  thirdParty: env['thirdPartyUrl'] || 'https://3p.ampproject.net',\n  thirdPartyFrameHost: env['thirdPartyFrameHost'] || 'ampproject.net',\n  thirdPartyFrameRegex: thirdPartyFrameRegex || /^d-\\d+\\.ampproject\\.net$/,\n  cdn: env['cdnUrl'] || 'https://cdn.ampproject.org',\n  /* Note that cdnProxyRegex is only ever checked against origins\n   * (proto://host[:port]) so does not need to consider path\n   */\n  cdnProxyRegex:\n    cdnProxyRegex || /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org$/,\n  localhostRegex: /^https?:\\/\\/localhost(:\\d+)?$/,\n  errorReporting:\n    env['errorReportingUrl'] || 'https://amp-error-reporting.appspot.com/r',\n  localDev: env['localDev'] || false,\n  /**\n   * These domains are trusted with more sensitive viewer operations such as\n   * propagating the referrer. If you believe your domain should be here,\n   * file the issue on GitHub to discuss. The process will be similar\n   * (but somewhat more stringent) to the one described in the [3p/README.md](\n   * https://github.com/ampproject/amphtml/blob/master/3p/README.md)\n   *\n   * {!Array<!RegExp>}\n   */\n  trustedViewerHosts: [\n    /(^|\\.)google\\.(com?|[a-z]{2}|com?\\.[a-z]{2}|cat)$/,\n    /(^|\\.)gmail\\.(com|dev)$/,\n  ],\n};\n\nexport const config = {\n  urls,\n};\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {cssEscape} from '../third_party/css-escape/css-escape';\nimport {devAssert} from './log';\n\n/**\n * Asserts that name is just an alphanumeric word, and does not contain\n * advanced CSS selector features like attributes, psuedo-classes, class names,\n * nor ids.\n * @param {string} name\n */\nexport function assertIsName(name) {\n  devAssert(/^[\\w-]+$/.test(name));\n}\n\n/**\n * @type {boolean|undefined}\n */\nlet scopeSelectorSupported;\n\n/**\n * @param {boolean|undefined} val\n * @visibleForTesting\n */\nexport function setScopeSelectorSupportedForTesting(val) {\n  scopeSelectorSupported = val;\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element} el\n * @return {boolean}\n */\nexport function isScopeSelectorSupported(el) {\n  if (scopeSelectorSupported !== undefined) {\n    return scopeSelectorSupported;\n  }\n\n  return (scopeSelectorSupported = testScopeSelector(el));\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element} el\n * @return {boolean}\n */\nfunction testScopeSelector(el) {\n  try {\n    const doc = el.ownerDocument;\n    const testElement = doc.createElement('div');\n    const testChild = doc.createElement('div');\n    testElement.appendChild(testChild);\n    // NOTE(cvializ, #12383): Firefox's implementation is incomplete,\n    // therefore we test actual functionality of`:scope` as well.\n    return testElement./*OK*/ querySelector(':scope div') === testChild;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Prefixes a selector for ancestor selection. Splits in subselectors and\n * applies prefix to each.\n *\n * e.g.\n * ```\n *   prependSelectorsWith('div', '.i-amphtml-scoped');\n *   // => '.i-amphtml-scoped div'\n *   prependSelectorsWith('div, ul', ':scope');\n *   // => ':scope div, :scope ul'\n *   prependSelectorsWith('div, ul', 'article >');\n *   // => 'article > div, article > ul'\n * ```\n *\n * @param {string} selector\n * @param {string} distribute\n * @return {string}\n */\nexport function prependSelectorsWith(selector, distribute) {\n  return selector.replace(/^|,/g, `$&${distribute} `);\n}\n\n/**\n * Escapes an ident (ID or a class name) to be used as a CSS selector.\n *\n * See https://drafts.csswg.org/cssom/#serialize-an-identifier.\n *\n * @param {string} ident\n * @return {string}\n */\nexport function escapeCssSelectorIdent(ident) {\n  return cssEscape(ident);\n}\n\n/**\n * Escapes an ident in a way that can be used by :nth-child() psuedo-class.\n *\n * See https://github.com/w3c/csswg-drafts/issues/2306.\n *\n * @param {string|number} ident\n * @return {string}\n */\nexport function escapeCssSelectorNth(ident) {\n  const escaped = String(ident);\n  // Ensure it doesn't close the nth-child psuedo class.\n  devAssert(escaped.indexOf(')') === -1);\n  return escaped;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Deferred} from './utils/promise';\nimport {\n  assertIsName,\n  isScopeSelectorSupported,\n  prependSelectorsWith,\n} from './css';\nimport {dev, devAssert} from './log';\nimport {dict} from './utils/object';\nimport {includes, startsWith} from './string';\nimport {toWin} from './types';\n\nconst HTML_ESCAPE_CHARS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;',\n};\nconst HTML_ESCAPE_REGEX = /(&|<|>|\"|'|`)/g;\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_PROMISE = '__AMP_UPG_PRM';\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_RESOLVER = '__AMP_UPG_RES';\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * callback is executed.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @param {function()} callback\n */\nexport function waitForChild(parent, checkFunc, callback) {\n  if (checkFunc(parent)) {\n    callback();\n    return;\n  }\n  /** @const {!Window} */\n  const win = toWin(parent.ownerDocument.defaultView);\n  if (win.MutationObserver) {\n    /** @const {MutationObserver} */\n    const observer = new win.MutationObserver(() => {\n      if (checkFunc(parent)) {\n        observer.disconnect();\n        callback();\n      }\n    });\n    observer.observe(parent, {childList: true});\n  } else {\n    /** @const {number} */\n    const interval = win.setInterval(() => {\n      if (checkFunc(parent)) {\n        win.clearInterval(interval);\n        callback();\n      }\n    }, /* milliseconds */ 5);\n  }\n}\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * promise is resolved.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @return {!Promise}\n */\nexport function waitForChildPromise(parent, checkFunc) {\n  return new Promise(resolve => {\n    waitForChild(parent, checkFunc, resolve);\n  });\n}\n\n/**\n * Waits for document's body to be available and ready.\n * @param {!Document} doc\n * @param {function()} callback\n */\nexport function waitForBodyOpen(doc, callback) {\n  waitForChild(doc.documentElement, () => !!doc.body, callback);\n}\n\n/**\n * Waits for document's body to be available.\n * @param {!Document} doc\n * @return {!Promise}\n */\nexport function waitForBodyOpenPromise(doc) {\n  return new Promise(resolve => waitForBodyOpen(doc, resolve));\n}\n\n/**\n * Removes the element.\n * @param {!Element} element\n */\nexport function removeElement(element) {\n  if (element.parentElement) {\n    element.parentElement.removeChild(element);\n  }\n}\n\n/**\n * Removes all child nodes of the specified element.\n * @param {!Element} parent\n */\nexport function removeChildren(parent) {\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n}\n\n/**\n * Copies all children nodes of element \"from\" to element \"to\". Child nodes\n * are deeply cloned. Notice, that this method should be used with care and\n * preferably on smaller subtrees.\n * @param {!Element} from\n * @param {!Element|!DocumentFragment} to\n */\nexport function copyChildren(from, to) {\n  const frag = to.ownerDocument.createDocumentFragment();\n  for (let n = from.firstChild; n; n = n.nextSibling) {\n    frag.appendChild(n.cloneNode(true));\n  }\n  to.appendChild(frag);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n * @param {?Node} after\n */\nexport function insertAfterOrAtStart(root, element, after) {\n  const before = after ? after.nextSibling : root.firstChild;\n  root.insertBefore(element, before);\n}\n\n/**\n * Add attributes to an element.\n * @param {!Element} element\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function addAttributesToElement(element, attributes) {\n  for (const attr in attributes) {\n    element.setAttribute(attr, attributes[attr]);\n  }\n  return element;\n}\n\n/**\n * Create a new element on document with specified tagName and attributes.\n * @param {!Document} doc\n * @param {string} tagName\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function createElementWithAttributes(doc, tagName, attributes) {\n  const element = doc.createElement(tagName);\n  return addAttributesToElement(element, attributes);\n}\n\n/**\n * Returns true if node is connected (attached).\n * @param {!Node} node\n * @return {boolean}\n * @see https://dom.spec.whatwg.org/#connected\n */\nexport function isConnectedNode(node) {\n  const connected = node.isConnected;\n  if (connected !== undefined) {\n    return connected;\n  }\n\n  // \"An element is connected if its shadow-including root is a document.\"\n  let n = node;\n  do {\n    n = rootNodeFor(n);\n    if (n.host) {\n      n = n.host;\n    } else {\n      break;\n    }\n  } while (true);\n  return n.nodeType === Node.DOCUMENT_NODE;\n}\n\n/**\n * Returns the root for a given node. Does not cross shadow DOM boundary.\n * @param {!Node} node\n * @return {!Node}\n */\nexport function rootNodeFor(node) {\n  if (Node.prototype.getRootNode) {\n    // Type checker says `getRootNode` may return null.\n    return node.getRootNode() || node;\n  }\n  let n;\n  // Check isShadowRoot() is only needed for the polyfill case.\n  for (n = node; !!n.parentNode && !isShadowRoot(n); n = n.parentNode) {}\n  return n;\n}\n\n/**\n * Determines if value is actually a `ShadowRoot` node.\n * @param {*} value\n * @return {boolean}\n */\nexport function isShadowRoot(value) {\n  // TODO(#22733): remove in preference to dom's `rootNodeFor`.\n  if (!value) {\n    return false;\n  }\n  // Node.nodeType == DOCUMENT_FRAGMENT to speed up the tests. Unfortunately,\n  // nodeType of DOCUMENT_FRAGMENT is used currently for ShadowRoot nodes.\n  if (value.tagName == 'I-AMPHTML-SHADOW-ROOT') {\n    return true;\n  }\n  return (\n    value.nodeType == /* DOCUMENT_FRAGMENT */ 11 &&\n    Object.prototype.toString.call(value) === '[object ShadowRoot]'\n  );\n}\n\n/**\n * Finds the closest element that satisfies the callback from this element\n * up the DOM subtree.\n * @param {!Element} element\n * @param {function(!Element):boolean} callback\n * @param {Element=} opt_stopAt optional elemnt to stop the search at.\n * @return {?Element}\n */\nexport function closest(element, callback, opt_stopAt) {\n  for (let el = element; el && el !== opt_stopAt; el = el.parentElement) {\n    if (callback(el)) {\n      return el;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest node that satisfies the callback from this node\n * up the DOM subtree.\n * @param {!Node} node\n * @param {function(!Node):boolean} callback\n * @return {?Node}\n */\nexport function closestNode(node, callback) {\n  for (let n = node; n; n = n.parentNode) {\n    if (callback(n)) {\n      return n;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest ancestor element with the specified selector from this\n * element.\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element} closest ancestor if found.\n */\nexport function closestAncestorElementBySelector(element, selector) {\n  if (element.closest) {\n    return element.closest(selector);\n  }\n\n  return closest(element, el => {\n    return matches(el, selector);\n  });\n}\n\n/**\n * Finds all ancestor elements that satisfy predicate.\n * @param {!Element} child\n * @param {function(!Element):boolean} predicate\n * @return {!Array<!Element>}\n */\nexport function ancestorElements(child, predicate) {\n  const ancestors = [];\n  for (\n    let ancestor = child.parentElement;\n    ancestor;\n    ancestor = ancestor.parentElement\n  ) {\n    if (predicate(ancestor)) {\n      ancestors.push(ancestor);\n    }\n  }\n  return ancestors;\n}\n\n/**\n * Finds all ancestor elements that has the specified tag name.\n * @param {!Element} child\n * @param {string} tagName\n * @return {!Array<!Element>}\n */\nexport function ancestorElementsByTag(child, tagName) {\n  assertIsName(tagName);\n  tagName = tagName.toUpperCase();\n  return ancestorElements(child, el => {\n    return el.tagName == tagName;\n  });\n}\n\n/**\n * Finds the first child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function childElement(parent, callback) {\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds all child elements that satisfy the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {!Array<!Element>}\n */\nexport function childElements(parent, callback) {\n  const children = [];\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      children.push(child);\n    }\n  }\n  return children;\n}\n\n/**\n * Finds the last child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function lastChildElement(parent, callback) {\n  for (\n    let child = parent.lastElementChild;\n    child;\n    child = child.previousElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds all child nodes that satisfy the callback.\n * These nodes can include Text, Comment and other child nodes.\n * @param {!Node} parent\n * @param {function(!Node):boolean} callback\n * @return {!Array<!Node>}\n */\nexport function childNodes(parent, callback) {\n  const nodes = [];\n  for (let child = parent.firstChild; child; child = child.nextSibling) {\n    if (callback(child)) {\n      nodes.push(child);\n    }\n  }\n  return nodes;\n}\n\n/**\n * Finds the first child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function childElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelector(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the last child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function lastChildElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return lastChildElement(parent, el => {\n    return el.hasAttribute(attr);\n  });\n}\n\n/**\n * Finds all child elements that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the first child element that has the specified tag name.\n * @param {!Element} parent\n * @param {string} tagName\n * @return {?Element}\n */\nexport function childElementByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelector(parent, `> ${tagName}`);\n}\n\n/**\n * Finds all child elements with the specified tag name.\n * @param {!Element} parent\n * @param {string} tagName\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> ${tagName}`);\n}\n\n/**\n * Checks if the given element matches the selector\n * @param  {!Element} el The element to verify\n * @param  {string} selector The selector to check against\n * @return {boolean} True if the element matched the selector. False otherwise.\n */\nexport function matches(el, selector) {\n  const matcher =\n    el.matches ||\n    el.webkitMatchesSelector ||\n    el.mozMatchesSelector ||\n    el.msMatchesSelector ||\n    el.oMatchesSelector;\n  if (matcher) {\n    return matcher.call(el, selector);\n  }\n  return false; // IE8 always returns false.\n}\n\n/**\n * Finds the first descendant element with the specified name.\n * @param {!Element|!Document|!ShadowRoot} element\n * @param {string} tagName\n * @return {?Element}\n */\nexport function elementByTag(element, tagName) {\n  assertIsName(tagName);\n  return element./*OK*/ querySelector(tagName);\n}\n\n/**\n * Finds all elements that matche `selector`, scoped inside `root`\n * for user-agents that do not support native scoping.\n *\n * This method isn't required for modern builds, can be removed.\n *\n * @param {!Element} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\nfunction scopedQuerySelectionFallback(root, selector) {\n  const unique = 'i-amphtml-scoped';\n  root.classList.add(unique);\n  const scopedSelector = prependSelectorsWith(selector, `.${unique}`);\n  const elements = root./*OK*/ querySelectorAll(scopedSelector);\n  root.classList.remove(unique);\n  return elements;\n}\n\n/**\n * Finds the first element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element} root\n * @param {string} selector\n * @return {?Element}\n */\nexport function scopedQuerySelector(root, selector) {\n  if (isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelector(prependSelectorsWith(selector, ':scope'));\n  }\n\n  // Only IE.\n  const fallbackResult = scopedQuerySelectionFallback(root, selector);\n  return fallbackResult[0] === undefined ? null : fallbackResult[0];\n}\n\n/**\n * Finds every element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\nexport function scopedQuerySelectorAll(root, selector) {\n  if (isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelectorAll(\n      prependSelectorsWith(selector, ':scope')\n    );\n  }\n\n  // Only IE.\n  return scopedQuerySelectionFallback(root, selector);\n}\n\n/**\n * Returns element data-param- attributes as url parameters key-value pairs.\n * e.g. data-param-some-attr=value -> {someAttr: value}.\n * @param {!Element} element\n * @param {function(string):string=} opt_computeParamNameFunc to compute the\n *    parameter name, get passed the camel-case parameter name.\n * @param {!RegExp=} opt_paramPattern Regex pattern to match data attributes.\n * @return {!JsonObject}\n */\nexport function getDataParamsFromAttributes(\n  element,\n  opt_computeParamNameFunc,\n  opt_paramPattern\n) {\n  const computeParamNameFunc = opt_computeParamNameFunc || (key => key);\n  const {dataset} = element;\n  const params = dict();\n  const paramPattern = opt_paramPattern ? opt_paramPattern : /^param(.+)/;\n  for (const key in dataset) {\n    const matches = key.match(paramPattern);\n    if (matches) {\n      const param = matches[1][0].toLowerCase() + matches[1].substr(1);\n      params[computeParamNameFunc(param)] = dataset[key];\n    }\n  }\n  return params;\n}\n\n/**\n * Whether the element have a next node in the document order.\n * This means either:\n *  a. The element itself has a nextSibling.\n *  b. Any of the element ancestors has a nextSibling.\n * @param {!Element} element\n * @param {?Node} opt_stopNode\n * @return {boolean}\n */\nexport function hasNextNodeInDocumentOrder(element, opt_stopNode) {\n  let currentElement = element;\n  do {\n    if (currentElement.nextSibling) {\n      return true;\n    }\n  } while (\n    (currentElement = currentElement.parentNode) &&\n    currentElement != opt_stopNode\n  );\n  return false;\n}\n\n/**\n * Returns a clone of the content of a template element.\n *\n * Polyfill to replace .content access for browsers that do not support\n * HTMLTemplateElements natively.\n *\n * @param {!HTMLTemplateElement|!Element} template\n * @return {!DocumentFragment}\n */\nexport function templateContentClone(template) {\n  if ('content' in template) {\n    return template.content.cloneNode(true);\n  } else {\n    const content = template.ownerDocument.createDocumentFragment();\n    copyChildren(template, content);\n    return content;\n  }\n}\n\n/**\n * Iterate over an array-like.\n * Test cases: https://jsbench.github.io/#f638cacc866a1b2d6e517e6cfa900d6b\n * @param {!IArrayLike<T>} iterable\n * @param {function(T, number)} cb\n * @template T\n */\nexport function iterateCursor(iterable, cb) {\n  const {length} = iterable;\n  for (let i = 0; i < length; i++) {\n    cb(iterable[i], i);\n  }\n}\n\n/**\n * This method wraps around window's open method. It first tries to execute\n * `open` call with the provided target and if it fails, it retries the call\n * with the `_top` target. This is necessary given that in some embedding\n * scenarios, such as iOS' WKWebView, navigation to `_blank` and other targets\n * is blocked by default.\n *\n * @param {!Window} win\n * @param {string} url\n * @param {string} target\n * @param {string=} opt_features\n * @return {?Window}\n */\nexport function openWindowDialog(win, url, target, opt_features) {\n  // Try first with the specified target. If we're inside the WKWebView or\n  // a similar environments, this method is expected to fail by default for\n  // all targets except `_top`.\n  let res;\n  try {\n    res = win.open(url, target, opt_features);\n  } catch (e) {\n    dev().error('DOM', 'Failed to open url on target: ', target, e);\n  }\n\n  // Then try with `_top` target.\n  if (!res && target != '_top' && !includes(opt_features || '', 'noopener')) {\n    res = win.open(url, '_top');\n  }\n  return res;\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.hasAttribute('type') &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/JSON'\n  );\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonLdScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/LD+JSON'\n  );\n}\n\n/**\n * Whether the page's direction is right to left or not.\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isRTL(doc) {\n  const dir =\n    doc.body.getAttribute('dir') ||\n    doc.documentElement.getAttribute('dir') ||\n    'ltr';\n  return dir == 'rtl';\n}\n\n/**\n * Escapes `<`, `>` and other HTML charcaters with their escaped forms.\n * @param {string} text\n * @return {string}\n */\nexport function escapeHtml(text) {\n  if (!text) {\n    return text;\n  }\n  return text.replace(HTML_ESCAPE_REGEX, escapeHtmlChar);\n}\n\n/**\n * @param {string} c\n * @return {string}\n */\nfunction escapeHtmlChar(c) {\n  return HTML_ESCAPE_CHARS[c];\n}\n\n/**\n * Tries to focus on the given element; fails silently if browser throws an\n * exception.\n * @param {!Element} element\n */\nexport function tryFocus(element) {\n  try {\n    element./*OK*/ focus();\n  } catch (e) {\n    // IE <= 7 may throw exceptions when focusing on hidden items.\n  }\n}\n\n/**\n * Whether the given window is in an iframe or not.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isIframed(win) {\n  return win.parent && win.parent != win;\n}\n\n/**\n * Determines if this element is an AMP element\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isAmpElement(element) {\n  const tag = element.tagName;\n  // Use prefix to recognize AMP element. This is necessary because stub\n  // may not be attached yet.\n  return (\n    startsWith(tag, 'AMP-') &&\n    // Some \"amp-*\" elements are not really AMP elements. :smh:\n    !(tag == 'AMP-STICKY-AD-TOP-PADDING' || tag == 'AMP-BODY')\n  );\n}\n\n/**\n * Return a promise that resolve when an AMP element upgrade from HTMLElement\n * to CustomElement\n * @param {!Element} element\n * @return {!Promise<!Element>}\n */\nexport function whenUpgradedToCustomElement(element) {\n  devAssert(isAmpElement(element), 'element is not AmpElement');\n  if (element.createdCallback) {\n    // Element already is CustomElement;\n    return Promise.resolve(element);\n  }\n  // If Element is still HTMLElement, wait for it to upgrade to customElement\n  // Note: use pure string to avoid obfuscation between versions.\n  if (!element[UPGRADE_TO_CUSTOMELEMENT_PROMISE]) {\n    const deferred = new Deferred();\n    element[UPGRADE_TO_CUSTOMELEMENT_PROMISE] = deferred.promise;\n    element[UPGRADE_TO_CUSTOMELEMENT_RESOLVER] = deferred.resolve;\n  }\n\n  return element[UPGRADE_TO_CUSTOMELEMENT_PROMISE];\n}\n\n/**\n * Replacement for `Element.requestFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen\n * @param {!Element} element\n */\nexport function fullscreenEnter(element) {\n  const requestFs =\n    element.requestFullscreen ||\n    element.requestFullScreen ||\n    element.webkitRequestFullscreen ||\n    element.webkitEnterFullscreen ||\n    element.msRequestFullscreen ||\n    element.mozRequestFullScreen;\n  if (requestFs) {\n    requestFs.call(element);\n  }\n}\n\n/**\n * Replacement for `Document.exitFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/exitFullscreen\n * @param {!Element} element\n */\nexport function fullscreenExit(element) {\n  const elementBoundExit =\n    element.cancelFullScreen ||\n    element.exitFullscreen ||\n    element.webkitExitFullscreen ||\n    element.webkitCancelFullScreen ||\n    element.mozCancelFullScreen ||\n    element.msExitFullscreen;\n  if (elementBoundExit) {\n    elementBoundExit.call(element);\n    return;\n  }\n  const {ownerDocument} = element;\n  if (!ownerDocument) {\n    return;\n  }\n  const docBoundExit =\n    ownerDocument.cancelFullScreen ||\n    ownerDocument.exitFullscreencancelFullScreen ||\n    ownerDocument.webkitExitFullscreencancelFullScreen ||\n    ownerDocument.webkitCancelFullScreencancelFullScreen ||\n    ownerDocument.mozCancelFullScreencancelFullScreen ||\n    ownerDocument.msExitFullscreen;\n  if (docBoundExit) {\n    docBoundExit.call(ownerDocument);\n  }\n}\n\n/**\n * Replacement for `Document.fullscreenElement`.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/fullscreenElement\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isFullscreenElement(element) {\n  const {webkitDisplayingFullscreen} = element;\n  if (webkitDisplayingFullscreen !== undefined) {\n    return webkitDisplayingFullscreen;\n  }\n  const {ownerDocument} = element;\n  if (!ownerDocument) {\n    return false;\n  }\n  const fullscreenElement =\n    ownerDocument.fullscreenElement ||\n    ownerDocument.webkitFullscreenElement ||\n    ownerDocument.mozFullScreenElement ||\n    ownerDocument.webkitCurrentFullScreenElement;\n  return fullscreenElement == element;\n}\n\n/**\n * Returns true if node is not disabled.\n *\n * IE8 can return false positives, see {@link matches}.\n * @param {!Element} element\n * @return {boolean}\n * @see https://www.w3.org/TR/html5/forms.html#concept-fe-disabled\n */\nexport function isEnabled(element) {\n  return !(element.disabled || matches(element, ':disabled'));\n}\n\n/**\n * A sorting comparator that sorts elements in DOM tree order.\n * A first sibling is sorted to be before its nextSibling.\n * A parent node is sorted to be before a child.\n * See https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n *\n * @param {!Element} element1\n * @param {!Element} element2\n * @return {number}\n */\nexport function domOrderComparator(element1, element2) {\n  if (element1 === element2) {\n    return 0;\n  }\n\n  const pos = element1.compareDocumentPosition(element2);\n  const precedingOrContains =\n    Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS;\n\n  // if fe2 is preceding or contains fe1 then, fe1 is after fe2\n  if (pos & precedingOrContains) {\n    return 1;\n  }\n\n  // if fe2 is following or contained by fe1, then fe1 is before fe2\n  return -1;\n}\n\n/**\n * Like `Element.prototype.toggleAttribute`. This either toggles an attribute\n * on by adding an attribute with an empty value, or toggles it off by removing\n * the attribute. This does not mutate the element if the new state matches\n * the existing state.\n * @param {!Element} element An element to toggle the attribute for.\n * @param {string} name The name of the attribute.\n * @param {boolean=} forced Whether the attribute should be forced on/off. If\n *    not specified, it will be toggled from the current state.\n * @return {boolean} Whether or not the element now has the attribute.\n */\nexport function toggleAttribute(element, name, forced) {\n  const hasAttribute = element.hasAttribute(name);\n  const enabled = forced !== undefined ? forced : !hasAttribute;\n\n  if (enabled !== hasAttribute) {\n    if (enabled) {\n      element.setAttribute(name, '');\n    } else {\n      element.removeAttribute(name);\n    }\n  }\n\n  return enabled;\n}\n\n/**\n * @param {!Window} win\n * @return {number} The width of the vertical scrollbar, in pixels.\n */\nexport function getVerticalScrollbarWidth(win) {\n  const {documentElement} = win.document;\n  const windowWidth = win./*OK*/ innerWidth;\n  const documentWidth = documentElement./*OK*/ clientWidth;\n  return windowWidth - documentWidth;\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as dom from './dom';\nimport {\n  getAmpdoc,\n  getExistingServiceForDocInEmbedScope,\n  getService,\n  getServicePromise,\n  getServicePromiseForDoc,\n  getServicePromiseOrNull,\n  getServicePromiseOrNullForDoc,\n  getTopWindow,\n} from './service';\nimport {toWin} from './types';\nimport {userAssert} from './log';\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nexport function getElementService(win, id, extension, opt_element) {\n  return getElementServiceIfAvailable(win, id, extension, opt_element).then(\n    service => assertService(service, id, extension)\n  );\n}\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailable(win, id, extension, opt_element) {\n  const s = getServicePromiseOrNull(win, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  return getElementServicePromiseOrNull(win, id, extension, opt_element);\n}\n\n/**\n * @param {!Window} win\n * @param {string} elementName Name of an extended custom element.\n * @return {boolean} Whether this element is scheduled to be loaded.\n */\nfunction isElementScheduled(win, elementName) {\n  // Set in custom-element.js\n  if (!win.__AMP_EXTENDED_ELEMENTS) {\n    return false;\n  }\n  return !!win.__AMP_EXTENDED_ELEMENTS[elementName];\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nexport function getElementServiceForDoc(element, id, extension, opt_element) {\n  return getElementServiceIfAvailableForDoc(\n    element,\n    id,\n    extension,\n    opt_element\n  ).then(service => assertService(service, id, extension));\n}\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDoc(\n  element,\n  id,\n  extension,\n  opt_element\n) {\n  const s = getServicePromiseOrNullForDoc(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  const ampdoc = getAmpdoc(element);\n  return ampdoc\n    .waitForBodyOpen()\n    .then(() =>\n      waitForExtensionIfPresent(ampdoc.win, extension, ampdoc.win.document.head)\n    )\n    .then(() => {\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNullForDoc(element, id);\n      } else if (isElementScheduled(ampdoc.win, extension)) {\n        return getServicePromiseForDoc(element, id);\n      }\n      return null;\n    });\n}\n\n/**\n * Returns a promise for service for the given id in the embed scope of\n * a given element, if it exists. Falls back to ampdoc scope if the element\n * is not embedded.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom element that provides\n *     the implementation of this service.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDocInEmbedScope(\n  element,\n  id,\n  extension\n) {\n  const s = getExistingServiceForDocInEmbedScope(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (Promise.resolve(s));\n  }\n  const win = toWin(element.ownerDocument.defaultView);\n  const topWin = getTopWindow(win);\n  // In embeds, doc services are stored on the embed window.\n  if (win !== topWin) {\n    return getElementServicePromiseOrNull(win, id, extension);\n  } else {\n    // Only fallback to element's ampdoc (top-level) if not embedded.\n    return getElementServiceIfAvailableForDoc(element, id, extension);\n  }\n}\n\n/**\n * Throws user error if `service` is null.\n * @param {Object} service\n * @param {string} id\n * @param {string} extension\n * @return {!Object}\n * @private\n * @closurePrimitive {asserts.matchesReturn}\n */\nfunction assertService(service, id, extension) {\n  return /** @type {!Object} */ (userAssert(\n    service,\n    'Service %s was requested to be provided through %s, ' +\n      'but %s is not loaded in the current page. To fix this ' +\n      'problem load the JavaScript file for %s in this page.',\n    id,\n    extension,\n    extension,\n    extension\n  ));\n}\n\n/**\n * Get list of all the extension JS files.\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @return {!Array<string>}\n */\nexport function extensionScriptsInNode(head) {\n  // ampdoc.getHeadNode() can return null.\n  if (!head) {\n    return [];\n  }\n  const scripts = {};\n  // Note: Some extensions don't have [custom-element] or [custom-template]\n  // e.g. amp-viewer-integration.\n  const list = head.querySelectorAll(\n    'script[custom-element],script[custom-template]'\n  );\n  for (let i = 0; i < list.length; i++) {\n    const script = list[i];\n    const name =\n      script.getAttribute('custom-element') ||\n      script.getAttribute('custom-template');\n    scripts[name] = true;\n  }\n  return Object.keys(scripts);\n}\n\n/**\n * Waits for body to be present then verifies that an extension script is\n * present in head for installation.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} extensionId\n * @return {!Promise<boolean>}\n */\nexport function isExtensionScriptInNode(ampdoc, extensionId) {\n  return ampdoc.waitForBodyOpen().then(() => {\n    return extensionScriptInNode(ampdoc.getHeadNode(), extensionId);\n  });\n}\n\n/**\n * Verifies that an extension script is present in head for\n * installation.\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @param {string} extensionId\n * @return {boolean}\n * @private\n */\nfunction extensionScriptInNode(head, extensionId) {\n  return extensionScriptsInNode(head).includes(extensionId);\n}\n\n/**\n * Waits for an extension if its script is present\n * @param {!Window} win\n * @param {string} extension\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @return {!Promise}\n * @private\n */\nfunction waitForExtensionIfPresent(win, extension, head) {\n  /**\n   * If there is an extension script wait for it to load before trying\n   * to get the service. Prevents a race condition when everything but\n   * the extensions is in cache. If there is no script then it's either\n   * not present, or the service was defined by a test. In those cases\n   * we don't wait around for an extension that does not exist.\n   */\n\n  // TODO(jpettitt) investigate registerExtension to short circuit\n  // the dom call in extensionScriptsInNode()\n  if (!extensionScriptInNode(head, extension)) {\n    return Promise.resolve();\n  }\n\n  const extensions = getService(win, 'extensions');\n  return /** @type {!Promise<?Object>} */ (extensions.waitForExtension(\n    win,\n    extension\n  ));\n}\n\n/**\n * Returns the promise for service with `id` on the given window if available.\n * Otherwise, resolves with null (service was not registered).\n * @param {!Window} win\n * @param {string} id\n * @param {string} extension\n * @param {boolean=} opt_element\n * @return {!Promise<Object>}\n * @private\n */\nfunction getElementServicePromiseOrNull(win, id, extension, opt_element) {\n  return dom\n    .waitForBodyOpenPromise(win.document)\n    .then(() => waitForExtensionIfPresent(win, extension, win.document.head))\n    .then(() => {\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNull(win, id);\n      } else if (isElementScheduled(win, extension)) {\n        return getServicePromise(win, id);\n      }\n      return null;\n    });\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AmpEvents} from './amp-events';\nimport {Services} from './services';\nimport {\n  USER_ERROR_SENTINEL,\n  dev,\n  duplicateErrorIfNecessary,\n  isUserErrorEmbed,\n  isUserErrorMessage,\n} from './log';\nimport {dict} from './utils/object';\nimport {experimentTogglesOrNull, getBinaryType, isCanary} from './experiments';\nimport {exponentialBackoff} from './exponential-backoff';\nimport {getMode} from './mode';\nimport {isLoadErrorMessage} from './event-helper';\nimport {isProxyOrigin} from './url';\nimport {makeBodyVisibleRecovery} from './style-installer';\nimport {startsWith} from './string';\nimport {triggerAnalyticsEvent} from './analytics';\nimport {urls} from './config';\n\n/**\n * @const {string}\n */\nconst CANCELLED = 'CANCELLED';\n\n/**\n * @const {string}\n */\nconst BLOCK_BY_CONSENT = 'BLOCK_BY_CONSENT';\n\n/**\n * @const {string}\n */\nconst ABORTED = 'AbortError';\n\n/**\n * The threshold for errors throttled because nothing can be done about\n * them, but we'd still like to report the rough number.\n * @const {number}\n */\nconst NON_ACTIONABLE_ERROR_THROTTLE_THRESHOLD = 0.001;\n\n/**\n * The threshold for errors throttled because nothing can be done about\n * them, but we'd still like to report the rough number.\n * @const {number}\n */\nconst USER_ERROR_THROTTLE_THRESHOLD = 0.1;\n\n/**\n * Collects error messages, so they can be included in subsequent reports.\n * That allows identifying errors that might be caused by previous errors.\n */\nlet accumulatedErrorMessages = self.__AMP_ERRORS || [];\n// Use a true global, to avoid multi-module inclusion issues.\nself.__AMP_ERRORS = accumulatedErrorMessages;\n\n/**\n * Pushes element into array, keeping at most the most recent limit elements\n *\n * @param {!Array<T>} array\n * @param {T} element\n * @param {number} limit\n * @template T\n */\nfunction pushLimit(array, element, limit) {\n  if (array.length >= limit) {\n    array.splice(0, array.length - limit + 1);\n  }\n  array.push(element);\n}\n\n/**\n * A wrapper around our exponentialBackoff, to lazy initialize it to avoid an\n * un-DCE'able side-effect.\n * @param {function()} work the function to execute after backoff\n * @return {number} the setTimeout id\n */\nlet reportingBackoff = function(work) {\n  // Set reportingBackoff as the lazy-created function. JS Vooodoooo.\n  reportingBackoff = exponentialBackoff(1.5);\n  return reportingBackoff(work);\n};\n\n/**\n * Attempts to stringify a value, falling back to String.\n * @param {*} value\n * @return {string}\n */\nfunction tryJsonStringify(value) {\n  try {\n    // Cast is fine, because we really don't care here. Just trying.\n    return JSON.stringify(/** @type {!JsonObject} */ (value));\n  } catch (e) {\n    return String(value);\n  }\n}\n\n/**\n * The true JS engine, as detected by inspecting an Error stack. This should be\n * used with the userAgent to tell definitely. I.e., Chrome on iOS is really a\n * Safari JS engine.\n */\nlet detectedJsEngine;\n\n/**\n * @param {!Window} win\n * @param {*} error\n * @param {!Element=} opt_associatedElement\n */\nexport function reportErrorForWin(win, error, opt_associatedElement) {\n  reportError(error, opt_associatedElement);\n  if (\n    error &&\n    !!win &&\n    isUserErrorMessage(error.message) &&\n    !isUserErrorEmbed(error.message)\n  ) {\n    reportErrorToAnalytics(/** @type {!Error} */ (error), win);\n  }\n}\n\n/**\n * Reports an error. If the error has an \"associatedElement\" property\n * the element is marked with the `i-amphtml-element-error` and displays\n * the message itself. The message is always send to the console.\n * If the error has a \"messageArray\" property, that array is logged.\n * This way one gets the native fidelity of the console for things like\n * elements instead of stringification.\n * @param {*} error\n * @param {!Element=} opt_associatedElement\n * @return {!Error}\n */\nexport function reportError(error, opt_associatedElement) {\n  try {\n    // Convert error to the expected type.\n    let isValidError;\n    if (error) {\n      if (error.message !== undefined) {\n        error = duplicateErrorIfNecessary(/** @type {!Error} */ (error));\n        isValidError = true;\n      } else {\n        const origError = error;\n        error = new Error(tryJsonStringify(origError));\n        error.origError = origError;\n      }\n    } else {\n      error = new Error('Unknown error');\n    }\n    // Report if error is not an expected type.\n    if (!isValidError && getMode().localDev && !getMode().test) {\n      setTimeout(function() {\n        const rethrow = new Error(\n          '_reported_ Error reported incorrectly: ' + error\n        );\n        throw rethrow;\n      });\n    }\n\n    if (error.reported) {\n      return /** @type {!Error} */ (error);\n    }\n    error.reported = true;\n\n    // Update element.\n    const element = opt_associatedElement || error.associatedElement;\n    if (element && element.classList) {\n      element.classList.add('i-amphtml-error');\n      if (getMode().development) {\n        element.classList.add('i-amphtml-element-error');\n        element.setAttribute('error-message', error.message);\n      }\n    }\n\n    // Report to console.\n    if (self.console) {\n      const output = console.error || console.log;\n      if (error.messageArray) {\n        output.apply(console, error.messageArray);\n      } else {\n        if (element) {\n          output.call(console, error.message, element);\n        } else if (!getMode().minified) {\n          output.call(console, error.stack);\n        } else {\n          output.call(console, error.message);\n        }\n      }\n    }\n    if (element && element.dispatchCustomEventForTesting) {\n      element.dispatchCustomEventForTesting(AmpEvents.ERROR, error.message);\n    }\n\n    // 'call' to make linter happy. And .call to make compiler happy\n    // that expects some @this.\n    onError['call'](\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      error\n    );\n  } catch (errorReportingError) {\n    setTimeout(function() {\n      throw errorReportingError;\n    });\n  }\n  return /** @type {!Error} */ (error);\n}\n\n/**\n * Returns an error for a cancellation of a promise.\n * @return {!Error}\n */\nexport function cancellation() {\n  return new Error(CANCELLED);\n}\n\n/**\n * @param {*} errorOrMessage\n * @return {boolean}\n */\nexport function isCancellation(errorOrMessage) {\n  if (!errorOrMessage) {\n    return false;\n  }\n  if (typeof errorOrMessage == 'string') {\n    return startsWith(errorOrMessage, CANCELLED);\n  }\n  if (typeof errorOrMessage.message == 'string') {\n    return startsWith(errorOrMessage.message, CANCELLED);\n  }\n  return false;\n}\n\n/**\n * Returns an error for component blocked by consent\n * @return {!Error}\n */\nexport function blockedByConsentError() {\n  return new Error(BLOCK_BY_CONSENT);\n}\n\n/**\n * @param {*} errorOrMessage\n * @return {boolean}\n */\nexport function isBlockedByConsent(errorOrMessage) {\n  if (!errorOrMessage) {\n    return false;\n  }\n  if (typeof errorOrMessage == 'string') {\n    return startsWith(errorOrMessage, BLOCK_BY_CONSENT);\n  }\n  if (typeof errorOrMessage.message == 'string') {\n    return startsWith(errorOrMessage.message, BLOCK_BY_CONSENT);\n  }\n  return false;\n}\n\n/**\n * Install handling of global unhandled exceptions.\n * @param {!Window} win\n */\nexport function installErrorReporting(win) {\n  win.onerror = /** @type {!Function} */ (onError);\n  win.addEventListener('unhandledrejection', event => {\n    if (\n      event.reason &&\n      (event.reason.message === CANCELLED ||\n        event.reason.message === BLOCK_BY_CONSENT ||\n        event.reason.message === ABORTED)\n    ) {\n      event.preventDefault();\n      return;\n    }\n    reportError(event.reason || new Error('rejected promise ' + event));\n  });\n}\n\n/**\n * Signature designed, so it can work with window.onerror\n * @param {string|undefined} message\n * @param {string|undefined} filename\n * @param {string|undefined} line\n * @param {string|undefined} col\n * @param {*|undefined} error\n * @this {!Window|undefined}\n */\nfunction onError(message, filename, line, col, error) {\n  // Make an attempt to unhide the body.\n  if (this && this.document) {\n    makeBodyVisibleRecovery(this.document);\n  }\n  if (getMode().localDev || getMode().development || getMode().test) {\n    return;\n  }\n  let hasNonAmpJs = false;\n  try {\n    hasNonAmpJs = detectNonAmpJs(self);\n  } catch (ignore) {\n    // Ignore errors during error report generation.\n  }\n  if (hasNonAmpJs && Math.random() > 0.01) {\n    // Only report 1% of errors on pages with non-AMP JS.\n    // These errors can almost never be acted upon, but spikes such as\n    // due to buggy browser extensions may be helpful to notify authors.\n    return;\n  }\n  const data = getErrorReportData(\n    message,\n    filename,\n    line,\n    col,\n    error,\n    hasNonAmpJs\n  );\n  if (data) {\n    reportingBackoff(() => {\n      try {\n        return reportErrorToServerOrViewer(\n          this,\n          /** @type {!JsonObject} */ (data)\n        ).catch(() => {\n          // catch async errors to avoid recursive errors.\n        });\n      } catch (e) {\n        // catch async errors to avoid recursive errors.\n      }\n    });\n  }\n}\n\n/**\n * Passes the given error data to either server or viewer.\n * @param {!Window} win\n * @param {!JsonObject} data Data from `getErrorReportData`.\n * @return {Promise<undefined>}\n */\nexport function reportErrorToServerOrViewer(win, data) {\n  // Report the error to viewer if it has the capability. The data passed\n  // to the viewer is exactly the same as the data passed to the server\n  // below.\n  return maybeReportErrorToViewer(win, data).then(reportedErrorToViewer => {\n    if (!reportedErrorToViewer) {\n      const xhr = new XMLHttpRequest();\n      xhr.open('POST', urls.errorReporting, true);\n      xhr.send(JSON.stringify(data));\n    }\n  });\n}\n\n/**\n * Passes the given error data to the viewer if the following criteria is met:\n * - The viewer is a trusted viewer\n * - The viewer has the `errorReporter` capability\n * - The AMP doc is in single doc mode\n * - The AMP doc is opted-in for error interception (`<html>` tag has the\n *   `report-errors-to-viewer` attribute)\n *\n * @param {!Window} win\n * @param {!JsonObject} data Data from `getErrorReportData`.\n * @return {!Promise<boolean>} `Promise<True>` if the error was sent to the\n *     viewer, `Promise<False>` otherwise.\n * @visibleForTesting\n */\nexport function maybeReportErrorToViewer(win, data) {\n  const ampdocService = Services.ampdocServiceFor(win);\n  if (!ampdocService.isSingleDoc()) {\n    return Promise.resolve(false);\n  }\n  const ampdocSingle = ampdocService.getSingleDoc();\n  const htmlElement = ampdocSingle.getRootNode().documentElement;\n  const docOptedIn = htmlElement.hasAttribute('report-errors-to-viewer');\n  if (!docOptedIn) {\n    return Promise.resolve(false);\n  }\n  const viewer = Services.viewerForDoc(ampdocSingle);\n  if (!viewer.hasCapability('errorReporter')) {\n    return Promise.resolve(false);\n  }\n  return viewer.isTrustedViewer().then(viewerTrusted => {\n    if (!viewerTrusted) {\n      return false;\n    }\n    viewer.sendMessage('error', errorReportingDataForViewer(data));\n    return true;\n  });\n}\n\n/**\n * Strips down the error reporting data to a minimal set\n * to be sent to the viewer.\n * @param {!JsonObject} errorReportData\n * @return {!JsonObject}\n * @visibleForTesting\n */\nexport function errorReportingDataForViewer(errorReportData) {\n  return dict({\n    'm': errorReportData['m'], // message\n    'a': errorReportData['a'], // isUserError\n    's': errorReportData['s'], // error stack\n    'el': errorReportData['el'], // tagName\n    'ex': errorReportData['ex'], // expected error?\n    'v': errorReportData['v'], // runtime\n    'jse': errorReportData['jse'], // detectedJsEngine\n  });\n}\n\n/**\n * @param {string|undefined}  message\n * @param {*|undefined} error\n * @return {string}\n */\nfunction buildErrorMessage_(message, error) {\n  if (error) {\n    if (error.message) {\n      message = error.message;\n    } else {\n      // This should never be a string, but sometimes it is.\n      message = String(error);\n    }\n  }\n  if (!message) {\n    message = 'Unknown error';\n  }\n\n  return message;\n}\n\n/**\n * Signature designed, so it can work with window.onerror\n * @param {string|undefined} message\n * @param {string|undefined} filename\n * @param {string|undefined} line\n * @param {string|undefined} col\n * @param {*|undefined} error\n * @param {boolean} hasNonAmpJs\n * @return {!JsonObject|undefined} The data to post\n * visibleForTesting\n */\nexport function getErrorReportData(\n  message,\n  filename,\n  line,\n  col,\n  error,\n  hasNonAmpJs\n) {\n  message = buildErrorMessage_(message, error);\n  // An \"expected\" error is still an error, i.e. some features are disabled\n  // or not functioning fully because of it. However, it's an expected\n  // error. E.g. as is the case with some browser API missing (storage).\n  // Thus, the error can be classified differently by log aggregators.\n  // The main goal is to monitor that an \"expected\" error doesn't deteriorate\n  // over time. It's impossible to completely eliminate it.\n  let expected = !!(error && error.expected);\n  if (/_reported_/.test(message)) {\n    return;\n  }\n  if (message == CANCELLED) {\n    return;\n  }\n\n  const detachedWindow = !(self && self.window);\n  const throttleBase = Math.random();\n\n  // We throttle load errors and generic \"Script error.\" errors\n  // that have no information and thus cannot be acted upon.\n  if (\n    isLoadErrorMessage(message) ||\n    // See https://github.com/ampproject/amphtml/issues/7353\n    // for context.\n    message == 'Script error.' ||\n    // Window has become detached, really anything can happen\n    // at this point.\n    detachedWindow\n  ) {\n    expected = true;\n\n    if (throttleBase > NON_ACTIONABLE_ERROR_THROTTLE_THRESHOLD) {\n      return;\n    }\n  }\n\n  const isUserError = isUserErrorMessage(message);\n\n  // Only report a subset of user errors.\n  if (isUserError && throttleBase > USER_ERROR_THROTTLE_THRESHOLD) {\n    return;\n  }\n\n  // This is the App Engine app in\n  // https://github.com/ampproject/error-tracker\n  // It stores error reports via https://cloud.google.com/error-reporting/\n  // for analyzing production issues.\n  const data = /** @type {!JsonObject} */ (Object.create(null));\n  data['v'] = getMode().rtvVersion;\n  data['noAmp'] = hasNonAmpJs ? '1' : '0';\n  data['m'] = message.replace(USER_ERROR_SENTINEL, '');\n  data['a'] = isUserError ? '1' : '0';\n\n  // Errors are tagged with \"ex\" (\"expected\") label to allow loggers to\n  // classify these errors as benchmarks and not exceptions.\n  data['ex'] = expected ? '1' : '0';\n  data['dw'] = detachedWindow ? '1' : '0';\n\n  let runtime = '1p';\n  if (self.context && self.context.location) {\n    data['3p'] = '1';\n    runtime = '3p';\n  } else if (getMode().runtime) {\n    runtime = getMode().runtime;\n  }\n\n  if (getMode().singlePassType) {\n    data['spt'] = getMode().singlePassType;\n  }\n\n  data['rt'] = runtime;\n\n  // Add our a4a id if we are inabox\n  if (runtime === 'inabox') {\n    data['adid'] = getMode().a4aId;\n  }\n\n  // TODO(erwinm): Remove ca when all systems read `bt` instead of `ca` to\n  // identify js binary type.\n  data['ca'] = isCanary(self) ? '1' : '0';\n\n  // Pass binary type.\n  data['bt'] = getBinaryType(self);\n\n  if (self.location.ancestorOrigins && self.location.ancestorOrigins[0]) {\n    data['or'] = self.location.ancestorOrigins[0];\n  }\n  if (self.viewerState) {\n    data['vs'] = self.viewerState;\n  }\n  // Is embedded?\n  if (self.parent && self.parent != self) {\n    data['iem'] = '1';\n  }\n\n  if (self.AMP && self.AMP.viewer) {\n    const resolvedViewerUrl = self.AMP.viewer.getResolvedViewerUrl();\n    const messagingOrigin = self.AMP.viewer.maybeGetMessagingOrigin();\n    if (resolvedViewerUrl) {\n      data['rvu'] = resolvedViewerUrl;\n    }\n    if (messagingOrigin) {\n      data['mso'] = messagingOrigin;\n    }\n  }\n\n  if (!detectedJsEngine) {\n    detectedJsEngine = detectJsEngineFromStack();\n  }\n  data['jse'] = detectedJsEngine;\n\n  const exps = [];\n  const experiments = experimentTogglesOrNull(self);\n  for (const exp in experiments) {\n    const on = experiments[exp];\n    exps.push(`${exp}=${on ? '1' : '0'}`);\n  }\n  data['exps'] = exps.join(',');\n\n  if (error) {\n    const tagName = error.associatedElement\n      ? error.associatedElement.tagName\n      : 'u'; // Unknown\n    data['el'] = tagName;\n\n    if (error.args) {\n      data['args'] = JSON.stringify(error.args);\n    }\n\n    if (!isUserError && !error.ignoreStack && error.stack) {\n      data['s'] = error.stack;\n    }\n\n    // TODO(jridgewell, #18574); Make sure error is always an object.\n    if (error.message) {\n      error.message += ' _reported_';\n    }\n  } else {\n    data['f'] = filename || '';\n    data['l'] = line || '';\n    data['c'] = col || '';\n  }\n  data['r'] = self.document ? self.document.referrer : '';\n  data['ae'] = accumulatedErrorMessages.join(',');\n  data['fr'] = self.location.originalHash || self.location.hash;\n\n  pushLimit(accumulatedErrorMessages, message, 25);\n\n  return data;\n}\n\n/**\n * Returns true if it appears like there is non-AMP JS on the\n * current page.\n * @param {!Window} win\n * @return {boolean}\n * @visibleForTesting\n */\nexport function detectNonAmpJs(win) {\n  if (!win.document) {\n    return false;\n  }\n  const scripts = win.document.querySelectorAll('script[src]');\n  for (let i = 0; i < scripts.length; i++) {\n    if (!isProxyOrigin(scripts[i].src.toLowerCase())) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Resets accumulated error messages for testing\n */\nexport function resetAccumulatedErrorMessagesForTesting() {\n  accumulatedErrorMessages = [];\n}\n\n/**\n * Does a series of checks on the stack of an thrown error to determine the\n * JS engine that is currently running. This gives a bit more information than\n * just the UserAgent, since browsers often allow overriding it to \"emulate\"\n * mobile.\n * @return {string}\n * @visibleForTesting\n */\nexport function detectJsEngineFromStack() {\n  /** @constructor */\n  function Fn() {}\n  Fn.prototype.t = function() {\n    throw new Error('message');\n  };\n  const object = new Fn();\n  try {\n    object.t();\n  } catch (e) {\n    const {stack} = e;\n\n    // Safari only mentions the method name.\n    if (startsWith(stack, 't@')) {\n      return 'Safari';\n    }\n\n    // Firefox mentions \"prototype\".\n    if (stack.indexOf('.prototype.t@') > -1) {\n      return 'Firefox';\n    }\n\n    // IE looks like Chrome, but includes a context for the base stack line.\n    // Explicitly, we're looking for something like:\n    // \"    at Global code (https://example.com/app.js:1:200)\" or\n    // \"    at Anonymous function (https://example.com/app.js:1:200)\"\n    // vs Chrome which has:\n    // \"    at https://example.com/app.js:1:200\"\n    const last = stack.split('\\n').pop();\n    if (/\\bat .* \\(/i.test(last)) {\n      return 'IE';\n    }\n\n    // Finally, chrome includes the error message in the stack.\n    if (startsWith(stack, 'Error: message')) {\n      return 'Chrome';\n    }\n  }\n\n  return 'unknown';\n}\n\n/**\n * @param {!Error} error\n * @param {!Window} win\n */\nexport function reportErrorToAnalytics(error, win) {\n  // Currently this can only be executed in a single-doc mode. Otherwise,\n  // it's not clear which ampdoc the event would belong too.\n  if (Services.ampdocServiceFor(win).isSingleDoc()) {\n    const vars = dict({\n      'errorName': error.name,\n      'errorMessage': error.message,\n    });\n    triggerAnalyticsEvent(getRootElement_(win), 'user-error', vars);\n  }\n}\n\n/**\n * @param {!Window} win\n * @return {!Element}\n * @private\n */\nfunction getRootElement_(win) {\n  const root = Services.ampdocServiceFor(win)\n    .getSingleDoc()\n    .getRootNode();\n  return dev().assertElement(root.documentElement || root.body || root);\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Whether addEventListener supports options or only takes capture as a boolean\n * @type {boolean|undefined}\n * @visibleForTesting\n */\nlet optsSupported;\n\n/**\n * Listens for the specified event on the element.\n *\n * Do not use this directly. This method is implemented as a shared\n * dependency. Use `listen()` in either `event-helper` or `3p-frame-messaging`,\n * depending on your use case.\n *\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function internalListenImplementation(\n  element,\n  eventType,\n  listener,\n  opt_evtListenerOpts\n) {\n  let localElement = element;\n  let localListener = listener;\n  /**\n   * @type {?Function}\n   */\n  let wrapped;\n\n  wrapped = event => {\n    try {\n      return localListener(event);\n    } catch (e) {\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(e);\n      throw e;\n    }\n  };\n  const optsSupported = detectEvtListenerOptsSupport();\n  let capture = false;\n  if (opt_evtListenerOpts) {\n    capture = opt_evtListenerOpts.capture;\n  }\n  localElement.addEventListener(\n    eventType,\n    wrapped,\n    optsSupported ? opt_evtListenerOpts : capture\n  );\n  return () => {\n    if (localElement) {\n      localElement.removeEventListener(\n        eventType,\n        wrapped,\n        optsSupported ? opt_evtListenerOpts : capture\n      );\n    }\n    // Ensure these are GC'd\n    localListener = null;\n    localElement = null;\n    wrapped = null;\n  };\n}\n\n/**\n * Tests whether the browser supports options as an argument of addEventListener\n * or not.\n *\n * @return {boolean}\n */\nexport function detectEvtListenerOptsSupport() {\n  // Only run the test once\n  if (optsSupported !== undefined) {\n    return optsSupported;\n  }\n\n  optsSupported = false;\n  try {\n    // Test whether browser supports EventListenerOptions or not\n    const options = {\n      get capture() {\n        optsSupported = true;\n      },\n    };\n    self.addEventListener('test-options', null, options);\n    self.removeEventListener('test-options', null, options);\n  } catch (err) {\n    // EventListenerOptions are not supported\n  }\n  return optsSupported;\n}\n\n/**\n * Resets the test for whether addEventListener supports options or not.\n */\nexport function resetEvtListenerOptsSupportForTesting() {\n  optsSupported = undefined;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalListenImplementation} from './event-helper-listen';\nimport {lastChildElement} from './dom';\nimport {user} from './log';\n\n/** @const {string}  */\nconst LOAD_FAILURE_PREFIX = 'Failed to load:';\n\n/** @const {string} */\nexport const MEDIA_LOAD_FAILURE_SRC_PROPERTY = '__AMP_MEDIA_LOAD_FAILURE_SRC';\n\n/**\n * Returns a CustomEvent with a given type and detail; supports fallback for IE.\n * @param {!Window} win\n * @param {string} type\n * @param {!JsonObject|string|undefined|null} detail\n * @param {EventInit=} opt_eventInit\n * @return {!Event}\n */\nexport function createCustomEvent(win, type, detail, opt_eventInit) {\n  const eventInit = /** @type {!CustomEventInit} */ ({detail});\n  Object.assign(eventInit, opt_eventInit);\n  // win.CustomEvent is a function on Edge, Chrome, FF, Safari but\n  // is an object on IE 11.\n  if (typeof win.CustomEvent == 'function') {\n    return new win.CustomEvent(type, eventInit);\n  } else {\n    // Deprecated fallback for IE.\n    const e = win.document.createEvent('CustomEvent');\n    e.initCustomEvent(\n      type,\n      !!eventInit.bubbles,\n      !!eventInit.cancelable,\n      detail\n    );\n    return e;\n  }\n}\n\n/**\n * Listens for the specified event on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listen(element, eventType, listener, opt_evtListenerOpts) {\n  return internalListenImplementation(\n    element,\n    eventType,\n    listener,\n    opt_evtListenerOpts\n  );\n}\n\n/**\n * Returns the data property of an event with the correct type.\n * @param {!Event|{data: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getData(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.data);\n}\n\n/**\n * Returns the detail property of an event with the correct type.\n * @param {!Event|{detail: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getDetail(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.detail);\n}\n\n/**\n * Listens for the specified event on the element and removes the listener\n * as soon as event has been received.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listenOnce(element, eventType, listener, opt_evtListenerOpts) {\n  let localListener = listener;\n  const unlisten = internalListenImplementation(\n    element,\n    eventType,\n    event => {\n      try {\n        localListener(event);\n      } finally {\n        // Ensure listener is GC'd\n        localListener = null;\n        unlisten();\n      }\n    },\n    opt_evtListenerOpts\n  );\n  return unlisten;\n}\n\n/**\n * Returns  a promise that will resolve as soon as the specified event has\n * fired on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {Object=} opt_evtListenerOpts\n * @param {function(!UnlistenDef)=} opt_cancel An optional function that, when\n *     provided, will be called with the unlistener. This gives the caller\n *     access to the unlistener, so it may be called manually when necessary.\n * @return {!Promise<!Event>}\n */\nexport function listenOncePromise(\n  element,\n  eventType,\n  opt_evtListenerOpts,\n  opt_cancel\n) {\n  let unlisten;\n  const eventPromise = new Promise(resolve => {\n    unlisten = listenOnce(element, eventType, resolve, opt_evtListenerOpts);\n  });\n  eventPromise.then(unlisten, unlisten);\n  if (opt_cancel) {\n    opt_cancel(unlisten);\n  }\n  return eventPromise;\n}\n\n/**\n * Whether the specified element/window has been loaded already.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nexport function isLoaded(eleOrWindow) {\n  return !!(\n    eleOrWindow.complete ||\n    eleOrWindow.readyState == 'complete' ||\n    (isHTMLMediaElement(eleOrWindow) && eleOrWindow.readyState > 0) ||\n    // If the passed in thing is a Window, infer loaded state from\n    //\n    (eleOrWindow.document && eleOrWindow.document.readyState == 'complete')\n  );\n}\n\n/**\n * Returns a promise that will resolve or fail based on the eleOrWindow's 'load'\n * and 'error' events. Optionally this method takes a timeout, which will reject\n * the promise if the resource has not loaded by then.\n * @param {T} eleOrWindow Supports both Elements and as a special case Windows.\n * @return {!Promise<T>}\n * @template T\n */\nexport function loadPromise(eleOrWindow) {\n  let unlistenLoad;\n  let unlistenError;\n  if (isLoaded(eleOrWindow)) {\n    return Promise.resolve(eleOrWindow);\n  }\n  const isMediaElement = isHTMLMediaElement(eleOrWindow);\n  if (\n    isMediaElement &&\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] === eleOrWindow.currentSrc\n  ) {\n    return Promise.reject(eleOrWindow);\n  }\n  const loadingPromise = new Promise((resolve, reject) => {\n    // Listen once since IE 5/6/7 fire the onload event continuously for\n    // animated GIFs.\n    if (isMediaElement) {\n      // The following event can be triggered by the media or one of its\n      // sources. Using capture is required as the media events do not bubble.\n      unlistenLoad = listenOnce(eleOrWindow, 'loadedmetadata', resolve, {\n        capture: true,\n      });\n    } else {\n      unlistenLoad = listenOnce(eleOrWindow, 'load', resolve);\n    }\n    // Don't unlisten on error for Windows.\n    if (!eleOrWindow.tagName) {\n      return;\n    }\n    let errorTarget = eleOrWindow;\n    // If the media element has no `src`, it will try to load the sources in\n    // document order. If the last source errors, then the media element\n    // loading errored.\n    if (isMediaElement && !eleOrWindow.hasAttribute('src')) {\n      errorTarget = lastChildElement(\n        eleOrWindow,\n        child => child.tagName === 'SOURCE'\n      );\n      if (!errorTarget) {\n        return reject(new Error('Media has no source.'));\n      }\n    }\n    unlistenError = listenOnce(errorTarget, 'error', reject);\n  });\n\n  return loadingPromise.then(\n    () => {\n      if (unlistenError) {\n        unlistenError();\n      }\n      return eleOrWindow;\n    },\n    () => {\n      if (unlistenLoad) {\n        unlistenLoad();\n      }\n      failedToLoad(eleOrWindow);\n    }\n  );\n}\n\n/**\n * Emit error on load failure.\n * @param {!Element|!Window} eleOrWindow Supports both Elements and as a special\n *     case Windows.\n */\nfunction failedToLoad(eleOrWindow) {\n  // Mark the element as errored since some elements - like HTMLMediaElement\n  // using HTMLSourceElement - do not provide any synchronous way to verify if\n  // they already errored, even though the error event was already dispatched.\n  if (isHTMLMediaElement(eleOrWindow)) {\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] =\n      eleOrWindow.currentSrc || true;\n  }\n\n  // Report failed loads as user errors so that they automatically go\n  // into the \"document error\" bucket.\n  let target = eleOrWindow;\n  if (target && target.src) {\n    target = target.src;\n  }\n  throw user().createError(LOAD_FAILURE_PREFIX, target);\n}\n\n/**\n * Returns true if the parameter is a HTMLMediaElement.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nfunction isHTMLMediaElement(eleOrWindow) {\n  return eleOrWindow.tagName === 'AUDIO' || eleOrWindow.tagName === 'VIDEO';\n}\n\n/**\n * Returns true if this error message is was created for a load error.\n * @param {string} message An error message\n * @return {boolean}\n */\nexport function isLoadErrorMessage(message) {\n  return message.indexOf(LOAD_FAILURE_PREFIX) != -1;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Experiments system allows a developer to opt-in to test\n * features that are not yet fully tested.\n *\n * Experiments page: https://cdn.ampproject.org/experiments.html *\n */\n\nimport {dev, user} from './log';\nimport {getMode} from './mode';\nimport {hasOwn} from './utils/object';\nimport {parseQueryString} from './url';\n\n/** @const {string} */\nconst TAG = 'EXPERIMENTS';\n\n/** @const {string} */\nconst LOCAL_STORAGE_KEY = 'amp-experiment-toggles';\n\n/** @const {string} */\nconst TOGGLES_WINDOW_PROPERTY = '__AMP__EXPERIMENT_TOGGLES';\n\n/**\n * @typedef {{\n *   isTrafficEligible: function(!Window):boolean,\n *   branches: !Array<string>\n * }}\n */\nexport let ExperimentInfo;\n\n/**\n * Whether we are in canary.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isCanary(win) {\n  return !!(win.AMP_CONFIG && win.AMP_CONFIG.canary);\n}\n\n/**\n * Returns binary type, e.g., canary, production, control, or rc.\n * @param {!Window} win\n * @return {string}\n */\nexport function getBinaryType(win) {\n  return win.AMP_CONFIG && win.AMP_CONFIG.type\n    ? win.AMP_CONFIG.type\n    : 'unknown';\n}\n\n/**\n * Whether the specified experiment is on or off.\n * @param {!Window} win\n * @param {string} experimentId\n * @return {boolean}\n */\nexport function isExperimentOn(win, experimentId) {\n  const toggles = experimentToggles(win);\n  return !!toggles[experimentId];\n}\n\n/**\n * Toggles the experiment on or off. Returns the actual value of the experiment\n * after toggling is done.\n * @param {!Window} win\n * @param {string} experimentId\n * @param {boolean=} opt_on\n * @param {boolean=} opt_transientExperiment  Whether to toggle the\n *     experiment state \"transiently\" (i.e., for this page load only) or\n *     durably (by saving the experiment IDs after toggling).\n *     Default: false (save durably).\n * @return {boolean} New state for experimentId.\n */\nexport function toggleExperiment(\n  win,\n  experimentId,\n  opt_on,\n  opt_transientExperiment\n) {\n  const currentlyOn = isExperimentOn(win, /*OK*/ experimentId);\n  const on = !!(opt_on !== undefined ? opt_on : !currentlyOn);\n  if (on != currentlyOn) {\n    const toggles = experimentToggles(win);\n    toggles[experimentId] = on;\n\n    if (!opt_transientExperiment) {\n      const storedToggles = getExperimentToggles(win);\n      storedToggles[experimentId] = on;\n      saveExperimentToggles(win, storedToggles);\n      // Avoid affecting tests that spy/stub warn().\n      if (!getMode().test) {\n        user().warn(\n          TAG,\n          '\"%s\" experiment %s for the domain \"%s\". See: https://amp.dev/documentation/guides-and-tutorials/learn/experimental',\n          experimentId,\n          on ? 'enabled' : 'disabled',\n          win.location.hostname\n        );\n      }\n    }\n  }\n  return on;\n}\n\n/**\n * Calculate whether the experiment is on or off based off of its default value,\n * stored overriden value, or the global config frequency given.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nexport function experimentToggles(win) {\n  if (win[TOGGLES_WINDOW_PROPERTY]) {\n    return win[TOGGLES_WINDOW_PROPERTY];\n  }\n  win[TOGGLES_WINDOW_PROPERTY] = Object.create(null);\n  const toggles = win[TOGGLES_WINDOW_PROPERTY];\n\n  // Read the default config of this build.\n  if (win.AMP_CONFIG) {\n    for (const experimentId in win.AMP_CONFIG) {\n      const frequency = win.AMP_CONFIG[experimentId];\n      if (typeof frequency === 'number' && frequency >= 0 && frequency <= 1) {\n        toggles[experimentId] = Math.random() < frequency;\n      }\n    }\n  }\n  // Read document level override from meta tag.\n  if (\n    win.AMP_CONFIG &&\n    Array.isArray(win.AMP_CONFIG['allow-doc-opt-in']) &&\n    win.AMP_CONFIG['allow-doc-opt-in'].length > 0\n  ) {\n    const allowed = win.AMP_CONFIG['allow-doc-opt-in'];\n    const meta = win.document.head.querySelector(\n      'meta[name=\"amp-experiments-opt-in\"]'\n    );\n    if (meta) {\n      const optedInExperiments = meta.getAttribute('content').split(',');\n      for (let i = 0; i < optedInExperiments.length; i++) {\n        if (allowed.indexOf(optedInExperiments[i]) != -1) {\n          toggles[optedInExperiments[i]] = true;\n        }\n      }\n    }\n  }\n\n  Object.assign(toggles, getExperimentToggles(win));\n\n  if (\n    win.AMP_CONFIG &&\n    Array.isArray(win.AMP_CONFIG['allow-url-opt-in']) &&\n    win.AMP_CONFIG['allow-url-opt-in'].length > 0\n  ) {\n    const allowed = win.AMP_CONFIG['allow-url-opt-in'];\n    const hash = win.location.originalHash || win.location.hash;\n    const params = parseQueryString(hash);\n    for (let i = 0; i < allowed.length; i++) {\n      const param = params[`e-${allowed[i]}`];\n      if (param == '1') {\n        toggles[allowed[i]] = true;\n      }\n      if (param == '0') {\n        toggles[allowed[i]] = false;\n      }\n    }\n  }\n  return toggles;\n}\n\n/**\n * Returns the cached experiments toggles, or null if they have not been\n * computed yet.\n * @param {!Window} win\n * @return {Object<string, boolean>}\n */\nexport function experimentTogglesOrNull(win) {\n  return win[TOGGLES_WINDOW_PROPERTY] || null;\n}\n\n/**\n * Returns a set of experiment IDs currently on.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nfunction getExperimentToggles(win) {\n  let experimentsString = '';\n  try {\n    if ('localStorage' in win) {\n      experimentsString = win.localStorage.getItem(LOCAL_STORAGE_KEY);\n    }\n  } catch (e) {\n    dev().warn(TAG, 'Failed to retrieve experiments from localStorage.');\n  }\n  const tokens = experimentsString ? experimentsString.split(/\\s*,\\s*/g) : [];\n\n  const toggles = Object.create(null);\n  for (let i = 0; i < tokens.length; i++) {\n    if (tokens[i].length == 0) {\n      continue;\n    }\n    if (tokens[i][0] == '-') {\n      toggles[tokens[i].substr(1)] = false;\n    } else {\n      toggles[tokens[i]] = true;\n    }\n  }\n  return toggles;\n}\n\n/**\n * Saves a set of experiment IDs currently on.\n * @param {!Window} win\n * @param {!Object<string, boolean>} toggles\n */\nfunction saveExperimentToggles(win, toggles) {\n  const experimentIds = [];\n  for (const experiment in toggles) {\n    experimentIds.push((toggles[experiment] === false ? '-' : '') + experiment);\n  }\n  try {\n    if ('localStorage' in win) {\n      win.localStorage.setItem(LOCAL_STORAGE_KEY, experimentIds.join(','));\n    }\n  } catch (e) {\n    user().error(TAG, 'Failed to save experiments to localStorage.');\n  }\n}\n\n/**\n * See getExperimentToggles().\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n * @visibleForTesting\n */\nexport function getExperimentTogglesForTesting(win) {\n  return getExperimentToggles(win);\n}\n\n/**\n * Resets the experimentsToggle cache for testing purposes.\n * @param {!Window} win\n * @visibleForTesting\n */\nexport function resetExperimentTogglesForTesting(win) {\n  saveExperimentToggles(win, {});\n  win[TOGGLES_WINDOW_PROPERTY] = null;\n}\n\n/**\n * In some browser implementations of Math.random(), sequential calls of\n * Math.random() are correlated and can cause a bias.  In particular,\n * if the previous random() call was < 0.001 (as it will be if we select\n * into an experiment), the next value could be less than 0.5 more than\n * 50.7% of the time.  This provides an implementation that roots down into\n * the crypto API, when available, to produce less biased samples.\n *\n * @return {number} Pseudo-random floating-point value on the range [0, 1).\n */\nfunction slowButAccuratePrng() {\n  // TODO(tdrl): Implement.\n  return Math.random();\n}\n\n/**\n * Container for alternate random number generator implementations.  This\n * allows us to set an \"accurate\" PRNG for branch selection, but to mock it\n * out easily in tests.\n *\n * @visibleForTesting\n * @const {!{accuratePrng: function():number}}\n */\nexport const RANDOM_NUMBER_GENERATORS = {\n  accuratePrng: slowButAccuratePrng,\n};\n\n/**\n * Selects, uniformly at random, a single item from the array.\n * @param {!Array<string>} arr Object to select from.\n * @return {?string} Single item from arr or null if arr was empty.\n */\nfunction selectRandomItem(arr) {\n  const rn = RANDOM_NUMBER_GENERATORS.accuratePrng();\n  return arr[Math.floor(rn * arr.length)] || null;\n}\n\n/**\n * Selects which page-level experiment branches are enabled. If a given\n * experiment name is already set (including to the null / no branches selected\n * state), this won't alter its state.\n *\n * Check whether a given experiment is set using isExperimentOn(win,\n * experimentName) and, if it is on, look for which branch is selected in\n * win.__AMP_EXPERIMENT_BRANCHES[experimentName].\n *\n * @param {!Window} win Window context on which to save experiment\n *     selection state.\n * @param {!Object<string, !ExperimentInfo>} experiments  Set of experiments to\n *     configure for this page load.\n * @return {!Object<string, string>} Map of experiment names to selected\n *     branches.\n */\nexport function randomlySelectUnsetExperiments(win, experiments) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  const selectedExperiments = {};\n  for (const experimentName in experiments) {\n    // Skip experimentName if it is not a key of experiments object or if it\n    // has already been populated by some other property.\n    if (!hasOwn(experiments, experimentName)) {\n      continue;\n    }\n    if (hasOwn(win.__AMP_EXPERIMENT_BRANCHES, experimentName)) {\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n      continue;\n    }\n\n    if (\n      !experiments[experimentName].isTrafficEligible ||\n      !experiments[experimentName].isTrafficEligible(win)\n    ) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = null;\n      continue;\n    }\n\n    // If we're in the experiment, but we haven't already forced a specific\n    // experiment branch (e.g., via a test setup), then randomize the branch\n    // choice.\n    if (\n      !win.__AMP_EXPERIMENT_BRANCHES[experimentName] &&\n      isExperimentOn(win, /*OK*/ experimentName)\n    ) {\n      const {branches} = experiments[experimentName];\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = selectRandomItem(\n        branches\n      );\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n    }\n  }\n  return selectedExperiments;\n}\n\n/**\n * Returns the experiment branch enabled for the given experiment ID.\n * For example, 'control' or 'experiment'.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @return {?string} Active experiment branch ID for experimentName (possibly\n *     null if experimentName has been tested but no branch was enabled).\n */\nexport function getExperimentBranch(win, experimentName) {\n  return win.__AMP_EXPERIMENT_BRANCHES\n    ? win.__AMP_EXPERIMENT_BRANCHES[experimentName]\n    : null;\n}\n\n/**\n * Force enable (or disable) a specific branch of a given experiment name.\n * Disables the experiment name altogether if branchId is falseish.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @param {?string} branchId ID of branch to force or null to disable\n *     altogether.\n * @visibleForTesting\n */\nexport function forceExperimentBranch(win, experimentName, branchId) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  toggleExperiment(win, experimentName, !!branchId, true);\n  win.__AMP_EXPERIMENT_BRANCHES[experimentName] = branchId;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {number=} opt_base Exponential base. Defaults to 2.\n * @return {function(function()): number} Function that when invoked will\n *     call the passed in function. On every invocation the next\n *     invocation of the passed in function will be exponentially\n *     later. Returned function returns timeout id.\n */\nexport function exponentialBackoff(opt_base) {\n  const getTimeout = exponentialBackoffClock(opt_base);\n  return work => {\n    return setTimeout(work, getTimeout());\n  };\n}\n\n/**\n * @param {number=} opt_base Exponential base. Defaults to 2.\n * @return {function(): number} Function that when invoked will return\n *    a number that exponentially grows per invocation.\n */\nexport function exponentialBackoffClock(opt_base) {\n  const base = opt_base || 2;\n  let count = 0;\n  return () => {\n    let wait = Math.pow(base, count++);\n    wait += getJitter(wait);\n    return wait * 1000;\n  };\n}\n\n/**\n * Add jitter to avoid the thundering herd. This can e.g. happen when\n * we poll a backend and it fails for everyone at the same time.\n * We add up to 30% (default) longer or shorter than the given time.\n *\n * @param {number} wait the amount if base milliseconds\n * @param {number=} opt_perc the min/max percentage to add or sutract\n * @return {number}\n */\nexport function getJitter(wait, opt_perc) {\n  opt_perc = opt_perc || 0.3;\n  let jitter = wait * opt_perc * Math.random();\n  if (Math.random() > 0.5) {\n    jitter *= -1;\n  }\n  return jitter;\n}\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns the internal AMP runtime version. Note that this is not the RTV,\n * which is a prefix and the runtime version.\n *\n * The call sites for this function are replaced with a compile time constant\n * string.\n *\n * @return {string}\n */\nexport function internalRuntimeVersion() {\n  return '$internalRuntimeVersion$';\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview This module declares JSON types as defined in the\n * {@link http://json.org/}.\n */\n\nimport {childElementsByTag, isJsonScriptTag} from './dom';\nimport {isObject} from './types';\n\n// NOTE Type are changed to {*} because of\n// https://github.com/google/closure-compiler/issues/1999\n\n/**\n * JSON scalar. It's either string, number or boolean.\n * @typedef {*} should be string|number|boolean|null\n */\nlet JSONScalarDef;\n\n/**\n * JSON object. It's a map with string keys and JSON values.\n * @typedef {*} should be !Object<string, ?JSONValueDef>\n */\nlet JSONObjectDef;\n\n/**\n * JSON array. It's an array with JSON values.\n * @typedef {*} should be !Array<?JSONValueDef>\n */\nlet JSONArrayDef;\n\n/**\n * JSON value. It's either a scalar, an object or an array.\n * @typedef {*} should be !JSONScalarDef|!JSONObjectDef|!JSONArrayDef\n */\nlet JSONValueDef;\n\n/**\n * Recreates objects with prototype-less copies.\n * @param {!JsonObject} obj\n * @return {!JsonObject}\n */\nexport function recreateNonProtoObject(obj) {\n  const copy = Object.create(null);\n  for (const k in obj) {\n    if (!hasOwnProperty(obj, k)) {\n      continue;\n    }\n    const v = obj[k];\n    copy[k] = isObject(v) ? recreateNonProtoObject(v) : v;\n  }\n  return /** @type {!JsonObject} */ (copy);\n}\n\n/**\n * Returns a value from an object for a field-based expression. The expression\n * is a simple nested dot-notation of fields, such as `field1.field2`. If any\n * field in a chain does not exist or is not an object or array, the returned\n * value will be `undefined`.\n *\n * @param {!JsonObject} obj\n * @param {string} expr\n * @return {*}\n */\nexport function getValueForExpr(obj, expr) {\n  // The `.` indicates \"the object itself\".\n  if (expr == '.') {\n    return obj;\n  }\n  // Otherwise, navigate via properties.\n  const parts = expr.split('.');\n  let value = obj;\n  for (let i = 0; i < parts.length; i++) {\n    const part = parts[i];\n    if (\n      part &&\n      value &&\n      value[part] !== undefined &&\n      hasOwnProperty(value, part)\n    ) {\n      value = value[part];\n      continue;\n    }\n    value = undefined;\n    break;\n  }\n  return value;\n}\n\n/**\n * Simple wrapper around JSON.parse that casts the return value\n * to JsonObject.\n * Create a new wrapper if an array return value is desired.\n * @param {*} json JSON string to parse\n * @return {?JsonObject} May be extend to parse arrays.\n */\nexport function parseJson(json) {\n  return /** @type {?JsonObject} */ (JSON.parse(/** @type {string} */ (json)));\n}\n\n/**\n * Parses the given `json` string without throwing an exception if not valid.\n * Returns `undefined` if parsing fails.\n * Returns the `Object` corresponding to the JSON string when parsing succeeds.\n * @param {*} json JSON string to parse\n * @param {function(!Error)=} opt_onFailed Optional function that will be called\n *     with the error if parsing fails.\n * @return {?JsonObject} May be extend to parse arrays.\n */\nexport function tryParseJson(json, opt_onFailed) {\n  try {\n    return parseJson(json);\n  } catch (e) {\n    if (opt_onFailed) {\n      opt_onFailed(e);\n    }\n    return null;\n  }\n}\n\n/**\n * Helper method to get the json config from an element <script> tag\n * @param {!Element} element\n * @return {?JsonObject}\n * @throws {!Error} If element does not have exactly one <script> child\n * with type=\"application/json\", or if the <script> contents are not valid JSON.\n */\nexport function getChildJsonConfig(element) {\n  const scripts = childElementsByTag(element, 'script');\n  const n = scripts.length;\n  if (n !== 1) {\n    throw new Error(`Found ${scripts.length} <script> children. Expected 1.`);\n  }\n  const script = scripts[0];\n  if (!isJsonScriptTag(script)) {\n    throw new Error('<script> child must have type=\"application/json\"');\n  }\n  try {\n    return parseJson(script.textContent);\n  } catch (unusedError) {\n    throw new Error('Failed to parse <script> contents. Is it valid JSON?');\n  }\n}\n\n/**\n * Deeply checks strict equality of items in nested arrays and objects.\n *\n * @param {JSONValueDef} a\n * @param {JSONValueDef} b\n * @param {number} depth The maximum depth. Must be finite.\n * @return {boolean}\n * @throws {Error} If depth argument is not finite.\n */\nexport function deepEquals(a, b, depth = 5) {\n  if (!isFinite(depth) || depth < 0) {\n    throw new Error('Invalid depth: ' + depth);\n  }\n  if (a === b) {\n    return true;\n  }\n  /** @type {!Array<{a: JSONValueDef, b: JSONValueDef, depth: number}>} */\n  const queue = [{a, b, depth}];\n  while (queue.length > 0) {\n    const {a, b, depth} = queue.shift();\n    // Only check deep equality if depth > 0.\n    if (depth > 0) {\n      if (typeof a !== typeof b) {\n        return false;\n      } else if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length) {\n          return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n          queue.push({a: a[i], b: b[i], depth: depth - 1});\n        }\n        continue;\n      } else if (a && b && typeof a === 'object' && typeof b === 'object') {\n        const keysA = Object.keys(/** @type {!Object} */ (a));\n        const keysB = Object.keys(/** @type {!Object} */ (b));\n        if (keysA.length !== keysB.length) {\n          return false;\n        }\n        for (let i = 0; i < keysA.length; i++) {\n          const k = keysA[i];\n          queue.push({a: a[k], b: b[k], depth: depth - 1});\n        }\n        continue;\n      }\n    }\n    // If we get here, then depth == 0 or (a, b) are primitives.\n    if (a !== b) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {*} obj\n * @param {string} key\n * @return {boolean}\n */\nfunction hasOwnProperty(obj, key) {\n  if (obj == null || typeof obj != 'object') {\n    return false;\n  }\n  return Object.prototype.hasOwnProperty.call(\n    /** @type {!Object} */ (obj),\n    key\n  );\n}\n\n/**\n * This helper function handles configurations specified in a JSON format.\n *\n * It allows the configuration is to be written in plain JS (which has better\n * dev ergonomics like comments and trailing commas), and allows the\n * configuration to be transformed into an efficient JSON-parsed representation\n * in the dist build. See https://v8.dev/blog/cost-of-javascript-2019#json\n *\n * @param {!Object} obj\n * @return {!JsonObject}\n */\nexport function jsonConfiguration(obj) {\n  return /** @type {!JsonObject} */ (obj);\n}\n\n/**\n * This converts an Object into a suitable type to be used in `includeJsonLiteral`.\n * This doesn't actually do any conversion, it only changes the closure type.\n *\n * @param {!Object|!Array|string|number|boolean|null} value\n * @return {!InternalJsonLiteralTypeDef}\n */\nexport function jsonLiteral(value) {\n  return /** @type {!InternalJsonLiteralTypeDef} */ (value);\n}\n\n/**\n * Allows inclusion of a variable (that's wrapped in a jsonLiteral\n * call) to be included inside a jsonConfiguration.\n *\n * @param {!InternalJsonLiteralTypeDef} value\n * @return {*}\n */\nexport function includeJsonLiteral(value) {\n  return value;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getMode} from './mode';\nimport {getModeObject} from './mode-object';\nimport {internalRuntimeVersion} from './internal-version';\nimport {isArray, isEnumValue} from './types';\nimport {once} from './utils/function';\nimport {urls} from './config';\n\nconst noop = () => {};\n\n/**\n * Triple zero width space.\n *\n * This is added to user error messages, so that we can later identify\n * them, when the only thing that we have is the message. This is the\n * case in many browsers when the global exception handler is invoked.\n *\n * @const {string}\n */\nexport const USER_ERROR_SENTINEL = '\\u200B\\u200B\\u200B';\n\n/**\n * Four zero width space.\n *\n * @const {string}\n */\nexport const USER_ERROR_EMBED_SENTINEL = '\\u200B\\u200B\\u200B\\u200B';\n\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a user error.\n */\nexport function isUserErrorMessage(message) {\n  return message.indexOf(USER_ERROR_SENTINEL) >= 0;\n}\n\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a a user error from an iframe embed.\n */\nexport function isUserErrorEmbed(message) {\n  return message.indexOf(USER_ERROR_EMBED_SENTINEL) >= 0;\n}\n\n/**\n * @enum {number}\n * @private Visible for testing only.\n */\nexport const LogLevel = {\n  OFF: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n  FINE: 4,\n};\n\n/**\n * Sets reportError function. Called from error.js to break cyclic\n * dependency.\n * @param {function(*, !Element=)|undefined} fn\n */\nexport function setReportError(fn) {\n  self.__AMP_REPORT_ERROR = fn;\n}\n\n/**\n * @type {!LogLevel|undefined}\n * @private\n */\nlet levelOverride_ = undefined;\n\n/**\n * @param {!LogLevel} level\n */\nexport function overrideLogLevel(level) {\n  levelOverride_ = level;\n}\n\n/**\n * Prefixes `internalRuntimeVersion` with the `01` channel signifier (for prod.) for\n * extracted message URLs.\n * (Specific channel is irrelevant: message tables are invariant on internal version.)\n * @return {string}\n */\nconst messageUrlRtv = () => `01${internalRuntimeVersion()}`;\n\n/**\n * Gets a URL to display a message on amp.dev.\n * @param {string} id\n * @param {!Array} interpolatedParts\n * @return {string}\n */\nconst externalMessageUrl = (id, interpolatedParts) =>\n  interpolatedParts.reduce(\n    (prefix, arg) => `${prefix}&s[]=${messageArgToEncodedComponent(arg)}`,\n    `https://log.amp.dev/?v=${messageUrlRtv()}&id=${encodeURIComponent(id)}`\n  );\n\n/**\n * URL to simple log messages table JSON file, which contains an Object<string, string>\n * which maps message id to full message template.\n * @return {string}\n */\nconst externalMessagesSimpleTableUrl = () =>\n  `${urls.cdn}/rtv/${messageUrlRtv()}/log-messages.simple.json`;\n\n/**\n * @param {*} arg\n * @return {string}\n */\nconst messageArgToEncodedComponent = arg =>\n  encodeURIComponent(String(elementStringOrPassthru(arg)));\n\n/**\n * Logging class. Use of sentinel string instead of a boolean to check user/dev\n * errors because errors could be rethrown by some native code as a new error,\n * and only a message would survive. Also, some browser don’t support a 5th\n * error object argument in window.onerror. List of supporting browser can be\n * found here:\n * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n * @final\n * @private Visible for testing only.\n */\nexport class Log {\n  /**\n   * opt_suffix will be appended to error message to identify the type of the\n   * error message. We can't rely on the error object to pass along the type\n   * because some browsers do not have this param in its window.onerror API.\n   * See:\n   * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n   *\n   * @param {!Window} win\n   * @param {function(!./mode.ModeDef):!LogLevel} levelFunc\n   * @param {string=} opt_suffix\n   */\n  constructor(win, levelFunc, opt_suffix = '') {\n    /**\n     * In tests we use the main test window instead of the iframe where\n     * the tests runs because only the former is relayed to the console.\n     * @const {!Window}\n     */\n    this.win = getMode().test && win.__AMP_TEST_IFRAME ? win.parent : win;\n\n    /** @private @const {function(!./mode.ModeDef):!LogLevel} */\n    this.levelFunc_ = levelFunc;\n\n    /** @private @const {!LogLevel} */\n    this.level_ = this.defaultLevel_();\n\n    /** @private @const {string} */\n    this.suffix_ = opt_suffix;\n\n    /** @private {?JsonObject} */\n    this.messages_ = null;\n\n    this.fetchExternalMessagesOnce_ = once(() => {\n      win\n        .fetch(externalMessagesSimpleTableUrl())\n        .then(response => response.json(), noop)\n        .then(opt_messages => {\n          if (opt_messages) {\n            this.messages_ = /** @type {!JsonObject} */ (opt_messages);\n          }\n        });\n    });\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  getLevel_() {\n    return levelOverride_ !== undefined ? levelOverride_ : this.level_;\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevel_() {\n    // No console - can't enable logging.\n    if (!this.win.console || !this.win.console.log) {\n      return LogLevel.OFF;\n    }\n\n    // Logging has been explicitly disabled.\n    if (getMode().log == '0') {\n      return LogLevel.OFF;\n    }\n\n    // Logging is enabled for tests directly.\n    if (getMode().test && this.win.ENABLE_LOG) {\n      return LogLevel.FINE;\n    }\n\n    // LocalDev by default allows INFO level, unless overriden by `#log`.\n    if (getMode().localDev && !getMode().log) {\n      return LogLevel.INFO;\n    }\n\n    // Delegate to the specific resolver.\n    return this.levelFunc_(getModeObject());\n  }\n\n  /**\n   * @param {string} tag\n   * @param {string} level\n   * @param {!Array} messages\n   */\n  msg_(tag, level, messages) {\n    if (this.getLevel_() != LogLevel.OFF) {\n      let fn = this.win.console.log;\n      if (level == 'ERROR') {\n        fn = this.win.console.error || fn;\n      } else if (level == 'INFO') {\n        fn = this.win.console.info || fn;\n      } else if (level == 'WARN') {\n        fn = this.win.console.warn || fn;\n      }\n      const args = this.maybeExpandMessageArgs_(messages);\n      // Prefix console message with \"[tag]\".\n      const prefix = `[${tag}]`;\n      if (typeof args[0] === 'string') {\n        // Prepend string to avoid breaking string substitutions e.g. %s.\n        args[0] = prefix + ' ' + args[0];\n      } else {\n        args.unshift(prefix);\n      }\n      fn.apply(this.win.console, args);\n    }\n  }\n\n  /**\n   * Whether the logging is enabled.\n   * @return {boolean}\n   */\n  isEnabled() {\n    return this.getLevel_() != LogLevel.OFF;\n  }\n\n  /**\n   * Reports a fine-grained message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  fine(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.FINE) {\n      this.msg_(tag, 'FINE', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n\n  /**\n   * Reports a informational message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  info(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.INFO) {\n      this.msg_(tag, 'INFO', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n\n  /**\n   * Reports a warning message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  warn(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.WARN) {\n      this.msg_(tag, 'WARN', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n\n  /**\n   * Reports an error message. If the logging is disabled, the error is rethrown\n   * asynchronously.\n   * @param {string} tag\n   * @param {...*} var_args\n   * @return {!Error|undefined}\n   * @private\n   */\n  error_(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.ERROR) {\n      this.msg_(tag, 'ERROR', Array.prototype.slice.call(arguments, 1));\n    } else {\n      const error = createErrorVargs.apply(\n        null,\n        Array.prototype.slice.call(arguments, 1)\n      );\n      this.prepareError_(error);\n      return error;\n    }\n  }\n\n  /**\n   * Reports an error message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  error(tag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      error.name = tag || error.name;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Reports an error message and marks with an expected property. If the\n   * logging is disabled, the error is rethrown asynchronously.\n   * @param {string} unusedTag\n   * @param {...*} var_args\n   */\n  expectedError(unusedTag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      error.expected = true;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Creates an error object.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    return error;\n  }\n\n  /**\n   * Creates an error object with its expected property set to true.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createExpectedError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    error.expected = true;\n    return error;\n  }\n\n  /**\n   * Throws an error if the first argument isn't trueish.\n   *\n   * Supports argument substitution into the message via %s placeholders.\n   *\n   * Throws an error object that has two extra properties:\n   * - associatedElement: This is the first element provided in the var args.\n   *   It can be used for improved display of error messages.\n   * - messageArray: The elements of the substituted message as non-stringified\n   *   elements in an array. When e.g. passed to console.error this yields\n   *   native displays of things like HTML elements.\n   *\n   * NOTE: for an explanation of the tempate R implementation see\n   * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n   *\n   * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n   *     not evaluate to true.\n   * @param {!Array|string=} opt_message The assertion message\n   * @param {...*} var_args Arguments substituted into %s in the message.\n   * @return {R} The value of shouldBeTrueish.\n   * @throws {!Error} When `value` is `null` or `undefined`.\n   * @template T\n   * @template R :=\n   *     mapunion(T, (V) =>\n   *         cond(eq(V, 'null'),\n   *             none(),\n   *             cond(eq(V, 'undefined'),\n   *                 none(),\n   *                 V)))\n   *  =:\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assert(shouldBeTrueish, opt_message, var_args) {\n    let firstElement;\n    if (isArray(opt_message)) {\n      return this.assert.apply(\n        this,\n        [shouldBeTrueish].concat(\n          this.expandMessageArgs_(/** @type {!Array} */ (opt_message))\n        )\n      );\n    }\n    if (!shouldBeTrueish) {\n      const message = opt_message || 'Assertion failed';\n      const splitMessage = message.split('%s');\n      const first = splitMessage.shift();\n      let formatted = first;\n      const messageArray = [];\n      let i = 2;\n      pushIfNonEmpty(messageArray, first);\n      while (splitMessage.length > 0) {\n        const nextConstant = splitMessage.shift();\n        const val = arguments[i++];\n        if (val && val.tagName) {\n          firstElement = val;\n        }\n        messageArray.push(val);\n        pushIfNonEmpty(messageArray, nextConstant.trim());\n        formatted += stringOrElementString(val) + nextConstant;\n      }\n      const e = new Error(formatted);\n      e.fromAssert = true;\n      e.associatedElement = firstElement;\n      e.messageArray = messageArray;\n      this.prepareError_(e);\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(e);\n      throw e;\n    }\n    return shouldBeTrueish;\n  }\n\n  /**\n   * Throws an error if the first argument isn't an Element\n   *\n   * Otherwise see `assert` for usage\n   *\n   * @param {*} shouldBeElement\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Element} The value of shouldBeTrueish.\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertElement(shouldBeElement, opt_message) {\n    const shouldBeTrueish = shouldBeElement && shouldBeElement.nodeType == 1;\n    this.assertType_(\n      shouldBeElement,\n      shouldBeTrueish,\n      'Element expected',\n      opt_message\n    );\n    return /** @type {!Element} */ (shouldBeElement);\n  }\n\n  /**\n   * Throws an error if the first argument isn't a string. The string can\n   * be empty.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeString\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {string} The string value. Can be an empty string.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertString(shouldBeString, opt_message) {\n    this.assertType_(\n      shouldBeString,\n      typeof shouldBeString == 'string',\n      'String expected',\n      opt_message\n    );\n    return /** @type {string} */ (shouldBeString);\n  }\n\n  /**\n   * Throws an error if the first argument isn't a number. The allowed values\n   * include `0` and `NaN`.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeNumber\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {number} The number value. The allowed values include `0`\n   *   and `NaN`.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertNumber(shouldBeNumber, opt_message) {\n    this.assertType_(\n      shouldBeNumber,\n      typeof shouldBeNumber == 'number',\n      'Number expected',\n      opt_message\n    );\n    return /** @type {number} */ (shouldBeNumber);\n  }\n\n  /**\n   * Throws an error if the first argument is not an array.\n   * The array can be empty.\n   *\n   * @param {*} shouldBeArray\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Array} The array value\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertArray(shouldBeArray, opt_message) {\n    this.assertType_(\n      shouldBeArray,\n      isArray(shouldBeArray),\n      'Array expected',\n      opt_message\n    );\n    return /** @type {!Array} */ (shouldBeArray);\n  }\n\n  /**\n   * Throws an error if the first argument isn't a boolean.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeBoolean\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {boolean} The boolean value.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertBoolean(shouldBeBoolean, opt_message) {\n    this.assertType_(\n      shouldBeBoolean,\n      !!shouldBeBoolean === shouldBeBoolean,\n      'Boolean expected',\n      opt_message\n    );\n    return /** @type {boolean} */ (shouldBeBoolean);\n  }\n\n  /**\n   * Asserts and returns the enum value. If the enum doesn't contain such a\n   * value, the error is thrown.\n   *\n   * @param {!Object<T>} enumObj\n   * @param {string} s\n   * @param {string=} opt_enumName\n   * @return {T}\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertEnumValue(enumObj, s, opt_enumName) {\n    if (isEnumValue(enumObj, s)) {\n      return s;\n    }\n    this.assert(false, 'Unknown %s value: \"%s\"', opt_enumName || 'enum', s);\n  }\n\n  /**\n   * @param {!Error} error\n   * @private\n   */\n  prepareError_(error) {\n    error = duplicateErrorIfNecessary(error);\n    if (this.suffix_) {\n      if (!error.message) {\n        error.message = this.suffix_;\n      } else if (error.message.indexOf(this.suffix_) == -1) {\n        error.message += this.suffix_;\n      }\n    } else if (isUserErrorMessage(error.message)) {\n      error.message = error.message.replace(USER_ERROR_SENTINEL, '');\n    }\n  }\n\n  /**\n   * @param {!Array} args\n   * @return {!Array}\n   * @private\n   */\n  maybeExpandMessageArgs_(args) {\n    if (isArray(args[0])) {\n      return this.expandMessageArgs_(/** @type {!Array} */ (args[0]));\n    }\n    return args;\n  }\n\n  /**\n   * Either redirects a pair of (errorId, ...args) to a URL where the full\n   * message is displayed, or displays it from a fetched table.\n   *\n   * This method is used by the output of the `transform-log-methods` babel\n   * plugin. It should not be used directly. Use the (*error|assert*|info|warn)\n   * methods instead.\n   *\n   * @param {!Array} parts\n   * @return {!Array}\n   * @private\n   */\n  expandMessageArgs_(parts) {\n    // First value should exist.\n    const id = parts.shift();\n    // Best effort fetch of message template table.\n    // Since this is async, the first few logs might be indirected to a URL even\n    // if in development mode. Message table is ~small so this should be a short\n    // gap.\n    if (getMode(this.win).development) {\n      this.fetchExternalMessagesOnce_();\n    }\n    if (this.messages_ && id in this.messages_) {\n      return [this.messages_[id]].concat(parts);\n    }\n    return [`More info at ${externalMessageUrl(id, parts)}`];\n  }\n\n  /**\n   * Asserts types, backbone of `assertNumber`, `assertString`, etc.\n   *\n   * It understands array-based \"id\"-contracted messages.\n   *\n   * Otherwise creates a sprintf syntax string containing the optional message or the\n   * default. An interpolation token is added at the end to include the `subject`.\n   * @param {*} subject\n   * @param {*} assertion\n   * @param {string} defaultMessage\n   * @param {!Array|string=} opt_message\n   * @private\n   */\n  assertType_(subject, assertion, defaultMessage, opt_message) {\n    if (isArray(opt_message)) {\n      this.assert(assertion, opt_message.concat(subject));\n    } else {\n      this.assert(assertion, `${opt_message || defaultMessage}: %s`, subject);\n    }\n  }\n}\n\n/**\n * @param {string|!Element} val\n * @return {string}\n */\nconst stringOrElementString = val =>\n  /** @type {string} */ (elementStringOrPassthru(val));\n\n/**\n * @param {*} val\n * @return {*}\n */\nfunction elementStringOrPassthru(val) {\n  // Do check equivalent to `val instanceof Element` without cross-window bug\n  if (val && val.nodeType == 1) {\n    return val.tagName.toLowerCase() + (val.id ? '#' + val.id : '');\n  }\n  return val;\n}\n\n/**\n * @param {!Array} array\n * @param {*} val\n */\nfunction pushIfNonEmpty(array, val) {\n  if (val != '') {\n    array.push(val);\n  }\n}\n\n/**\n * Some exceptions (DOMException, namely) have read-only message.\n * @param {!Error} error\n * @return {!Error};\n */\nexport function duplicateErrorIfNecessary(error) {\n  const messageProperty = Object.getOwnPropertyDescriptor(error, 'message');\n  if (messageProperty && messageProperty.writable) {\n    return error;\n  }\n\n  const {message, stack} = error;\n  const e = new Error(message);\n  // Copy all the extraneous things we attach.\n  for (const prop in error) {\n    e[prop] = error[prop];\n  }\n  // Ensure these are copied.\n  e.stack = stack;\n  return e;\n}\n\n/**\n * @param {...*} var_args\n * @return {!Error}\n * @visibleForTesting\n */\nexport function createErrorVargs(var_args) {\n  let error = null;\n  let message = '';\n  for (let i = 0; i < arguments.length; i++) {\n    const arg = arguments[i];\n    if (arg instanceof Error && !error) {\n      error = duplicateErrorIfNecessary(arg);\n    } else {\n      if (message) {\n        message += ' ';\n      }\n      message += arg;\n    }\n  }\n\n  if (!error) {\n    error = new Error(message);\n  } else if (message) {\n    error.message = message + ': ' + error.message;\n  }\n  return error;\n}\n\n/**\n * Rethrows the error without terminating the current context. This preserves\n * whether the original error designation is a user error or a dev error.\n * @param {...*} var_args\n */\nexport function rethrowAsync(var_args) {\n  const error = createErrorVargs.apply(null, arguments);\n  setTimeout(() => {\n    // reportError is installed globally per window in the entry point.\n    self.__AMP_REPORT_ERROR(error);\n    throw error;\n  });\n}\n\n/**\n * Cache for logs. We do not use a Service since the service module depends\n * on Log and closure literally can't even.\n * @type {{user: ?Log, dev: ?Log, userForEmbed: ?Log}}\n */\nself.__AMP_LOG = self.__AMP_LOG || {\n  user: null,\n  dev: null,\n  userForEmbed: null,\n};\n\nconst logs = self.__AMP_LOG;\n\n/**\n * Eventually holds a constructor for Log objects. Lazily initialized, so we\n * can avoid ever referencing the real constructor except in JS binaries\n * that actually want to include the implementation.\n * @type {?Function}\n */\nlet logConstructor = null;\n\n/**\n * Initializes log contructor.\n */\nexport function initLogConstructor() {\n  logConstructor = Log;\n  // Initialize instances for use. If a binary (an extension for example) that\n  // does not call `initLogConstructor` invokes `dev()` or `user()` earlier than\n  // the binary that does call `initLogConstructor` (amp.js), the extension will\n  // throw an error as that extension will never be able to initialize the log\n  // instances and we also don't want it to call `initLogConstructor` either\n  // (since that will cause the Log implementation to be bundled into that\n  // binary). So we must initialize the instances eagerly so that they are ready\n  // for use (stored globally) after the main binary calls `initLogConstructor`.\n  dev();\n  user();\n}\n\n/**\n * Resets log contructor for testing.\n */\nexport function resetLogConstructorForTesting() {\n  logConstructor = null;\n}\n\n/**\n * Publisher level log.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Development mode is enabled via `#development=1` or logging is explicitly\n *     enabled via `#log=D` where D >= 1.\n *  3. AMP.setLogLevel(D) is called, where D >= 1.\n *\n * @param {!Element=} opt_element\n * @return {!Log}\n */\nexport function user(opt_element) {\n  if (!logs.user) {\n    logs.user = getUserLogger(USER_ERROR_SENTINEL);\n  }\n  if (!isFromEmbed(logs.user.win, opt_element)) {\n    return logs.user;\n  } else {\n    if (logs.userForEmbed) {\n      return logs.userForEmbed;\n    }\n    return (logs.userForEmbed = getUserLogger(USER_ERROR_EMBED_SENTINEL));\n  }\n}\n\n/**\n * Getter for user logger\n * @param {string=} suffix\n * @return {!Log}\n */\nfunction getUserLogger(suffix) {\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return new logConstructor(\n    self,\n    mode => {\n      const logNum = parseInt(mode.log, 10);\n      if (mode.development || logNum >= 1) {\n        return LogLevel.FINE;\n      }\n      return LogLevel.WARN;\n    },\n    suffix\n  );\n}\n\n/**\n * AMP development log. Calls to `devLog().assert` and `dev.fine` are stripped\n * in the PROD binary. However, `devLog().assert` result is preserved in either\n * case.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Logging is explicitly enabled via `#log=D`, where D >= 2.\n *  3. AMP.setLogLevel(D) is called, where D >= 2.\n *\n * @return {!Log}\n */\nexport function dev() {\n  if (logs.dev) {\n    return logs.dev;\n  }\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return (logs.dev = new logConstructor(self, mode => {\n    const logNum = parseInt(mode.log, 10);\n    if (logNum >= 3) {\n      return LogLevel.FINE;\n    }\n    if (logNum >= 2) {\n      return LogLevel.INFO;\n    }\n    return LogLevel.OFF;\n  }));\n}\n\n/**\n * @param {!Window} win\n * @param {!Element=} opt_element\n * @return {boolean} isEmbed\n */\nexport function isFromEmbed(win, opt_element) {\n  if (!opt_element) {\n    return false;\n  }\n  return opt_element.ownerDocument.defaultView != win;\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * NOTE: for an explanation of the tempate R implementation see\n * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {R} The value of shouldBeTrueish.\n * @template T\n * @template R :=\n *     mapunion(T, (V) =>\n *         cond(eq(V, 'null'),\n *             none(),\n *             cond(eq(V, 'undefined'),\n *                 none(),\n *                 V)))\n *  =:\n * @throws {!Error} When `value` is `null` or `undefined`.\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (getMode().minified) {\n    return shouldBeTrueish;\n  }\n  return dev()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * NOTE: for an explanation of the tempate R implementation see\n * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {R} The value of shouldBeTrueish.\n * @template T\n * @template R :=\n *     mapunion(T, (V) =>\n *         cond(eq(V, 'null'),\n *             none(),\n *             cond(eq(V, 'undefined'),\n *                 none(),\n *                 V)))\n *  =:\n * @throws {!Error} When `value` is `null` or `undefined`.\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  return user()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getMode} from './mode';\n\n/**\n * Provides info about the current app. This return value may be cached and\n * passed around as it will always be DCE'd.\n * @param {?Window=} opt_win\n * @return {!./mode.ModeDef}\n */\nexport function getModeObject(opt_win) {\n  return {\n    localDev: getMode(opt_win).localDev,\n    development: getMode(opt_win).development,\n    filter: getMode(opt_win).filter,\n    minified: getMode(opt_win).minified,\n    lite: getMode(opt_win).lite,\n    test: getMode(opt_win).test,\n    log: getMode(opt_win).log,\n    version: getMode(opt_win).version,\n    rtvVersion: getMode(opt_win).rtvVersion,\n    singlePassType: getMode(opt_win).singlePassType,\n  };\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalRuntimeVersion} from './internal-version';\nimport {parseQueryString_} from './url-parse-query-string';\n\n/**\n * @typedef {{\n *   localDev: boolean,\n *   development: boolean,\n *   minified: boolean,\n *   lite: boolean,\n *   test: boolean,\n *   log: (string|undefined),\n *   version: string,\n *   rtvVersion: string,\n *   runtime: (null|string|undefined),\n *   a4aId: (null|string|undefined),\n *   singlePassType: (string|undefined)\n * }}\n */\nexport let ModeDef;\n\n/**\n * `rtvVersion` is the prefixed version we serve off of the cdn.\n * The prefix denotes canary(00) or prod(01) or an experiment version ( > 01).\n * @type {string}\n */\nlet rtvVersion = '';\n\n/**\n * Provides info about the current app.\n * @param {?Window=} opt_win\n * @return {!ModeDef}\n */\nexport function getMode(opt_win) {\n  const win = opt_win || self;\n  if (win.__AMP_MODE) {\n    return win.__AMP_MODE;\n  }\n  return (win.__AMP_MODE = getMode_(win));\n}\n\n/**\n * Provides info about the current app.\n * @param {!Window} win\n * @return {!ModeDef}\n */\nfunction getMode_(win) {\n  // TODO(erwinmombay): simplify the logic here\n  const AMP_CONFIG = self.AMP_CONFIG || {};\n\n  // Magic constants that are replaced by closure compiler.\n  // IS_MINIFIED is always replaced with true when closure compiler is used\n  // while IS_DEV is only replaced when `gulp dist` is called without the\n  // --fortesting flag.\n  const IS_DEV = true;\n  const IS_MINIFIED = false;\n\n  const localDevEnabled = !!AMP_CONFIG.localDev;\n  const runningTests =\n    !!AMP_CONFIG.test || (IS_DEV && !!(win.__AMP_TEST || win.__karma__));\n  const runningTestsOnIe = win.__karma__ && win.__karma__.config.amp.testOnIe;\n  const isLocalDev = IS_DEV && (localDevEnabled || runningTests);\n  const hashQuery = parseQueryString_(\n    // location.originalHash is set by the viewer when it removes the fragment\n    // from the URL.\n    win.location.originalHash || win.location.hash\n  );\n  const singlePassType = AMP_CONFIG.spt;\n\n  const searchQuery = parseQueryString_(win.location.search);\n\n  if (!rtvVersion) {\n    rtvVersion = getRtvVersion(win, isLocalDev);\n  }\n\n  // The `minified`, `test` and `localDev` properties are replaced\n  // as boolean literals when we run `gulp dist` without the `--fortesting`\n  // flags. This improved DCE on the production file we deploy as the code\n  // paths for localhost/testing/development are eliminated.\n  return {\n    localDev: isLocalDev,\n    // Triggers validation or enable pub level logging. Validation can be\n    // bypassed via #validate=0.\n    // Note that AMP_DEV_MODE flag is used for testing purposes.\n    // Use Array.indexOf instead of Array.includes because of #24219\n    development: !!(\n      ['1', 'actions', 'amp', 'amp4ads', 'amp4email'].indexOf(\n        hashQuery['development']\n      ) >= 0 || win.AMP_DEV_MODE\n    ),\n    examiner: hashQuery['development'] == '2',\n    // amp-geo override\n    geoOverride: hashQuery['amp-geo'],\n    // amp-user-location override\n    userLocationOverride: hashQuery['amp-user-location'],\n    minified: IS_MINIFIED,\n    // Whether document is in an amp-lite viewer. It signal that the user\n    // would prefer to use less bandwidth.\n    lite: searchQuery['amp_lite'] != undefined,\n    test: runningTests,\n    testIe: runningTestsOnIe,\n    log: hashQuery['log'],\n    version: internalRuntimeVersion(),\n    rtvVersion,\n    singlePassType,\n  };\n}\n\n/**\n * Retrieve the `rtvVersion` which will have a numeric prefix\n * denoting canary/prod/experiment (unless `isLocalDev` is true).\n *\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n */\nfunction getRtvVersion(win, isLocalDev) {\n  // If it's local dev then we won't actually have a full version so\n  // just use the version.\n  if (isLocalDev) {\n    return internalRuntimeVersion();\n  }\n\n  if (win.AMP_CONFIG && win.AMP_CONFIG.v) {\n    return win.AMP_CONFIG.v;\n  }\n\n  // Currently `internalRuntimeVersion` and thus `mode.version` contain only\n  // major version. The full version however must also carry the minor version.\n  // We will default to production default `01` minor version for now.\n  // TODO(erwinmombay): decide whether internalRuntimeVersion should contain\n  // minor version.\n  return `01${internalRuntimeVersion()}`;\n}\n\n/**\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n * @visibleForTesting\n */\nexport function getRtvVersionForTesting(win, isLocalDev) {\n  return getRtvVersion(win, isLocalDev);\n}\n\n/** @visibleForTesting */\nexport function resetRtvVersionForTesting() {\n  rtvVersion = '';\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns true if the element is in the array and false otherwise.\n *\n * @param {*} value\n * @param {number=} opt_fromIndex\n * @return {boolean}\n * @this {Array}\n */\nfunction includes(value, opt_fromIndex) {\n  const fromIndex = opt_fromIndex || 0;\n  const len = this.length;\n  let i = fromIndex >= 0 ? fromIndex : Math.max(len + fromIndex, 0);\n  for (; i < len; i++) {\n    const other = this[i];\n    // If value has been found OR (value is NaN AND other is NaN)\n    /*eslint \"no-self-compare\": 0*/\n    if (other === value || (value !== value && other !== other)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Sets the Array.contains polyfill if it does not exist.\n * @param {!Window} win\n */\nexport function install(win) {\n  if (!win.Array.prototype.includes) {\n    win.Object.defineProperty(Array.prototype, 'includes', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: includes,\n    });\n  }\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Parses the number x and returns its sign. For positive x returns 1, for\n * negative, -1. For 0 and -0, returns 0 and -0 respectively. For any number\n * that parses to NaN, returns NaN.\n *\n * @param {number} x\n * @return {number}\n */\nexport function sign(x) {\n  x = Number(x);\n\n  // If x is 0, -0, or NaN, return it.\n  if (!x) {\n    return x;\n  }\n\n  return x > 0 ? 1 : -1;\n}\n\n/**\n * Sets the Math.sign polyfill if it does not exist.\n * @param {!Window} win\n */\nexport function install(win) {\n  if (!win.Math.sign) {\n    win.Object.defineProperty(win.Math, 'sign', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: sign,\n    });\n  }\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst {hasOwnProperty} = Object.prototype;\n\n/**\n * Copies values of all enumerable own properties from one or more source\n * objects (provided as extended arguments to the function) to a target object.\n *\n * @param {!Object} target\n * @param {...Object} var_args\n * @return {!Object}\n */\nexport function assign(target, var_args) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  const output = Object(target);\n  for (let i = 1; i < arguments.length; i++) {\n    const source = arguments[i];\n    if (source != null) {\n      for (const key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n}\n\n/**\n * Sets the Object.assign polyfill if it does not exist.\n * @param {!Window} win\n */\nexport function install(win) {\n  if (!win.Object.assign) {\n    win.Object.defineProperty(win.Object, 'assign', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: assign,\n    });\n  }\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Implements `Object.values` API.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_objects/Object/values.\n *\n * @param {!Object} target\n * @return {!Array<*>}\n */\nexport function values(target) {\n  return Object.keys(target).map(k => target[k]);\n}\n\n/**\n * Sets the Object.values polyfill if it does not exist.\n * @param {!Window} win\n */\nexport function install(win) {\n  if (!win.Object.values) {\n    win.Object.defineProperty(win.Object, 'values', {\n      configurable: true,\n      writable: true,\n      value: values,\n    });\n  }\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from './services';\nimport {devAssert} from './log';\nimport {getServicePromise} from './service';\n\n/**\n * A map of services that delay rendering. The key is the name of the service\n * and the value is a DOM query which is used to check if the service is needed\n * in the current document.\n * Do not add a service unless absolutely necessary.\n *\n * \\   \\  /  \\  /   / /   \\     |   _  \\     |  \\ |  | |  | |  \\ |  |  / _____|\n *  \\   \\/    \\/   / /  ^  \\    |  |_)  |    |   \\|  | |  | |   \\|  | |  |  __\n *   \\            / /  /_\\  \\   |      /     |  . `  | |  | |  . `  | |  | |_ |\n *    \\    /\\    / /  _____  \\  |  |\\  \\----.|  |\\   | |  | |  |\\   | |  |__| |\n *     \\__/  \\__/ /__/     \\__\\ | _| `._____||__| \\__| |__| |__| \\__|  \\______|\n *\n * The equivalent of this list is used for server-side rendering (SSR) and any\n * changes made to it must be made in coordination with caches that implement\n * SSR. For more information on SSR see bit.ly/amp-ssr.\n *\n * @const {!Object<string, string>}\n */\nconst SERVICES = {\n  'amp-dynamic-css-classes': '[custom-element=amp-dynamic-css-classes]',\n  'variant': 'amp-experiment',\n  'amp-story-render': 'amp-story[standalone]',\n};\n\n/**\n * Base class for render delaying services.\n * This should be extended to ensure the service\n * is properly handled\n *\n * @interface\n */\nexport class RenderDelayingService {\n  /**\n   * Function to return a promise for when\n   * it is finished delaying render, and is ready.\n   * NOTE: This should simply return Promise.resolve,\n   * if your service does not need to perform any logic\n   * after being registered.\n   * @return {!Promise}\n   */\n  whenReady() {}\n}\n\n/**\n * Maximum milliseconds to wait for all extensions to load before erroring.\n * @const\n */\nconst LOAD_TIMEOUT = 3000;\n\n/**\n * Detects any render delaying services that are required on the page, and\n * returns a promise with a timeout.\n * @param {!Window} win\n * @return {!Promise<!Array<*>>} resolves to an Array that has the same length\n *     as the detected render delaying services\n */\nexport function waitForServices(win) {\n  const promises = includedServices(win).map(serviceId => {\n    const serviceReadyPromise = getServicePromise(win, serviceId).then(\n      service => {\n        if (service && isRenderDelayingService(service)) {\n          return service.whenReady().then(() => {\n            return service;\n          });\n        }\n        return service;\n      }\n    );\n\n    return Services.timerFor(win).timeoutPromise(\n      LOAD_TIMEOUT,\n      serviceReadyPromise,\n      `Render timeout waiting for service ${serviceId} to be ready.`\n    );\n  });\n  return Promise.all(promises);\n}\n\n/**\n * Returns true if the page has a render delaying service.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function hasRenderDelayingServices(win) {\n  return includedServices(win).length > 0;\n}\n\n/**\n * Function to determine if the passed\n * Object is a Render Delaying Service\n * @param {!Object} service\n * @return {boolean}\n */\nexport function isRenderDelayingService(service) {\n  const maybeRenderDelayingService = /** @type {!RenderDelayingService}*/ (service);\n  return typeof maybeRenderDelayingService.whenReady == 'function';\n}\n\n/**\n * Detects which, if any, render-delaying extensions are included on the page.\n * @param {!Window} win\n * @return {!Array<string>}\n */\nexport function includedServices(win) {\n  /** @const {!Document} */\n  const doc = win.document;\n  devAssert(doc.body);\n\n  return Object.keys(SERVICES).filter(service => {\n    return doc.querySelector(SERVICES[service]);\n  });\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Registration and getter functions for AMP services.\n *\n * Invariant: Service getters never return null for registered services.\n */\n\nimport {Deferred} from './utils/promise';\nimport {dev, devAssert} from './log';\nimport {isExperimentOn} from './experiments';\nimport {toWin} from './types';\n\n/**\n * Holds info about a service.\n * - obj: Actual service implementation when available.\n * - promise: Promise for the obj.\n * - resolve: Function to resolve the promise with the object.\n * - context: Argument for ctor, either a window or an ampdoc.\n * - ctor: Function that constructs and returns the service.\n * @typedef {{\n *   obj: (?Object),\n *   promise: (?Promise),\n *   resolve: (?function(!Object)),\n *   reject: (?function((*))),\n *   context: (?Window|?./service/ampdoc-impl.AmpDoc),\n *   ctor: (?function(new:Object, !Window)|\n *          ?function(new:Object, !./service/ampdoc-impl.AmpDoc)),\n * }}\n */\nlet ServiceHolderDef;\n\n/**\n * This interface provides a `dispose` method that will be called by\n * runtime when a service needs to be disposed of.\n * @interface\n */\nexport class Disposable {\n  /**\n   * Instructs the service to release any resources it might be holding. Can\n   * be called only once in the lifecycle of a service.\n   */\n  dispose() {}\n}\n\n/**\n * Services must implement this interface to be embeddable in FIEs.\n * @interface\n */\nexport class EmbeddableService {\n  /**\n   * Installs a new instance of the service in the given FIE window.\n   * @param {!Window} unusedEmbedWin\n   * @param {!./service/ampdoc-impl.AmpDoc} unusedAmpDoc\n   */\n  static installInEmbedWindow(unusedEmbedWin, unusedAmpDoc) {}\n}\n\n/**\n * Returns a service with the given id. Assumes that it has been constructed\n * already.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id\n * @return {?Object}\n */\nexport function getExistingServiceForDocInEmbedScope(element, id) {\n  // TODO(#22733): completely remove this method once ampdoc-fie launches.\n  const document = element.ownerDocument;\n  const win = toWin(document.defaultView);\n  const topWin = getTopWindow(win);\n  // First, try to resolve via local embed window (if applicable).\n  const isEmbed = win != topWin;\n  const ampdocFieExperimentOn = isExperimentOn(topWin, 'ampdoc-fie');\n  if (isEmbed && !ampdocFieExperimentOn) {\n    if (isServiceRegistered(win, id)) {\n      return getServiceInternal(win, id);\n    }\n    // Fallback from FIE to parent is intentionally unsupported for safety.\n    return null;\n  } else {\n    // Resolve via the element's ampdoc.\n    return getServiceForDocOrNullInternal(element, id);\n  }\n}\n\n/**\n * Installs a service override on amp-doc level.\n * @param {!Window} embedWin\n * @param {string} id\n * @param {!Object} service The service.\n */\nexport function installServiceInEmbedScope(embedWin, id, service) {\n  const topWin = getTopWindow(embedWin);\n  devAssert(\n    embedWin != topWin,\n    'Service override can only be installed in embed window: %s',\n    id\n  );\n  devAssert(\n    !isServiceRegistered(embedWin, id),\n    'Service override has already been installed: %s',\n    id\n  );\n  const ampdocFieExperimentOn = isExperimentOn(topWin, 'ampdoc-fie');\n  if (ampdocFieExperimentOn) {\n    const ampdoc = getAmpdoc(embedWin.document);\n    registerServiceInternal(\n      getAmpdocServiceHolder(ampdoc),\n      ampdoc,\n      id,\n      () => service,\n      /* override */ true\n    );\n  } else {\n    registerServiceInternal(embedWin, embedWin, id, () => service);\n    getServiceInternal(embedWin, id); // Force service to build.\n  }\n}\n\n/**\n * Registers a service given a class to be used as implementation.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {function(new:Object, !Window)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilder(win, id, constructor, opt_instantiate) {\n  win = getTopWindow(win);\n  registerServiceInternal(win, win, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(win, id);\n  }\n}\n\n/**\n * Returns a service and registers it given a class to be used as\n * implementation.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id of the service.\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilderForDoc(\n  nodeOrDoc,\n  id,\n  constructor,\n  opt_instantiate\n) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  registerServiceInternal(holder, ampdoc, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * Reject a service promise.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id\n * @param {*} error\n */\nexport function rejectServicePromiseForDoc(nodeOrDoc, id, error) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  rejectServicePromiseInternal(holder, id, error);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). Users\n * should typically wrap this as a special purpose function (e.g.\n * `Services.vsyncFor(win)`) for type safety and because the factory should not\n * be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getService(win, id) {\n  win = getTopWindow(win);\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. `Services.vsyncFor(win)`) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nexport function getServicePromise(win, id) {\n  return getServicePromiseInternal(win, id);\n}\n\n/**\n * Returns a service or null with the given id.\n * @param {!Window} win\n * @param {string} id\n * @return {?Object} The service.\n */\nexport function getExistingServiceOrNull(win, id) {\n  win = getTopWindow(win);\n  if (isServiceRegistered(win, id)) {\n    return getServiceInternal(win, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Like getServicePromise but returns null if the service was never registered.\n * @param {!Window} win\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNull(win, id) {\n  return getServicePromiseOrNullInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * Expects service `id` to be registered.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {T}\n * @template T\n */\nexport function getServiceForDoc(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  return getServiceInternal(holder, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * If service `id` is not registered, returns null.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id\n * @return {?Object}\n */\nfunction getServiceForDocOrNullInternal(element, id) {\n  const ampdoc = getAmpdoc(element);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  if (isServiceRegistered(holder, id)) {\n    return getServiceInternal(holder, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns a promise for a service for the given id and ampdoc. Also expects\n * a service that has the actual implementation. The promise resolves when\n * the implementation loaded.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {!Promise<!Object>}\n */\nexport function getServicePromiseForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n\n/**\n * Like getServicePromiseForDoc but returns null if the service was never\n * registered for this ampdoc.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNullForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseOrNullInternal(\n    getAmpdocServiceHolder(elementOrAmpDoc),\n    id\n  );\n}\n\n/**\n * Set the parent and top windows on a child window (friendly iframe).\n * @param {!Window} win\n * @param {!Window} parentWin\n */\nexport function setParentWindow(win, parentWin) {\n  win.__AMP_PARENT = parentWin;\n  win.__AMP_TOP = getTopWindow(parentWin);\n}\n\n/**\n * Returns the parent window for a child window (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getParentWindow(win) {\n  return win.__AMP_PARENT || win;\n}\n\n/**\n * Returns the top window where AMP Runtime is installed for a child window\n * (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getTopWindow(win) {\n  return win.__AMP_TOP || (win.__AMP_TOP = win);\n}\n\n/**\n * Returns the parent \"friendly\" iframe if the node belongs to a child window.\n * @param {!Node} node\n * @param {!Window=} opt_topWin\n * @return {?HTMLIFrameElement}\n */\nexport function getParentWindowFrameElement(node, opt_topWin) {\n  const childWin = (node.ownerDocument || node).defaultView;\n  const topWin = opt_topWin || getTopWindow(childWin);\n  if (childWin && childWin != topWin && getTopWindow(childWin) == topWin) {\n    try {\n      return /** @type {?HTMLIFrameElement} */ (childWin.frameElement);\n    } catch (e) {\n      // Ignore the error.\n    }\n  }\n  return null;\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc}\n */\nexport function getAmpdoc(nodeOrDoc) {\n  if (nodeOrDoc.nodeType) {\n    const win = toWin(\n      /** @type {!Document} */ (nodeOrDoc.ownerDocument || nodeOrDoc)\n        .defaultView\n    );\n    return getAmpdocService(win).getAmpDoc(/** @type {!Node} */ (nodeOrDoc));\n  }\n  return /** @type {!./service/ampdoc-impl.AmpDoc} */ (nodeOrDoc);\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc|!Window}\n */\nfunction getAmpdocServiceHolder(nodeOrDoc) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  return ampdoc.isSingleDoc() ? ampdoc.win : ampdoc;\n}\n\n/**\n * This is essentially a duplicate of `ampdoc.js`, but necessary to avoid\n * circular dependencies.\n * @param {!Window} win\n * @return {!./service/ampdoc-impl.AmpDocService}\n */\nfunction getAmpdocService(win) {\n  return /** @type {!./service/ampdoc-impl.AmpDocService} */ (getService(\n    win,\n    'ampdoc'\n  ));\n}\n\n/**\n * Get service `id` from `holder`. Assumes the service\n * has already been registered.\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {Object}\n * @template T\n */\nfunction getServiceInternal(holder, id) {\n  devAssert(\n    isServiceRegistered(holder, id),\n    `Expected service ${id} to be registered`\n  );\n  const services = getServices(holder);\n  const s = services[id];\n  if (!s.obj) {\n    devAssert(s.ctor, `Service ${id} registered without ctor nor impl.`);\n    devAssert(s.context, `Service ${id} registered without context.`);\n    s.obj = new s.ctor(s.context);\n    devAssert(s.obj, `Service ${id} constructed to null.`);\n    s.ctor = null;\n    s.context = null;\n    // The service may have been requested already, in which case we have a\n    // pending promise we need to fulfill.\n    if (s.resolve) {\n      s.resolve(s.obj);\n    }\n  }\n  return s.obj;\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {!Window|!./service/ampdoc-impl.AmpDoc} context Win or AmpDoc.\n * @param {string} id of the service.\n * @param {?function(new:Object, !Window)|?function(new:Object, !./service/ampdoc-impl.AmpDoc)} ctor Constructor function to new the service. Called with context.\n * @param {boolean=} opt_override\n */\nfunction registerServiceInternal(holder, context, id, ctor, opt_override) {\n  const services = getServices(holder);\n  let s = services[id];\n\n  if (!s) {\n    s = services[id] = {\n      obj: null,\n      promise: null,\n      resolve: null,\n      reject: null,\n      context: null,\n      ctor: null,\n    };\n  }\n\n  if (!opt_override && (s.ctor || s.obj)) {\n    // Service already registered.\n    return;\n  }\n\n  s.ctor = ctor;\n  s.context = context;\n\n  // The service may have been requested already, in which case there is a\n  // pending promise that needs to fulfilled.\n  if (s.resolve) {\n    // getServiceInternal will resolve the promise.\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nfunction getServicePromiseInternal(holder, id) {\n  const cached = getServicePromiseOrNullInternal(holder, id);\n  if (cached) {\n    return cached;\n  }\n  // Service is not registered.\n\n  // TODO(@cramforce): Add a check that if the element is eventually registered\n  // that the service is actually provided and this promise resolves.\n  const services = getServices(holder);\n  services[id] = emptyServiceHolderWithPromise();\n  return /** @type {!Promise<!Object>} */ (services[id].promise);\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @param {*} error\n */\nfunction rejectServicePromiseInternal(holder, id, error) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.reject) {\n      s.reject(error);\n    }\n    return;\n  }\n\n  services[id] = emptyServiceHolderWithPromise();\n  services[id].reject(error);\n}\n\n/**\n * Returns a promise for service `id` if the service has been registered\n * on `holder`.\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {?Promise<!Object>}\n */\nfunction getServicePromiseOrNullInternal(holder, id) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.promise) {\n      return s.promise;\n    } else {\n      // Instantiate service if not already instantiated.\n      getServiceInternal(holder, id);\n      return (s.promise = Promise.resolve(/** @type {!Object} */ (s.obj)));\n    }\n  }\n  return null;\n}\n\n/**\n * Returns the object that holds the services registered in a holder.\n * @param {!Object} holder\n * @return {!Object<string,!ServiceHolderDef>}\n */\nfunction getServices(holder) {\n  let services = holder.__AMP_SERVICES;\n  if (!services) {\n    services = holder.__AMP_SERVICES = {};\n  }\n  return services;\n}\n\n/**\n * Whether the specified service implements `Disposable` interface.\n * @param {!Object} service\n * @return {boolean}\n */\nexport function isDisposable(service) {\n  return typeof service.dispose == 'function';\n}\n\n/**\n * Asserts that the specified service implements `Disposable` interface and\n * typecasts the instance to `Disposable`.\n * @param {!Object} service\n * @return {!Disposable}\n */\nexport function assertDisposable(service) {\n  devAssert(isDisposable(service), 'required to implement Disposable');\n  return /** @type {!Disposable} */ (service);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * ampdoc scope.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n */\nexport function disposeServicesForDoc(ampdoc) {\n  disposeServicesInternal(ampdoc);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * embed scope.\n * @param {!Window} embedWin\n */\nexport function disposeServicesForEmbed(embedWin) {\n  disposeServicesInternal(embedWin);\n}\n\n/**\n * @param {!Object} holder Object holding the service instances.\n */\nfunction disposeServicesInternal(holder) {\n  // TODO(dvoytenko): Consider marking holder as destroyed for later-arriving\n  // service to be canceled automatically.\n  const services = getServices(holder);\n  for (const id in services) {\n    if (!Object.prototype.hasOwnProperty.call(services, id)) {\n      continue;\n    }\n    const serviceHolder = services[id];\n    if (serviceHolder.obj) {\n      disposeServiceInternal(id, serviceHolder.obj);\n    } else if (serviceHolder.promise) {\n      serviceHolder.promise.then(instance =>\n        disposeServiceInternal(id, instance)\n      );\n    }\n  }\n}\n\n/**\n * @param {string} id\n * @param {!Object} service\n */\nfunction disposeServiceInternal(id, service) {\n  if (!isDisposable(service)) {\n    return;\n  }\n  try {\n    assertDisposable(service).dispose();\n  } catch (e) {\n    // Ensure that a failure to dispose a service does not disrupt other\n    // services.\n    dev().error('SERVICE', 'failed to dispose service', id, e);\n  }\n}\n\n/**\n * Adopts an embeddable (implements `EmbeddableService` interface) service\n * in embed scope.\n * @param {!Window} embedWin\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} serviceClass\n * @suppress {missingProperties}\n * @return {boolean}\n */\nexport function installServiceInEmbedIfEmbeddable(embedWin, serviceClass) {\n  const isEmbeddableService =\n    typeof serviceClass.installInEmbedWindow === 'function';\n  if (!isEmbeddableService) {\n    return false;\n  }\n  const frameElement = dev().assertElement(\n    embedWin.frameElement,\n    'frameElement not found for embed'\n  );\n  const ampdoc = getAmpdoc(frameElement);\n  serviceClass.installInEmbedWindow(embedWin, ampdoc);\n  return true;\n}\n\n/**\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceForEmbedDoc(ampdoc, id) {\n  const service = getServiceInternal(\n    getAmpdocServiceHolder(devAssert(ampdoc.getParent())),\n    id\n  );\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    () => service\n  );\n}\n\n/**\n * Resets a single service, so it gets recreated on next getService invocation.\n * @param {!Object} holder\n * @param {string} id of the service.\n */\nexport function resetServiceForTesting(holder, id) {\n  if (holder.__AMP_SERVICES) {\n    holder.__AMP_SERVICES[id] = null;\n  }\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {boolean}\n */\nfunction isServiceRegistered(holder, id) {\n  const service = holder.__AMP_SERVICES && holder.__AMP_SERVICES[id];\n  // All registered services must have an implementation or a constructor.\n  return !!(service && (service.ctor || service.obj));\n}\n\n/** @return {!ServiceHolderDef} */\nfunction emptyServiceHolderWithPromise() {\n  const deferred = new Deferred();\n  const {promise, resolve, reject} = deferred;\n  promise.catch(() => {}); // avoid uncaught exception when service gets rejected\n  return {\n    obj: null,\n    promise,\n    resolve,\n    reject,\n    context: null,\n    ctor: null,\n  };\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  getAmpdoc,\n  getExistingServiceForDocInEmbedScope,\n  getExistingServiceOrNull,\n  getService,\n  getServiceForDoc,\n  getServicePromiseForDoc,\n} from './service';\nimport {\n  getElementServiceForDoc,\n  getElementServiceIfAvailable,\n  getElementServiceIfAvailableForDoc,\n  getElementServiceIfAvailableForDocInEmbedScope,\n} from './element-service';\n\n/** @typedef {!../extensions/amp-subscriptions/0.1/amp-subscriptions.SubscriptionService} */\nexport let SubscriptionService;\n\nexport class Services {\n  /**\n   * Hint: Add extensions folder path to compile.js with\n   * warnings cannot find modules.\n   */\n\n  /**\n   * Returns a promise for the Access service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>} */ (getElementServiceForDoc(\n      element,\n      'access',\n      'amp-access'\n    ));\n  }\n\n  /**\n   * Returns a promise for the Access service or a promise for null if the\n   * service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'access',\n      'amp-access'\n    ));\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!SubscriptionService>}\n   */\n  static subscriptionsServiceForDoc(element) {\n    return /** @type {!Promise<!SubscriptionService>} */ (getElementServiceForDoc(\n      element,\n      'subscriptions',\n      'amp-subscriptions'\n    ));\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?SubscriptionService>}\n   */\n  static subscriptionsServiceForDocOrNull(element) {\n    return /** @type {!Promise<?SubscriptionService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'subscriptions',\n      'amp-subscriptions'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/action-impl.ActionService}\n   */\n  static actionServiceForDoc(element) {\n    return /** @type {!./service/action-impl.ActionService} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'action'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/standard-actions-impl.StandardActions}\n   */\n  static standardActionsForDoc(element) {\n    return /** @type {!./service/standard-actions-impl.StandardActions} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'standard-actions'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>}\n   */\n  static activityForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>} */ (getElementServiceForDoc(\n      element,\n      'activity',\n      'amp-analytics'\n    ));\n  }\n\n  /**\n   * Returns the global instance of the `AmpDocService` service that can be\n   * used to resolve an ampdoc for any node: either in the single-doc or\n   * shadow-doc environment.\n   * @param {!Window} window\n   * @return {!./service/ampdoc-impl.AmpDocService}\n   */\n  static ampdocServiceFor(window) {\n    return /** @type {!./service/ampdoc-impl.AmpDocService} */ (getService(\n      window,\n      'ampdoc'\n    ));\n  }\n\n  /**\n   * Returns the AmpDoc for the specified context node.\n   * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrAmpDoc\n   * @return {!./service/ampdoc-impl.AmpDoc}\n   */\n  static ampdoc(nodeOrAmpDoc) {\n    return getAmpdoc(nodeOrAmpDoc);\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @param {boolean=} loadAnalytics\n   * @return {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDoc(element, loadAnalytics = false) {\n    if (loadAnalytics) {\n      // Get Extensions service and force load analytics extension.\n      const ampdoc = getAmpdoc(element);\n      Services.extensionsFor(ampdoc.win)./*OK*/ installExtensionForDoc(\n        ampdoc,\n        'amp-analytics'\n      );\n    }\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (getElementServiceForDoc(\n      element,\n      'amp-analytics-instrumentation',\n      'amp-analytics'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'amp-analytics-instrumentation',\n      'amp-analytics'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/batched-xhr-impl.BatchedXhr}\n   */\n  static batchedXhrFor(window) {\n    return /** @type {!./service/batched-xhr-impl.BatchedXhr} */ (getService(\n      window,\n      'batched-xhr'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>}\n   */\n  static bindForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>} */ (getElementServiceIfAvailableForDocInEmbedScope(\n      element,\n      'bind',\n      'amp-bind'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/cid-impl.CidDef>}\n   */\n  static cidForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/cid-impl.CidDef>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'cid'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/navigation.Navigation}\n   */\n  static navigationForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/navigation.Navigation} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'navigation'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>}\n   */\n  static loaderServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>} */ (getElementServiceForDoc(\n      element,\n      'loader',\n      'amp-loader'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>}\n   */\n  static standaloneServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>} */ (getElementServiceForDoc(\n      element,\n      'standalone',\n      'amp-standalone'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/crypto-impl.Crypto}\n   */\n  static cryptoFor(window) {\n    return /** @type {!./service/crypto-impl.Crypto} */ (getService(\n      window,\n      'crypto'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/document-info-impl.DocumentInfoDef} Info about the doc\n   */\n  static documentInfoForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/document-info-impl.DocInfo} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'documentInfo'\n    )).get();\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/extensions-impl.Extensions}\n   */\n  static extensionsFor(window) {\n    return /** @type {!./service/extensions-impl.Extensions} */ (getService(\n      window,\n      'extensions'\n    ));\n  }\n\n  /**\n   * Returns a service to register callbacks we wish to execute when an\n   * amp-form is submitted.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>}\n   */\n  static formSubmitForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'form-submit-service'\n    ));\n  }\n\n  /**\n   * Returns service to listen for `hidden` attribute mutations.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/hidden-observer-impl.HiddenObserver}\n   */\n  static hiddenObserverForDoc(element) {\n    return /** @type {!./service/hidden-observer-impl.HiddenObserver} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'hidden-observer'\n    ));\n  }\n\n  /**\n   * Returns service implemented in service/history-impl.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/history-impl.History}\n   */\n  static historyForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/history-impl.History} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'history'\n    ));\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!./input.Input}\n   */\n  static inputFor(win) {\n    return getService(win, 'input');\n  }\n\n  /**s\n   * Returns a promise for the Inputmask service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>}\n   */\n  static inputmaskServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'inputmask',\n      'amp-inputmask'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/owners-interface.OwnersInterface}\n   */\n  static ownersForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/owners-interface.OwnersInterface} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'owners'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceFor(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (getService(\n      window,\n      'performance'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceForOrNull(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (getExistingServiceOrNull(\n      window,\n      'performance'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/platform-impl.Platform}\n   */\n  static platformFor(window) {\n    return /** @type {!./service/platform-impl.Platform} */ (getService(\n      window,\n      'platform'\n    ));\n  }\n\n  /**\n   * Not installed by default; must be installed in extension code before use.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/position-observer/position-observer-impl.PositionObserver}\n   * @throws If the service is not installed.\n   */\n  static positionObserverForDoc(element) {\n    return /** @type {!./service/position-observer/position-observer-impl.PositionObserver} */ (getServiceForDoc(\n      element,\n      'position-observer'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/resources-interface.ResourcesInterface}\n   */\n  static resourcesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/resources-interface.ResourcesInterface} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'resources'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/resources-interface.ResourcesInterface>}\n   */\n  static resourcesPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/resources-interface.ResourcesInterface>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'resources'\n    ));\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?{incomingFragment: string, outgoingFragment: string}>}\n   */\n  static shareTrackingForOrNull(win) {\n    return /** @type {!Promise<?{incomingFragment: string, outgoingFragment: string}>} */ (getElementServiceIfAvailable(\n      win,\n      'share-tracking',\n      'amp-share-tracking',\n      true\n    ));\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/variable-service.StoryVariableDef>}\n   */\n  static storyVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/variable-service.StoryVariableDef>} */\n      (getElementServiceIfAvailable(win, 'story-variable', 'amp-story', true))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService}\n   */\n  static storyVariableService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService} */\n      (getExistingServiceOrNull(win, 'story-variable'))\n    );\n  }\n\n  /**\n   * Version of the story store service depends on which version of amp-story\n   * the publisher is loading. They all have the same implementation.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService|?../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService>}\n   */\n  static storyStoreServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService|?../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService>} */\n      (getElementServiceIfAvailable(win, 'story-store', 'amp-story'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService}\n   */\n  static storyStoreService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService} */\n      (getExistingServiceOrNull(win, 'story-store'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService}\n   */\n  static storyMediaQueryService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService} */\n      (getExistingServiceOrNull(win, 'story-media-query'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService}\n   */\n  static storyRequestService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService} */\n      (getExistingServiceOrNull(win, 'story-request'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService}\n   */\n  static mediaPerformanceMetricsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService} */\n      (getExistingServiceOrNull(win, 'media-performance-metrics'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!Promise<?./service/localization.LocalizationService>}\n   */\n  static localizationServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?./service/localization.LocalizationService>} */\n      (getElementServiceIfAvailable(win, 'localization', 'amp-story', true))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!./service/localization.LocalizationService}\n   */\n  static localizationService(win) {\n    return getService(win, 'localization');\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>}\n   */\n  static storyAnalyticsServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>} */\n      (getElementServiceIfAvailable(win, 'story-analytics', 'amp-story', true))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService}\n   */\n  static storyAnalyticsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService} */\n      (getExistingServiceOrNull(win, 'story-analytics'))\n    );\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService}\n   */\n  static storyStoreServiceV01(win) {\n    return getService(win, 'story-store');\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!../extensions/amp-story/0.1/amp-story-request-service.AmpStoryRequestService}\n   */\n  static storyRequestServiceV01(win) {\n    return getService(win, 'story-request-v01');\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?./service/localization.LocalizationService>}\n   */\n  static localizationServiceForOrNullV01(win) {\n    return (\n      /** @type {!Promise<?./service/localization.LocalizationService>} */\n      (getElementServiceIfAvailable(win, 'localization-v01', 'amp-story', true))\n    );\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!./service/localization.LocalizationService}\n   */\n  static localizationServiceV01(win) {\n    return getService(win, 'localization-v01');\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-viewer-integration/0.1/variable-service.ViewerIntegrationVariableDef>}\n   */\n  static viewerIntegrationVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-viewer-integration/0.1/variable-service.ViewerIntegrationVariableDef>} */\n      (getElementServiceIfAvailable(\n        win,\n        'viewer-integration-variable',\n        'amp-viewer-integration',\n        true\n      ))\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>}\n   */\n  static webAnimationServiceFor(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>} */\n      (getElementServiceForDoc(element, 'web-animation', 'amp-animation'))\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   */\n  static storageForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'storage'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/template-impl.Templates}\n   */\n  static templatesFor(window) {\n    return /** @type {!./service/template-impl.Templates} */ (getService(\n      window,\n      'templates'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/timer-impl.Timer}\n   */\n  static timerFor(window) {\n    // TODO(alabiaga): This will always return the top window's Timer service.\n    return /** @type {!./service/timer-impl.Timer} */ (getService(\n      window,\n      'timer'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-replacements-impl.UrlReplacements}\n   */\n  static urlReplacementsForDoc(element) {\n    return /** @type {!./service/url-replacements-impl.UrlReplacements} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'url-replace'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>}\n   */\n  static userNotificationManagerForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>} */\n      (getElementServiceForDoc(\n        element,\n        'userNotificationManager',\n        'amp-user-notification'\n      ))\n    );\n  }\n\n  /**\n   * Returns a promise for the consentPolicy Service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>}\n   */\n  static consentPolicyServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>} */\n      (getElementServiceIfAvailableForDoc(\n        element,\n        'consentPolicyManager',\n        'amp-consent'\n      ))\n    );\n  }\n\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>}\n   */\n  static geoForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'geo',\n      'amp-geo',\n      true\n    ));\n  }\n\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-user-location/0.1/user-location-service.UserLocationService>}\n   */\n  static userLocationForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-user-location/0.1/user-location-service.UserLocationService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'user-location',\n      'amp-user-location',\n      true\n    ));\n  }\n\n  /**\n   * Unlike most service getters, passing `Node` is necessary for some FIE-scope\n   * services since sometimes we only have the FIE Document for context.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-impl.Url}\n   */\n  static urlForDoc(element) {\n    return /** @type {!./service/url-impl.Url} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'url'\n    ));\n  }\n\n  /**\n   * Returns a promise for the experiment variants or a promise for null if it\n   * is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>}\n   */\n  static variantsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'variant',\n      'amp-experiment',\n      true\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/video-manager-impl.VideoManager}\n   */\n  static videoManagerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/video-manager-impl.VideoManager} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'video-manager'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-viewer-assistance/0.1/amp-viewer-assistance.AmpViewerAssistance>}\n   */\n  static viewerAssistanceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-viewer-assistance/0.1/amp-viewer-assistance.AmpViewerAssistance>} */\n      (getElementServiceIfAvailableForDoc(\n        element,\n        'amp-viewer-assistance',\n        'amp-viewer-assistance'\n      ))\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewer-interface.ViewerInterface}\n   */\n  static viewerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewer-interface.ViewerInterface} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'viewer'\n    ));\n  }\n\n  /**\n   * Returns promise for the viewer. This is an unusual case and necessary only\n   * for services that need reference to the viewer before it has been\n   * initialized. Most of the code, however, just should use `viewerForDoc`.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/viewer-interface.ViewerInterface>}\n   */\n  static viewerPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/viewer-interface.ViewerInterface>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'viewer'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/vsync-impl.Vsync}\n   */\n  static vsyncFor(window) {\n    return /** @type {!./service/vsync-impl.Vsync} */ (getService(\n      window,\n      'vsync'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewport/viewport-interface.ViewportInterface}\n   */\n  static viewportForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewport/viewport-interface.ViewportInterface} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'viewport'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/xhr-impl.Xhr}\n   */\n  static xhrFor(window) {\n    return /** @type {!./service/xhr-impl.Xhr} */ (getService(window, 'xhr'));\n  }\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert, userAssert} from './log';\n\n/**\n * A single source within a srcset. Only one: width or DPR can be specified at\n * a time.\n * @typedef {{\n *   url: string,\n *   width: (number|undefined),\n *   dpr: (number|undefined)\n * }}\n */\nlet SrcsetSourceDef;\n\n/**\n * General grammar: (URL [NUM[w|x]],)*\n * Example 1: \"image1.png 100w, image2.png 50w\"\n * Example 2: \"image1.png 2x, image2.png\"\n * Example 3: \"image1,100w.png 100w, image2.png 50w\"\n */\nconst srcsetRegex = /(\\S+)(?:\\s+(?:(-?\\d+(?:\\.\\d+)?)([a-zA-Z]*)))?\\s*(?:,|$)/g;\n\n/**\n * Extracts `srcset` and fallbacks to `src` if not available.\n * @param {!Element} element\n * @return {!Srcset}\n */\nexport function srcsetFromElement(element) {\n  const srcsetAttr = element.getAttribute('srcset');\n  if (srcsetAttr) {\n    return parseSrcset(srcsetAttr);\n  }\n  // We can't push `src` via `parseSrcset` because URLs in `src` are not always\n  // RFC compliant and can't be easily parsed as an `srcset`. For instance,\n  // they sometimes contain space characters.\n  const srcAttr = userAssert(\n    element.getAttribute('src'),\n    'Either non-empty \"srcset\" or \"src\" attribute must be specified: %s',\n    element\n  );\n  return srcsetFromSrc(srcAttr);\n}\n\n/**\n * Creates a Srcset from a `src` attribute value.\n * @param {string} src\n * @return {!Srcset}\n */\nexport function srcsetFromSrc(src) {\n  return new Srcset([{url: src, width: undefined, dpr: 1}]);\n}\n\n/**\n * Parses the text representation of srcset into Srcset object.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#Attributes.\n * See http://www.w3.org/html/wg/drafts/html/master/semantics.html#attr-img-srcset.\n * @param {string} s\n * @return {!Srcset}\n */\nexport function parseSrcset(s) {\n  const sources = [];\n  let match;\n  while ((match = srcsetRegex.exec(s))) {\n    const url = match[1];\n    let width, dpr;\n    if (match[2]) {\n      const type = match[3].toLowerCase();\n      if (type == 'w') {\n        width = parseInt(match[2], 10);\n      } else if (type == 'x') {\n        dpr = parseFloat(match[2]);\n      } else {\n        continue;\n      }\n    } else {\n      // If no \"w\" or \"x\" specified, we assume it's \"1x\".\n      dpr = 1;\n    }\n    sources.push({url, width, dpr});\n  }\n  return new Srcset(sources);\n}\n\n/**\n * A srcset object contains one or more sources.\n *\n * There are two types of sources: width-based and DPR-based. Only one type\n * of sources allowed to be specified within a single srcset. Depending on a\n * usecase, the components are free to choose any source that best corresponds\n * to the required rendering quality and network and CPU conditions. See\n * \"select\" method for details on how this selection is performed.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#Attributes\n */\nexport class Srcset {\n  /**\n   * @param {!Array<!SrcsetSourceDef>} sources\n   */\n  constructor(sources) {\n    userAssert(sources.length > 0, 'Srcset must have at least one source');\n    /** @private @const {!Array<!SrcsetSourceDef>} */\n    this.sources_ = sources;\n\n    // Only one type of source specified can be used - width or DPR.\n    let hasWidth = false;\n    let hasDpr = false;\n    for (let i = 0; i < sources.length; i++) {\n      const source = sources[i];\n      hasWidth = hasWidth || !!source.width;\n      hasDpr = hasDpr || !!source.dpr;\n    }\n    userAssert(\n      !!(hasWidth ^ hasDpr),\n      'Srcset must have width or dpr sources, but not both'\n    );\n\n    // Source and assert duplicates.\n    sources.sort(hasWidth ? sortByWidth : sortByDpr);\n\n    /** @private @const {boolean} */\n    this.widthBased_ = hasWidth;\n  }\n\n  /**\n   * Performs selection for specified width and DPR. Here, width is the width\n   * in screen pixels and DPR is the device-pixel-ratio or pixel density of\n   * the device. Depending on the circumstances, such as low network conditions,\n   * it's possible to manipulate the result of this method by passing a lower\n   * DPR value.\n   *\n   * The source selection depends on whether this is width-based or DPR-based\n   * srcset.\n   *\n   * In a width-based source, the source's width is the physical width of a\n   * resource (e.g. an image). Depending on the provided DPR, this width is\n   * converted to the screen pixels as following:\n   *   pixelWidth = sourceWidth / DPR\n   *\n   * Then, the source closest to the requested \"width\" is selected using\n   * the \"pixelWidth\". The slight preference is given to the bigger sources to\n   * ensure the most optimal quality.\n   *\n   * In a DPR-based source, the source's DPR is used to return the source that\n   * is closest to the requested DPR.\n   *\n   * Based on\n   * http://www.w3.org/html/wg/drafts/html/master/semantics.html#attr-img-srcset.\n   * @param {number} width\n   * @param {number} dpr\n   * @return {string}\n   */\n  select(width, dpr) {\n    devAssert(width, 'width=%s', width);\n    devAssert(dpr, 'dpr=%s', dpr);\n    let index = 0;\n    if (this.widthBased_) {\n      index = this.selectByWidth_(width * dpr);\n    } else {\n      index = this.selectByDpr_(dpr);\n    }\n    return this.sources_[index].url;\n  }\n\n  /**\n   * @param {number} width\n   * @return {number}\n   * @private\n   */\n  selectByWidth_(width) {\n    const sources = this.sources_;\n    let minIndex = 0;\n    let minScore = Infinity;\n    let minWidth = Infinity;\n\n    for (let i = 0; i < sources.length; i++) {\n      const sWidth = sources[i].width;\n      const score = Math.abs(sWidth - width);\n\n      // Select the one that is closer with a slight preference toward larger\n      // widths. If smaller size is closer, enforce minimum ratio to ensure\n      // image isn't too distorted.\n      if (score <= minScore * 1.1 || width / minWidth > 1.2) {\n        minIndex = i;\n        minScore = score;\n        minWidth = sWidth;\n      } else {\n        break;\n      }\n    }\n    return minIndex;\n  }\n\n  /**\n   * @param {number} dpr\n   * @return {number}\n   * @private\n   */\n  selectByDpr_(dpr) {\n    const sources = this.sources_;\n    let minIndex = 0;\n    let minScore = Infinity;\n\n    for (let i = 0; i < sources.length; i++) {\n      const score = Math.abs(sources[i].dpr - dpr);\n      if (score <= minScore) {\n        minIndex = i;\n        minScore = score;\n      } else {\n        break;\n      }\n    }\n    return minIndex;\n  }\n\n  /**\n   * Returns all URLs in the srcset.\n   * @return {!Array<string>}\n   */\n  getUrls() {\n    return this.sources_.map(s => s.url);\n  }\n\n  /**\n   * Reconstructs the string expression for this srcset.\n   * @param {function(string):string=} opt_mapper\n   * @return {string}\n   */\n  stringify(opt_mapper) {\n    const res = [];\n    const sources = this.sources_;\n    for (let i = 0; i < sources.length; i++) {\n      const source = sources[i];\n      let src = source.url;\n      if (opt_mapper) {\n        src = opt_mapper(src);\n      }\n      if (this.widthBased_) {\n        src += ` ${source.width}w`;\n      } else {\n        src += ` ${source.dpr}x`;\n      }\n      res.push(src);\n    }\n    return res.join(', ');\n  }\n}\n\n/**\n * Sorts by width\n *\n * @param {number} s1\n * @param {number} s2\n * @return {number}\n */\nfunction sortByWidth(s1, s2) {\n  userAssert(s1.width != s2.width, 'Duplicate width: %s', s1.width);\n  return s1.width - s2.width;\n}\n\n/**\n * Sorts by dpr\n *\n * @param {!Object} s1\n * @param {!Object} s2\n * @return {number}\n */\nfunction sortByDpr(s1, s2) {\n  userAssert(s1.dpr != s2.dpr, 'Duplicate dpr: %s', s1.dpr);\n  return s1.dpr - s2.dpr;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {string} _match\n * @param {string} character\n * @return {string}\n */\nfunction toUpperCase(_match, character) {\n  return character.toUpperCase();\n}\n\n/**\n * @param {string} match\n * @return {string}\n */\nfunction prependDashAndToLowerCase(match) {\n  return '-' + match.toLowerCase();\n}\n\n/**\n * @param {string} name Attribute name containing dashes.\n * @return {string} Dashes removed and successive character sent to upper case.\n * visibleForTesting\n */\nexport function dashToCamelCase(name) {\n  return name.replace(/-([a-z])/g, toUpperCase);\n}\n\n/**\n * Converts a string that is in camelCase to one that is in dash-case.\n *\n * @param {string} string The string to convert.\n * @return {string} The string in dash-case.\n */\nexport function camelCaseToDash(string) {\n  return string.replace(/(?!^)[A-Z]/g, prependDashAndToLowerCase);\n}\n\n/**\n * @param {string} name Attribute name with dashes\n * @return {string} Dashes replaced by underlines.\n */\nexport function dashToUnderline(name) {\n  return name.replace('-', '_');\n}\n\n/**\n * Polyfill for String.prototype.endsWith.\n * @param {string} string\n * @param {string} suffix\n * @return {boolean}\n */\nexport function endsWith(string, suffix) {\n  const index = string.length - suffix.length;\n  return index >= 0 && string.indexOf(suffix, index) == index;\n}\n\n/**\n * Polyfill for String.prototype.startsWith.\n * @param {string} string\n * @param {string} prefix\n * @return {boolean}\n */\nexport function startsWith(string, prefix) {\n  if (prefix.length > string.length) {\n    return false;\n  }\n  return string.lastIndexOf(prefix, 0) == 0;\n}\n\n/**\n * Polyfill for String.prototype.includes.\n * @param {string} string\n * @param {string} substring\n * @param {number=} start\n * @return {boolean}\n */\nexport function includes(string, substring, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n  if (start + substring.length > string.length) {\n    return false;\n  }\n  return string.indexOf(substring, start) !== -1;\n}\n\n/**\n * Expands placeholders in a given template string with values.\n *\n * Placeholders use ${key-name} syntax and are replaced with the value\n * returned from the given getter function.\n *\n * @param {string} template The template string to expand.\n * @param {function(string):*} getter Function used to retrieve a value for a\n *   placeholder. Returns values will be coerced into strings.\n * @param {number=} opt_maxIterations Number of times to expand the template.\n *   Defaults to 1, but should be set to a larger value your placeholder tokens\n *   can be expanded to other placeholder tokens. Take caution with large values\n *   as recursively expanding a string can be exponentially expensive.\n * @return {string}\n */\nexport function expandTemplate(template, getter, opt_maxIterations) {\n  const maxIterations = opt_maxIterations || 1;\n  for (let i = 0; i < maxIterations; i++) {\n    let matches = 0;\n    template = template.replace(/\\${([^}]*)}/g, (_a, b) => {\n      matches++;\n      return getter(b);\n    });\n    if (!matches) {\n      break;\n    }\n  }\n  return template;\n}\n\n/**\n * Hash function djb2a\n * This is intended to be a simple, fast hashing function using minimal code.\n * It does *not* have good cryptographic properties.\n * @param {string} str\n * @return {string} 32-bit unsigned hash of the string\n */\nexport function stringHash32(str) {\n  const {length} = str;\n  let hash = 5381;\n  for (let i = 0; i < length; i++) {\n    hash = (hash * 33) ^ str.charCodeAt(i);\n  }\n  // Convert from 32-bit signed to unsigned.\n  return String(hash >>> 0);\n}\n\n/**\n * Trims a string on the end, removing whitespace characters.\n * @param {string} str  A string to trim.\n * @return {string} The string, with trailing whitespace removed.\n */\nexport function trimEnd(str) {\n  // TODO(sparhami) Does this get inlined for an ES2019 build?\n  if (str.trimEnd) {\n    return str.trimEnd();\n  }\n\n  return ('_' + str).trim().slice(1);\n}\n\n/**\n * Trims any leading whitespace from a string.\n * @param {string} str  A string to trim.\n * @return {string} The string, with leading whitespace removed.\n */\nexport function trimStart(str) {\n  if (str.trimStart) {\n    return str.trimStart();\n  }\n\n  return (str + '_').trim().slice(0, -1);\n}\n\n/**\n * Pads the beginning of a string with a substring to a target length.\n * @param {string} s\n * @param {number} targetLength\n * @param {string} padString\n * @return {*} TODO(#23582): Specify return type\n */\nexport function padStart(s, targetLength, padString) {\n  if (s.length >= targetLength) {\n    return s;\n  }\n  targetLength = targetLength - s.length;\n  let padding = padString;\n  while (targetLength > padding.length) {\n    padding += padString;\n  }\n  return padding.slice(0, targetLength) + s;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {CommonSignals} from './common-signals';\nimport {Services} from './services';\nimport {dev, devAssert, rethrowAsync} from './log';\nimport {getAmpdoc} from './service';\nimport {insertAfterOrAtStart, waitForBodyOpenPromise} from './dom';\nimport {map} from './utils/object';\nimport {setStyles} from './style';\nimport {waitForServices} from './render-delaying-services';\n\nconst TRANSFORMER_PROP = '__AMP_CSS_TR';\nconst STYLE_MAP_PROP = '__AMP_CSS_SM';\n\n/**\n * Adds the given css text to the given ampdoc.\n *\n * The style tags will be at the beginning of the head before all author\n * styles. One element can be the main runtime CSS. This is guaranteed\n * to always be the first stylesheet in the doc.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc The ampdoc that should get the new styles.\n * @param {string} cssText\n * @param {?function(!Element)|undefined} cb Called when the new styles are available.\n *     Not using a promise, because this is synchronous when possible.\n *     for better performance.\n * @param {boolean=} opt_isRuntimeCss If true, this style tag will be inserted\n *     as the first element in head and all style elements will be positioned\n *     after.\n * @param {string=} opt_ext\n * @return {!Element}\n */\nexport function installStylesForDoc(\n  ampdoc,\n  cssText,\n  cb,\n  opt_isRuntimeCss,\n  opt_ext\n) {\n  const cssRoot = ampdoc.getHeadNode();\n  const style = insertStyleElement(\n    cssRoot,\n    maybeTransform(cssRoot, cssText),\n    opt_isRuntimeCss || false,\n    opt_ext || null\n  );\n\n  if (cb) {\n    const rootNode = ampdoc.getRootNode();\n    // Styles aren't always available synchronously. E.g. if there is a\n    // pending style download, it will have to finish before the new\n    // style is visible.\n    // For this reason we poll until the style becomes available.\n    // Sync case.\n    if (styleLoaded(rootNode, style)) {\n      cb(style);\n      return style;\n    }\n    // Poll until styles are available.\n    const interval = setInterval(() => {\n      if (styleLoaded(rootNode, style)) {\n        clearInterval(interval);\n        cb(style);\n      }\n    }, 4);\n  }\n  return style;\n}\n\n/**\n * Adds the given css text to the given document.\n * TODO(dvoytenko, #22733): Remove this method once FIE/ampdoc migration is\n * done.\n *\n * @param {!Document} doc The document that should get the new styles.\n * @param {string} cssText\n * @param {?function(!Element)|undefined} cb Called when the new styles are\n *     available. Not using a promise, because this is synchronous when\n *     possible. for better performance.\n * @param {boolean=} opt_isRuntimeCss If true, this style tag will be inserted\n *     as the first element in head and all style elements will be positioned\n *     after.\n * @param {string=} opt_ext\n * @return {!Element}\n */\nexport function installStylesLegacy(\n  doc,\n  cssText,\n  cb,\n  opt_isRuntimeCss,\n  opt_ext\n) {\n  const style = insertStyleElement(\n    dev().assertElement(doc.head),\n    cssText,\n    opt_isRuntimeCss || false,\n    opt_ext || null\n  );\n\n  if (cb) {\n    // Styles aren't always available synchronously. E.g. if there is a\n    // pending style download, it will have to finish before the new\n    // style is visible.\n    // For this reason we poll until the style becomes available.\n    // Sync case.\n    if (styleLoaded(doc, style)) {\n      cb(style);\n      return style;\n    }\n    // Poll until styles are available.\n    const interval = setInterval(() => {\n      if (styleLoaded(doc, style)) {\n        clearInterval(interval);\n        cb(style);\n      }\n    }, 4);\n  }\n  return style;\n}\n\n/**\n * Creates the properly configured style element.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @param {boolean} isRuntimeCss\n * @param {?string} ext\n * @return {!Element}\n */\nfunction insertStyleElement(cssRoot, cssText, isRuntimeCss, ext) {\n  let styleMap = cssRoot[STYLE_MAP_PROP];\n  if (!styleMap) {\n    styleMap = cssRoot[STYLE_MAP_PROP] = map();\n  }\n\n  const isExtCss =\n    !isRuntimeCss && (ext && ext != 'amp-custom' && ext != 'amp-keyframes');\n  const key = isRuntimeCss\n    ? 'amp-runtime'\n    : isExtCss\n    ? `amp-extension=${ext}`\n    : null;\n\n  // Check if it has already been created or discovered.\n  if (key) {\n    const existing = getExistingStyleElement(cssRoot, styleMap, key);\n    if (existing) {\n      if (existing.textContent !== cssText) {\n        existing.textContent = cssText;\n      }\n      return existing;\n    }\n  }\n\n  // Create the new style element and append to cssRoot.\n  const doc = cssRoot.ownerDocument || cssRoot;\n  const style = doc.createElement('style');\n  style./*OK*/ textContent = cssText;\n  let afterElement = null;\n  // Make sure that we place style tags after the main runtime CSS. Otherwise\n  // the order is random.\n  if (isRuntimeCss) {\n    style.setAttribute('amp-runtime', '');\n  } else if (isExtCss) {\n    style.setAttribute('amp-extension', ext || '');\n    afterElement = dev().assertElement(\n      getExistingStyleElement(cssRoot, styleMap, 'amp-runtime')\n    );\n  } else {\n    if (ext) {\n      style.setAttribute(ext, '');\n    }\n    afterElement = cssRoot.lastChild;\n  }\n  insertAfterOrAtStart(cssRoot, style, afterElement);\n  if (key) {\n    styleMap[key] = style;\n  }\n  return style;\n}\n\n/**\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {!Object<string, !Element>} styleMap\n * @param {string} key\n * @return {?Element}\n */\nfunction getExistingStyleElement(cssRoot, styleMap, key) {\n  // Already cached.\n  if (styleMap[key]) {\n    return styleMap[key];\n  }\n  // Check if the style has already been added by the server layout.\n  const existing = cssRoot./*OK*/ querySelector(`style[${key}]`);\n  if (existing) {\n    styleMap[key] = existing;\n    return existing;\n  }\n  // Nothing found.\n  return null;\n}\n\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {function(string):string} transformer\n */\nexport function installCssTransformer(cssRoot, transformer) {\n  cssRoot[TRANSFORMER_PROP] = transformer;\n}\n\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @return {string}\n */\nfunction maybeTransform(cssRoot, cssText) {\n  const transformer = cssRoot[TRANSFORMER_PROP];\n  return transformer ? transformer(cssText) : cssText;\n}\n\n/** @private {boolean} */\nlet bodyMadeVisible = false;\n\n/**\n * @param {boolean} value\n * @visibleForTesting\n */\nexport function setBodyMadeVisibleForTesting(value) {\n  bodyMadeVisible = value;\n}\n\n/**\n * Sets the document's body opacity to 1.\n * If the body is not yet available (because our script was loaded\n * synchronously), polls until it is.\n * @param {!Document} doc The document who's body we should make visible.\n */\nexport function makeBodyVisible(doc) {\n  devAssert(doc.defaultView, 'Passed in document must have a defaultView');\n  const win = /** @type {!Window} */ (doc.defaultView);\n  waitForBodyOpenPromise(doc)\n    .then(() => {\n      return waitForServices(win);\n    })\n    .catch(reason => {\n      rethrowAsync(reason);\n      return [];\n    })\n    .then(services => {\n      bodyMadeVisible = true;\n      setBodyVisibleStyles(doc);\n      const ampdoc = getAmpdoc(doc);\n      ampdoc.signals().signal(CommonSignals.RENDER_START);\n      if (services.length > 0) {\n        const resources = Services.resourcesForDoc(doc.documentElement);\n        resources./*OK*/ schedulePass(1, /* relayoutAll */ true);\n      }\n      try {\n        const perf = Services.performanceFor(win);\n        perf.tick('mbv');\n        perf.flush();\n      } catch (e) {}\n    });\n}\n\n/**\n * Set the document's body opacity to 1. Called in error cases.\n * @param {!Document} doc The document who's body we should make visible.\n */\nexport function makeBodyVisibleRecovery(doc) {\n  devAssert(doc.defaultView, 'Passed in document must have a defaultView');\n  if (bodyMadeVisible) {\n    return;\n  }\n  bodyMadeVisible = true;\n  setBodyVisibleStyles(doc);\n}\n\n/**\n * Make sure that body exists, and make it visible.\n * @param {!Document} doc\n */\nfunction setBodyVisibleStyles(doc) {\n  setStyles(dev().assertElement(doc.body), {\n    opacity: 1,\n    visibility: 'visible',\n    'animation': 'none',\n  });\n}\n\n/**\n * Indicates that the body is always visible. For instance, in case of PWA.\n * This check is on a module level variable, and could be problematic if you are\n * relying on this function across different binaries.\n * @param {!Window} unusedWin\n */\nexport function bodyAlwaysVisible(unusedWin) {\n  bodyMadeVisible = true;\n}\n\n/**\n * Checks whether a style element was registered in the DOM.\n * @param {!Document|!ShadowRoot} doc\n * @param {!Element} style\n * @return {boolean}\n */\nfunction styleLoaded(doc, style) {\n  const sheets = doc.styleSheets;\n  for (let i = 0; i < sheets.length; i++) {\n    const sheet = sheets[i];\n    if (sheet.ownerNode == style) {\n      return true;\n    }\n  }\n  return false;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Note: loaded by 3p system. Cannot rely on babel polyfills.\nimport {dev, devAssert} from './log';\nimport {map} from './utils/object.js';\nimport {startsWith} from './string';\n\n/** @type {Object<string, string>} */\nlet propertyNameCache;\n\n/** @const {!Array<string>} */\nconst vendorPrefixes = ['Webkit', 'webkit', 'Moz', 'moz', 'ms', 'O', 'o'];\n\n/**\n * @export\n * @param {string} camelCase camel cased string\n * @return {string} title cased string\n */\nexport function camelCaseToTitleCase(camelCase) {\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n}\n\n/**\n  Checks the style if a prefixed version of a property exists and returns\n * it or returns an empty string.\n * @private\n * @param {!Object} style\n * @param {string} titleCase the title case version of a css property name\n * @return {string} the prefixed property name or null.\n */\nfunction getVendorJsPropertyName_(style, titleCase) {\n  for (let i = 0; i < vendorPrefixes.length; i++) {\n    const propertyName = vendorPrefixes[i] + titleCase;\n    if (style[propertyName] !== undefined) {\n      return propertyName;\n    }\n  }\n  return '';\n}\n\n/**\n * Returns the possibly prefixed JavaScript property name of a style property\n * (ex. WebkitTransitionDuration) given a camelCase'd version of the property\n * (ex. transitionDuration).\n * @export\n * @param {!Object} style\n * @param {string} camelCase the camel cased version of a css property name\n * @param {boolean=} opt_bypassCache bypass the memoized cache of property\n *   mapping\n * @return {string}\n */\nexport function getVendorJsPropertyName(style, camelCase, opt_bypassCache) {\n  if (startsWith(camelCase, '--')) {\n    // CSS vars are returned as is.\n    return camelCase;\n  }\n  if (!propertyNameCache) {\n    propertyNameCache = map();\n  }\n  let propertyName = propertyNameCache[camelCase];\n  if (!propertyName || opt_bypassCache) {\n    propertyName = camelCase;\n    if (style[camelCase] === undefined) {\n      const titleCase = camelCaseToTitleCase(camelCase);\n      const prefixedPropertyName = getVendorJsPropertyName_(style, titleCase);\n\n      if (style[prefixedPropertyName] !== undefined) {\n        propertyName = prefixedPropertyName;\n      }\n    }\n    if (!opt_bypassCache) {\n      propertyNameCache[camelCase] = propertyName;\n    }\n  }\n  return propertyName;\n}\n\n/**\n * Sets the CSS styles of the specified element with !important. The styles\n * are specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setImportantStyles(element, styles) {\n  const {style} = element;\n  for (const k in styles) {\n    style.setProperty(\n      getVendorJsPropertyName(style, k),\n      styles[k].toString(),\n      'important'\n    );\n  }\n}\n\n/**\n * Sets the CSS style of the specified element with optional units, e.g. \"px\".\n * @param {?Element} element\n * @param {string} property\n * @param {*} value\n * @param {string=} opt_units\n * @param {boolean=} opt_bypassCache\n */\nexport function setStyle(element, property, value, opt_units, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (propertyName) {\n    element.style[propertyName] = /** @type {string} */ (opt_units\n      ? value + opt_units\n      : value);\n  }\n}\n\n/**\n * Returns the value of the CSS style of the specified element.\n * @param {!Element} element\n * @param {string} property\n * @param {boolean=} opt_bypassCache\n * @return {*}\n */\nexport function getStyle(element, property, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (!propertyName) {\n    return undefined;\n  }\n  return element.style[propertyName];\n}\n\n/**\n * Sets the CSS styles of the specified element. The styles\n * a specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setStyles(element, styles) {\n  for (const k in styles) {\n    setStyle(element, k, styles[k]);\n  }\n}\n\n/**\n * Asserts that the style is not the `display` style.\n * This is the only possible way to pass a dynamic style to setStyle.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {string} style\n * @return {string}\n */\nexport function assertNotDisplay(style) {\n  if (style === 'display') {\n    dev().error(\n      'STYLE',\n      '`display` style detected. You must use toggle instead.'\n    );\n  }\n  return style;\n}\n\n/**\n * Asserts that the styles does not contain the `display` style.\n * This is the only possible way to pass a dynamic styles object to setStyles\n * and setImportantStyles.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {!Object<string, *>} styles\n * @return {!Object<string, *>}\n */\nexport function assertDoesNotContainDisplay(styles) {\n  if ('display' in styles) {\n    dev().error(\n      'STYLE',\n      '`display` style detected in styles. You must use toggle instead.'\n    );\n  }\n  return styles;\n}\n\n/**\n * Sets the initial display style of an element. This is a last resort. If you\n * can set the initial display using CSS, YOU MUST.\n * DO NOT USE THIS TO ARBITRARILY SET THE DISPLAY STYLE AFTER INITIAL SETUP.\n *\n * @param {!Element} el\n * @param {string} value\n */\nexport function setInitialDisplay(el, value) {\n  const {style} = el;\n  devAssert(\n    value !== '' && value !== 'none',\n    'Initial display value must not be \"none\". Use toggle instead.'\n  );\n  devAssert(\n    !style['display'],\n    'setInitialDisplay MUST NOT be used for ' +\n      'resetting the display style. If you are looking for display:none ' +\n      'toggling, use toggle instead.'\n  );\n  style['display'] = value;\n}\n\n/**\n * Shows or hides the specified element.\n * @param {!Element} element\n * @param {boolean=} opt_display\n */\nexport function toggle(element, opt_display) {\n  if (opt_display === undefined) {\n    opt_display = element.hasAttribute('hidden');\n  }\n  if (opt_display) {\n    element.removeAttribute('hidden');\n  } else {\n    element.setAttribute('hidden', '');\n  }\n}\n\n/**\n * Returns a pixel value.\n * @param {number} value\n * @return {string}\n */\nexport function px(value) {\n  return `${value}px`;\n}\n\n/**\n * Returns a degree value.\n * @param {number} value\n * @return {string}\n */\nexport function deg(value) {\n  return `${value}deg`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function translateX(value) {\n  if (typeof value == 'string') {\n    return `translateX(${value})`;\n  }\n  return `translateX(${px(value)})`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} x\n * @param {(number|string)=} opt_y\n * @return {string}\n */\nexport function translate(x, opt_y) {\n  if (typeof x == 'number') {\n    x = px(x);\n  }\n  if (opt_y === undefined) {\n    return `translate(${x})`;\n  }\n  if (typeof opt_y == 'number') {\n    opt_y = px(opt_y);\n  }\n  return `translate(${x}, ${opt_y})`;\n}\n\n/**\n * Returns a \"scale\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function scale(value) {\n  return `scale(${value})`;\n}\n\n/**\n * Returns a \"rotate\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function rotate(value) {\n  if (typeof value == 'number') {\n    value = deg(value);\n  }\n  return `rotate(${value})`;\n}\n\n/**\n * Remove alpha value from a rgba color value.\n * Return the new color property with alpha equals if has the alpha value.\n * Caller needs to make sure the input color value is a valid rgba/rgb value\n * @param {string} rgbaColor\n * @return {string}\n */\nexport function removeAlphaFromColor(rgbaColor) {\n  return rgbaColor.replace(\n    /\\(([^,]+),([^,]+),([^,)]+),[^)]+\\)/g,\n    '($1,$2,$3, 1)'\n  );\n}\n\n/**\n * Gets the computed style of the element. The helper is necessary to enforce\n * the possible `null` value returned by a buggy Firefox.\n *\n * @param {!Window} win\n * @param {!Element} el\n * @return {!Object<string, string>}\n */\nexport function computedStyle(win, el) {\n  const style = /** @type {?CSSStyleDeclaration} */ (win.getComputedStyle(el));\n  return /** @type {!Object<string, string>} */ (style) || map();\n}\n\n/**\n * Resets styles that were set dynamically (i.e. inline)\n * @param {!Element} element\n * @param {!Array<string>} properties\n */\nexport function resetStyles(element, properties) {\n  for (let i = 0; i < properties.length; i++) {\n    setStyle(element, properties[i], null);\n  }\n}\n\n/**\n * Propagates the object-fit/position element attributes as styles.\n * @param {!Element} fromEl ie: amp-img\n * @param {!Element} toEl ie: the img within amp-img\n */\nexport function propagateObjectFitStyles(fromEl, toEl) {\n  if (fromEl.hasAttribute('object-fit')) {\n    setStyle(toEl, 'object-fit', fromEl.getAttribute('object-fit'));\n  }\n\n  if (fromEl.hasAttribute('object-position')) {\n    setStyle(toEl, 'object-position', fromEl.getAttribute('object-position'));\n  }\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nconst toString_ = Object.prototype.toString;\n\n/**\n * Returns the ECMA [[Class]] of a value\n * @param {*} value\n * @return {string}\n */\nfunction toString(value) {\n  return toString_.call(value);\n}\n\n/**\n * Determines if value is actually an Array.\n * @param {*} value\n * @return {boolean}\n */\nexport function isArray(value) {\n  return Array.isArray(value);\n}\n\n/**\n * Converts an array-like object to an array.\n * @param {?IArrayLike<T>|string} arrayLike\n * @return {!Array<T>}\n * @template T\n */\nexport function toArray(arrayLike) {\n  return arrayLike ? Array.prototype.slice.call(arrayLike) : [];\n}\n\n/**\n * Determines if value is actually an Object.\n * @param {*} value\n * @return {boolean}\n */\nexport function isObject(value) {\n  return toString(value) === '[object Object]';\n}\n\n/**\n * Determines if value is of number type and finite.\n * NaN and Infinity are not considered a finite number.\n * String numbers are not considered numbers.\n * @param {*} value\n * @return {boolean}\n */\nexport function isFiniteNumber(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n\n/**\n * Checks whether `s` is a valid value of `enumObj`.\n *\n * @param {!Object<T>} enumObj\n * @param {T} s\n * @return {boolean}\n * @template T\n */\nexport function isEnumValue(enumObj, s) {\n  for (const k in enumObj) {\n    if (enumObj[k] === s) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Externs declare that access `defaultView` from `document` or\n * `ownerDocument` is of type `(Window|null)` but most of our parameter types\n * assume that it is never null. This is OK in practice as we ever only get\n * null on disconnected documents or old IE.\n * This helper function casts it into just a simple Window return type.\n *\n * @param {!Window|null} winOrNull\n * @return {!Window}\n */\nexport function toWin(winOrNull) {\n  return /** @type {!Window} */ (winOrNull);\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {tryDecodeUriComponent_} from './url-try-decode-uri-component';\n\nconst regex = /(?:^[#?]?|&)([^=&]+)(?:=([^&]*))?/g;\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * DO NOT import the function from this file. Instead, import parseQueryString\n * from `src/url.js`.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\nexport function parseQueryString_(queryString) {\n  const params = /** @type {!JsonObject} */ (Object.create(null));\n  if (!queryString) {\n    return params;\n  }\n\n  let match;\n  while ((match = regex.exec(queryString))) {\n    const name = tryDecodeUriComponent_(match[1], match[1]);\n    const value = match[2]\n      ? tryDecodeUriComponent_(match[2].replace(/\\+/g, ' '), match[2])\n      : '';\n    params[name] = value;\n  }\n  return params;\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * DO NOT import the function from this file. Instead, import\n * tryDecodeUriComponent from `src/url.js`.\n *\n * @param {string} component\n * @param {string=} fallback\n * @return {string}\n */\nexport function tryDecodeUriComponent_(component, fallback = '') {\n  try {\n    return decodeURIComponent(component);\n  } catch (e) {\n    return fallback;\n  }\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {LruCache} from './utils/lru-cache';\nimport {dict, hasOwn} from './utils/object';\nimport {endsWith, startsWith} from './string';\nimport {getMode} from './mode';\nimport {isArray} from './types';\nimport {parseQueryString_} from './url-parse-query-string';\nimport {tryDecodeUriComponent_} from './url-try-decode-uri-component';\nimport {urls} from './config';\nimport {userAssert} from './log';\n\n/**\n * @type {!JsonObject}\n */\nconst SERVING_TYPE_PREFIX = dict({\n  // No viewer\n  'c': true,\n  // In viewer\n  'v': true,\n  // Ad landing page\n  'a': true,\n  // Ad\n  'ad': true,\n  // Actions viewer\n  'action': true,\n});\n\n/**\n * Cached a-tag to avoid memory allocation during URL parsing.\n * @type {HTMLAnchorElement}\n */\nlet a;\n\n/**\n * We cached all parsed URLs. As of now there are no use cases\n * of AMP docs that would ever parse an actual large number of URLs,\n * but we often parse the same one over and over again.\n * @type {LruCache}\n */\nlet cache;\n\n/** @private @const Matches amp_js_* parameters in query string. */\nconst AMP_JS_PARAMS_REGEX = /[?&]amp_js[^&]*/;\n\n/** @private @const Matches amp_gsa parameters in query string. */\nconst AMP_GSA_PARAMS_REGEX = /[?&]amp_gsa[^&]*/;\n\n/** @private @const Matches amp_r parameters in query string. */\nconst AMP_R_PARAMS_REGEX = /[?&]amp_r[^&]*/;\n\n/** @private @const Matches amp_kit parameters in query string. */\nconst AMP_KIT_PARAMS_REGEX = /[?&]amp_kit[^&]*/;\n\n/** @private @const Matches usqp parameters from goog experiment in query string. */\nconst GOOGLE_EXPERIMENT_PARAMS_REGEX = /[?&]usqp[^&]*/;\n\nconst INVALID_PROTOCOLS = [\n  /*eslint no-script-url: 0*/ 'javascript:',\n  /*eslint no-script-url: 0*/ 'data:',\n  /*eslint no-script-url: 0*/ 'vbscript:',\n];\n\n/** @const {string} */\nexport const SOURCE_ORIGIN_PARAM = '__amp_source_origin';\n\n/**\n * Returns the correct origin for a given window.\n * @param {!Window} win\n * @return {string} origin\n */\nexport function getWinOrigin(win) {\n  return win.origin || parseUrlDeprecated(win.location.href).origin;\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {string} url\n * @param {boolean=} opt_nocache\n * @return {!Location}\n */\nexport function parseUrlDeprecated(url, opt_nocache) {\n  if (!a) {\n    a = /** @type {!HTMLAnchorElement} */ (self.document.createElement('a'));\n    cache = self.__AMP_URL_CACHE || (self.__AMP_URL_CACHE = new LruCache(100));\n  }\n\n  return parseUrlWithA(a, url, opt_nocache ? null : cache);\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {!HTMLAnchorElement} a\n * @param {string} url\n * @param {LruCache=} opt_cache\n * @return {!Location}\n * @restricted\n */\nexport function parseUrlWithA(a, url, opt_cache) {\n  if (opt_cache && opt_cache.has(url)) {\n    return opt_cache.get(url);\n  }\n\n  a.href = url;\n\n  // IE11 doesn't provide full URL components when parsing relative URLs.\n  // Assigning to itself again does the trick #3449.\n  if (!a.protocol) {\n    a.href = a.href;\n  }\n\n  const info = /** @type {!Location} */ ({\n    href: a.href,\n    protocol: a.protocol,\n    host: a.host,\n    hostname: a.hostname,\n    port: a.port == '0' ? '' : a.port,\n    pathname: a.pathname,\n    search: a.search,\n    hash: a.hash,\n    origin: null, // Set below.\n  });\n\n  // Some IE11 specific polyfills.\n  // 1) IE11 strips out the leading '/' in the pathname.\n  if (info.pathname[0] !== '/') {\n    info.pathname = '/' + info.pathname;\n  }\n\n  // 2) For URLs with implicit ports, IE11 parses to default ports while\n  // other browsers leave the port field empty.\n  if (\n    (info.protocol == 'http:' && info.port == 80) ||\n    (info.protocol == 'https:' && info.port == 443)\n  ) {\n    info.port = '';\n    info.host = info.hostname;\n  }\n\n  // For data URI a.origin is equal to the string 'null' which is not useful.\n  // We instead return the actual origin which is the full URL.\n  let origin;\n  if (a.origin && a.origin != 'null') {\n    origin = a.origin;\n  } else if (info.protocol == 'data:' || !info.host) {\n    origin = info.href;\n  } else {\n    origin = info.protocol + '//' + info.host;\n  }\n  info.origin = origin;\n\n  // Freeze during testing to avoid accidental mutation.\n  const frozen = getMode().test && Object.freeze ? Object.freeze(info) : info;\n\n  if (opt_cache) {\n    opt_cache.put(url, frozen);\n  }\n\n  return frozen;\n}\n\n/**\n * Appends the string just before the fragment part (or optionally\n * to the front of the query string) of the URL.\n * @param {string} url\n * @param {string} paramString\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function appendEncodedParamStringToUrl(\n  url,\n  paramString,\n  opt_addToFront\n) {\n  if (!paramString) {\n    return url;\n  }\n  const mainAndFragment = url.split('#', 2);\n  const mainAndQuery = mainAndFragment[0].split('?', 2);\n\n  let newUrl =\n    mainAndQuery[0] +\n    (mainAndQuery[1]\n      ? opt_addToFront\n        ? `?${paramString}&${mainAndQuery[1]}`\n        : `?${mainAndQuery[1]}&${paramString}`\n      : `?${paramString}`);\n  newUrl += mainAndFragment[1] ? `#${mainAndFragment[1]}` : '';\n  return newUrl;\n}\n/**\n * Appends a query string field and value to a url. `key` and `value`\n * will be ran through `encodeURIComponent` before appending.\n * @param {string} url\n * @param {string} key\n * @param {string} value\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function addParamToUrl(url, key, value, opt_addToFront) {\n  const field = `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n  return appendEncodedParamStringToUrl(url, field, opt_addToFront);\n}\n\n/**\n * Appends query string fields and values to a url. The `params` objects'\n * `key`s and `value`s will be transformed into query string keys/values.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addParamsToUrl(url, params) {\n  return appendEncodedParamStringToUrl(url, serializeQueryString(params));\n}\n\n/**\n * Append query string fields and values to a url, only if the key does not\n * exist in current query string.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addMissingParamsToUrl(url, params) {\n  const location = parseUrlDeprecated(url);\n  const existingParams = parseQueryString(location.search);\n  const paramsToAdd = dict({});\n  const keys = Object.keys(params);\n  for (let i = 0; i < keys.length; i++) {\n    if (!hasOwn(existingParams, keys[i])) {\n      paramsToAdd[keys[i]] = params[keys[i]];\n    }\n  }\n  return addParamsToUrl(url, paramsToAdd);\n}\n\n/**\n * Serializes the passed parameter map into a query string with both keys\n * and values encoded.\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function serializeQueryString(params) {\n  const s = [];\n  for (const k in params) {\n    const v = params[k];\n    if (v == null) {\n      continue;\n    } else if (isArray(v)) {\n      for (let i = 0; i < v.length; i++) {\n        const sv = /** @type {string} */ (v[i]);\n        s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n      }\n    } else {\n      const sv = /** @type {string} */ (v);\n      s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n    }\n  }\n  return s.join('&');\n}\n\n/**\n * Returns `true` if the URL is secure: either HTTPS or localhost (for testing).\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isSecureUrlDeprecated(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return (\n    url.protocol == 'https:' ||\n    url.hostname == 'localhost' ||\n    url.hostname == '127.0.0.1' ||\n    endsWith(url.hostname, '.localhost')\n  );\n}\n\n/**\n * Asserts that a given url is HTTPS or protocol relative. It's a user-level\n * assert.\n *\n * Provides an exception for localhost.\n *\n * @param {?string|undefined} urlString\n * @param {!Element|string} elementContext Element where the url was found.\n * @param {string=} sourceName Used for error messages.\n * @return {string}\n */\nexport function assertHttpsUrl(\n  urlString,\n  elementContext,\n  sourceName = 'source'\n) {\n  userAssert(\n    urlString != null,\n    '%s %s must be available',\n    elementContext,\n    sourceName\n  );\n  // (erwinm, #4560): type cast necessary until #4560 is fixed.\n  const theUrlString = /** @type {string} */ (urlString);\n  userAssert(\n    isSecureUrlDeprecated(theUrlString) || /^(\\/\\/)/.test(theUrlString),\n    '%s %s must start with ' +\n      '\"https://\" or \"//\" or be relative and served from ' +\n      'either https or from localhost. Invalid value: %s',\n    elementContext,\n    sourceName,\n    theUrlString\n  );\n  return theUrlString;\n}\n\n/**\n * Asserts that a given url is an absolute HTTP or HTTPS URL.\n * @param {string} urlString\n * @return {string}\n */\nexport function assertAbsoluteHttpOrHttpsUrl(urlString) {\n  userAssert(\n    /^https?\\:/i.test(urlString),\n    'URL must start with \"http://\" or \"https://\". Invalid value: %s',\n    urlString\n  );\n  return parseUrlDeprecated(urlString).href;\n}\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * This function is implemented in a separate file to avoid a circular\n * dependency.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\nexport function parseQueryString(queryString) {\n  return parseQueryString_(queryString);\n}\n\n/**\n * Returns the URL without fragment. If URL doesn't contain fragment, the same\n * string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function removeFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return url;\n  }\n  return url.substring(0, index);\n}\n\n/**\n * Returns the fragment from the URL. If the URL doesn't contain fragment,\n * the empty string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function getFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return '';\n  }\n  return url.substring(index);\n}\n\n/**\n * Returns whether the URL has the origin of a proxy.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isProxyOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.cdnProxyRegex.test(url.origin);\n}\n\n/**\n * For proxy-origin URLs, returns the serving type. Otherwise, returns null.\n * E.g., 'https://amp-com.cdn.ampproject.org/a/s/amp.com/amp_document.html'\n * returns 'a'.\n * @param {string|!Location} url URL of an AMP document.\n * @return {?string}\n */\nexport function getProxyServingType(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  if (!isProxyOrigin(url)) {\n    return null;\n  }\n  const path = url.pathname.split('/', 2);\n  return path[1];\n}\n\n/**\n * Returns whether the URL origin is localhost.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isLocalhostOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.localhostRegex.test(url.origin);\n}\n\n/**\n * Returns whether the URL has valid protocol.\n * Deep link protocol is valid, but not javascript etc.\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isProtocolValid(url) {\n  if (!url) {\n    return true;\n  }\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return !INVALID_PROTOCOLS.includes(url.protocol);\n}\n\n/**\n * Returns a URL without AMP JS parameters.\n * @param {string} url\n * @return {string}\n */\nexport function removeAmpJsParamsFromUrl(url) {\n  const parsed = parseUrlDeprecated(url);\n  const search = removeAmpJsParamsFromSearch(parsed.search);\n  return parsed.origin + parsed.pathname + search + parsed.hash;\n}\n\n/**\n * Returns a URL without a query string.\n * @param {string} url\n * @return {string}\n */\nexport function removeSearch(url) {\n  const index = url.indexOf('?');\n  if (index == -1) {\n    return url;\n  }\n  const fragment = getFragment(url);\n  return url.substring(0, index) + fragment;\n}\n\n/**\n * Removes parameters that start with amp js parameter pattern and returns the\n * new search string.\n * @param {string} urlSearch\n * @return {string}\n */\nfunction removeAmpJsParamsFromSearch(urlSearch) {\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const search = urlSearch\n    .replace(AMP_JS_PARAMS_REGEX, '')\n    .replace(AMP_GSA_PARAMS_REGEX, '')\n    .replace(AMP_R_PARAMS_REGEX, '')\n    .replace(AMP_KIT_PARAMS_REGEX, '')\n    .replace(GOOGLE_EXPERIMENT_PARAMS_REGEX, '')\n    .replace(/^[?&]/, ''); // Removes first ? or &.\n  return search ? '?' + search : '';\n}\n\n/**\n * Removes parameters with param name and returns the new search string.\n * @param {string} urlSearch\n * @param {string} paramName\n * @return {string}\n */\nexport function removeParamsFromSearch(urlSearch, paramName) {\n  // TODO: reuse the function in removeAmpJsParamsFromSearch. Accept paramNames\n  // as an array.\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const paramRegex = new RegExp(`[?&]${paramName}=[^&]*`, 'g');\n  const search = urlSearch.replace(paramRegex, '').replace(/^[?&]/, '');\n  return search ? '?' + search : '';\n}\n\n/**\n * Returns the source URL of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string}\n */\nexport function getSourceUrl(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  // Not a proxy URL - return the URL itself.\n  if (!isProxyOrigin(url)) {\n    return url.href;\n  }\n\n  // A proxy URL.\n  // Example path that is being matched here.\n  // https://cdn.ampproject.org/c/s/www.origin.com/foo/\n  // The /s/ is optional and signals a secure origin.\n  const path = url.pathname.split('/');\n  const prefix = path[1];\n  userAssert(\n    SERVING_TYPE_PREFIX[prefix],\n    'Unknown path prefix in url %s',\n    url.href\n  );\n  const domainOrHttpsSignal = path[2];\n  const origin =\n    domainOrHttpsSignal == 's'\n      ? 'https://' + decodeURIComponent(path[3])\n      : 'http://' + decodeURIComponent(domainOrHttpsSignal);\n  // Sanity test that what we found looks like a domain.\n  userAssert(origin.indexOf('.') > 0, 'Expected a . in origin %s', origin);\n  path.splice(1, domainOrHttpsSignal == 's' ? 3 : 2);\n  return (\n    origin +\n    path.join('/') +\n    removeAmpJsParamsFromSearch(url.search) +\n    (url.hash || '')\n  );\n}\n\n/**\n * Returns the source origin of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string} The source origin of the URL.\n */\nexport function getSourceOrigin(url) {\n  return parseUrlDeprecated(getSourceUrl(url)).origin;\n}\n\n/**\n * Returns absolute URL resolved based on the relative URL and the base.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n */\nexport function resolveRelativeUrl(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  if (typeof URL == 'function') {\n    return new URL(relativeUrlString, baseUrl.href).toString();\n  }\n  return resolveRelativeUrlFallback_(relativeUrlString, baseUrl);\n}\n\n/**\n * Fallback for URL resolver when URL class is not available.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n * @private Visible for testing.\n */\nexport function resolveRelativeUrlFallback_(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  relativeUrlString = relativeUrlString.replace(/\\\\/g, '/');\n  const relativeUrl = parseUrlDeprecated(relativeUrlString);\n\n  // Absolute URL.\n  if (startsWith(relativeUrlString.toLowerCase(), relativeUrl.protocol)) {\n    return relativeUrl.href;\n  }\n\n  // Protocol-relative URL.\n  if (startsWith(relativeUrlString, '//')) {\n    return baseUrl.protocol + relativeUrlString;\n  }\n\n  // Absolute path.\n  if (startsWith(relativeUrlString, '/')) {\n    return baseUrl.origin + relativeUrlString;\n  }\n\n  // Relative path.\n  return (\n    baseUrl.origin +\n    baseUrl.pathname.replace(/\\/[^/]*$/, '/') +\n    relativeUrlString\n  );\n}\n\n/**\n * Add \"__amp_source_origin\" query parameter to the URL.\n * @param {!Window} win\n * @param {string} url\n * @return {string}\n */\nexport function getCorsUrl(win, url) {\n  checkCorsUrl(url);\n  const sourceOrigin = getSourceOrigin(win.location.href);\n  return addParamToUrl(url, SOURCE_ORIGIN_PARAM, sourceOrigin);\n}\n\n/**\n * Checks if the url has __amp_source_origin and throws if it does.\n * @param {string} url\n */\nexport function checkCorsUrl(url) {\n  const parsedUrl = parseUrlDeprecated(url);\n  const query = parseQueryString(parsedUrl.search);\n  userAssert(\n    !(SOURCE_ORIGIN_PARAM in query),\n    'Source origin is not allowed in %s',\n    url\n  );\n}\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * @param {string} component\n * @param {string=} opt_fallback\n * @return {string}\n */\nexport function tryDecodeUriComponent(component, opt_fallback) {\n  return tryDecodeUriComponent_(component, opt_fallback);\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Compares if two arrays contains exactly same elements of same number\n * of same order. Note that it does NOT handle NaN case as expected.\n *\n * @param {!Array<T>} arr1\n * @param {!Array<T>} arr2\n * @return {boolean}\n * @template T\n */\nexport function areEqualOrdered(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Removes elements that shouldRemove returns true for from the array.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} shouldRemove\n * @return {!Array<T>}\n * @template T\n */\nexport function remove(array, shouldRemove) {\n  const removed = [];\n  let index = 0;\n  for (let i = 0; i < array.length; i++) {\n    const item = array[i];\n    if (shouldRemove(item, i, array)) {\n      removed.push(item);\n    } else {\n      if (index < i) {\n        array[index] = item;\n      }\n      index++;\n    }\n  }\n  if (index < array.length) {\n    array.length = index;\n  }\n  return removed;\n}\n\n/**\n * Returns the index of the first element matching the predicate.\n * Like Array#findIndex.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} predicate\n * @return {number}\n * @template T\n */\nexport function findIndex(array, predicate) {\n  for (let i = 0; i < array.length; i++) {\n    if (predicate(array[i], i, array)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\n/**\n * Converts the given iterator to an array.\n *\n * @param {!Iterator<T>} iterator\n * @return {Array<T>}\n * @template T\n */\nexport function fromIterator(iterator) {\n  const array = [];\n  for (let e = iterator.next(); !e.done; e = iterator.next()) {\n    array.push(e.value);\n  }\n  return array;\n}\n\n/**\n * Adds item to array if it is not already present.\n *\n * @param {Array<T>} array\n * @param {T} item\n * @template T\n */\nexport function pushIfNotExist(array, item) {\n  if (array.indexOf(item) < 0) {\n    array.push(item);\n  }\n}\n\n/**\n * Returns the last item in an array.\n *\n * @param {Array<T>} array\n * @template T\n * @return {?T}\n */\nexport function lastItem(array) {\n  return array[array.length - 1];\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// TODO(rsimha, #15334): Enable this rule.\n/* eslint jsdoc/check-types: 0 */\n\n/**\n * Creates a function that is evaluated only once and returns the cached result\n * subsequently.\n *\n * Please note that `once` only takes the function definition into account,\n * so it will return the same cached value even when the arguments are\n * different.\n *\n * @param {function(...):T} fn\n * @return {function(...):T}\n * @template T\n */\nexport function once(fn) {\n  let evaluated = false;\n  let retValue = null;\n  let callback = fn;\n  return (...args) => {\n    if (!evaluated) {\n      retValue = callback.apply(self, args);\n      evaluated = true;\n      callback = null; // GC\n    }\n    return retValue;\n  };\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {dev} from '../log';\n\n/** @const {string} */\nconst TAG = 'lru-cache';\n\n/**\n * @template T\n */\nexport class LruCache {\n  /**\n   * @param {number} capacity\n   */\n  constructor(capacity) {\n    /** @private @const {number} */\n    this.capacity_ = capacity;\n\n    /** @private {number} */\n    this.size_ = 0;\n\n    /**\n     * An incrementing counter to define the last access.\n     * @private {number}\n     */\n    this.access_ = 0;\n\n    /** @private {!Object<(number|string), {payload: T, access: number}>} */\n    this.cache_ = Object.create(null);\n  }\n\n  /**\n   * Returns whether key is cached.\n   *\n   * @param {number|string} key\n   * @return {boolean}\n   */\n  has(key) {\n    return !!this.cache_[key];\n  }\n\n  /**\n   * @param {number|string} key\n   * @return {T} The cached payload.\n   */\n  get(key) {\n    const cacheable = this.cache_[key];\n    if (cacheable) {\n      cacheable.access = ++this.access_;\n      return cacheable.payload;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {number|string} key\n   * @param {T} payload The payload to cache.\n   */\n  put(key, payload) {\n    if (!this.has(key)) {\n      this.size_++;\n    }\n    this.cache_[key] = {payload, access: this.access_};\n    this.evict_();\n  }\n\n  /**\n   * Evicts the oldest cache entry, if we've exceeded capacity.\n   */\n  evict_() {\n    if (this.size_ <= this.capacity_) {\n      return;\n    }\n\n    dev().warn(TAG, 'Trimming LRU cache');\n    const cache = this.cache_;\n    let oldest = this.access_ + 1;\n    let oldestKey;\n    for (const key in cache) {\n      const {access} = cache[key];\n      if (access < oldest) {\n        oldest = access;\n        oldestKey = key;\n      }\n    }\n\n    if (oldestKey !== undefined) {\n      delete cache[oldestKey];\n      this.size_--;\n    }\n  }\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isObject} from '../types';\n\n/* @const */\nconst hasOwn_ = Object.prototype.hasOwnProperty;\n\n/**\n * Returns a map-like object.\n * If opt_initial is provided, copies its own properties into the\n * newly created object.\n * @param {T=} opt_initial This should typically be an object literal.\n * @return {T}\n * @template T\n */\nexport function map(opt_initial) {\n  const obj = Object.create(null);\n  if (opt_initial) {\n    Object.assign(obj, opt_initial);\n  }\n  return obj;\n}\n\n/**\n * Return an empty JsonObject or makes the passed in object literal\n * an JsonObject.\n * The JsonObject type is just a simple object that is at-dict.\n * See\n * https://github.com/google/closure-compiler/wiki/@struct-and-@dict-Annotations\n * for what a dict is type-wise.\n * The linter enforces that the argument is, in fact, at-dict like.\n * @param {!Object=} opt_initial\n * @return {!JsonObject}\n */\nexport function dict(opt_initial) {\n  // We do not copy. The linter enforces that the passed in object is a literal\n  // and thus the caller cannot have a reference to it.\n  return /** @type {!JsonObject} */ (opt_initial || {});\n}\n\n/**\n * Checks if the given key is a property in the map.\n *\n * @param {T}  obj a map like property.\n * @param {string}  key\n * @return {boolean}\n * @template T\n */\nexport function hasOwn(obj, key) {\n  return hasOwn_.call(obj, key);\n}\n\n/**\n * Returns obj[key] iff key is obj's own property (is not inherited).\n * Otherwise, returns undefined.\n *\n * @param {Object} obj\n * @param {string} key\n * @return {*}\n */\nexport function ownProperty(obj, key) {\n  if (hasOwn(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Deep merges source into target.\n *\n * @param {!Object} target\n * @param {!Object} source\n * @param {number} depth The maximum merge depth. If exceeded, Object.assign\n *                       will be used instead.\n * @return {!Object}\n * @throws {Error} If source contains a circular reference.\n * Note: Only nested objects are deep-merged, primitives and arrays are not.\n */\nexport function deepMerge(target, source, depth = 10) {\n  // Keep track of seen objects to detect recursive references.\n  const seen = [];\n\n  /** @type {!Array<{t: !Object, s: !Object, d: number}>} */\n  const queue = [];\n  queue.push({t: target, s: source, d: 0});\n\n  // BFS to ensure objects don't have recursive references at shallower depths.\n  while (queue.length > 0) {\n    const {t, s, d} = queue.shift();\n    if (seen.includes(s)) {\n      throw new Error('Source object has a circular reference.');\n    }\n    seen.push(s);\n    if (t === s) {\n      continue;\n    }\n    if (d > depth) {\n      Object.assign(t, s);\n      continue;\n    }\n    Object.keys(s).forEach(key => {\n      const newValue = s[key];\n      // Perform a deep merge IFF both target and source have the same key\n      // whose corresponding values are objects.\n      if (hasOwn(t, key)) {\n        const oldValue = t[key];\n        if (isObject(newValue) && isObject(oldValue)) {\n          queue.push({t: oldValue, s: newValue, d: d + 1});\n          return;\n        }\n      }\n      t[key] = newValue;\n    });\n  }\n  return target;\n}\n\n/**\n * @param {!Object} o An object to remove properties from\n * @param {!Array<string>} props A list of properties to remove from the Object\n * @return {!Object} An object with the given properties removed\n */\nexport function omit(o, props) {\n  return Object.keys(o).reduce((acc, key) => {\n    if (!props.includes(key)) {\n      acc[key] = o[key];\n    }\n    return acc;\n  }, {});\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a Deferred struct, which holds a pending promise and its associated\n * resolve and reject functions.\n *\n * This is preferred instead of creating a Promise instance to extract the\n * resolve/reject functions yourself:\n *\n * ```\n * // Avoid doing\n * let resolve;\n * const promise = new Promise(res => {\n *   resolve = res;\n * });\n *\n * // Good\n * const deferred = new Deferred();\n * const { promise, resolve } = deferred;\n * ```\n *\n * @template T\n */\nexport class Deferred {\n  /**\n   * Creates an instance of Deferred.\n   */\n  constructor() {\n    let resolve, reject;\n\n    /**\n     * @const {!Promise<T>}\n     */\n    this.promise = new /*OK*/ Promise((res, rej) => {\n      resolve = res;\n      reject = rej;\n    });\n\n    /**\n     * @const {function(T=)}\n     */\n    this.resolve = resolve;\n\n    /**\n     * @const {function(*=)}\n     */\n    this.reject = reject;\n  }\n}\n\n/**\n * Creates a promise resolved to the return value of fn.\n * If fn sync throws, it will cause the promise to reject.\n *\n * @param {function():T} fn\n * @return {!Promise<T>}\n * @template T\n */\nexport function tryResolve(fn) {\n  return new Promise(resolve => {\n    resolve(fn());\n  });\n}\n\n/**\n * Returns a promise which resolves if a threshold amount of the given promises\n * resolve, and rejects otherwise.\n * @param {!Array<!Promise>} promises The array of promises to test.\n * @param {number} count The number of promises that must resolve for the\n *     returned promise to resolve.\n * @return {!Promise} A promise that resolves if any of the given promises\n *     resolve, and which rejects otherwise.\n */\nexport function some(promises, count = 1) {\n  return new Promise((resolve, reject) => {\n    count = Math.max(count, 0);\n    const extra = promises.length - count;\n    if (extra < 0) {\n      reject(new Error('not enough promises to resolve'));\n    }\n    if (promises.length == 0) {\n      resolve([]);\n    }\n    const values = [];\n    const reasons = [];\n\n    const onFulfilled = value => {\n      if (values.length < count) {\n        values.push(value);\n      }\n      if (values.length == count) {\n        resolve(values);\n      }\n    };\n    const onRejected = reason => {\n      if (reasons.length <= extra) {\n        reasons.push(reason);\n      }\n      if (reasons.length > extra) {\n        reject(reasons);\n      }\n    };\n    for (let i = 0; i < promises.length; i++) {\n      Promise.resolve(promises[i]).then(onFulfilled, onRejected);\n    }\n  });\n}\n\n/**\n * Resolves with the result of the last promise added.\n * @implements {IThenable}\n */\nexport class LastAddedResolver {\n  /**\n   * @param {!Array<!Promise>=} opt_promises\n   */\n  constructor(opt_promises) {\n    let resolve_, reject_;\n    /** @private @const {!Promise} */\n    this.promise_ = new Promise((resolve, reject) => {\n      resolve_ = resolve;\n      reject_ = reject;\n    });\n\n    /** @private */\n    this.resolve_ = resolve_;\n\n    /** @private */\n    this.reject_ = reject_;\n\n    /** @private */\n    this.count_ = 0;\n\n    if (opt_promises) {\n      for (let i = 0; i < opt_promises.length; i++) {\n        this.add(opt_promises[i]);\n      }\n    }\n  }\n\n  /**\n   * Add a promise to possibly be resolved.\n   * @param {!Promise} promise\n   * @return {!Promise}\n   */\n  add(promise) {\n    const countAtAdd = ++this.count_;\n    Promise.resolve(promise).then(\n      result => {\n        if (this.count_ === countAtAdd) {\n          this.resolve_(result);\n        }\n      },\n      error => {\n        // Don't follow behavior of Promise.all and Promise.race error so that\n        // this will only reject when most recently added promise fails.\n        if (this.count_ === countAtAdd) {\n          this.reject_(error);\n        }\n      }\n    );\n    return this.promise_;\n  }\n\n  /** @override */\n  then(opt_resolve, opt_reject) {\n    return this.promise_.then(opt_resolve, opt_reject);\n  }\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Directly imported into web-worker.js entry point so polyfills\n *     can be used in top-level scope in module dependencies.\n */\n\nimport {install as installArrayIncludes} from '../polyfills/array-includes';\nimport {install as installMathSign} from '../polyfills/math-sign';\nimport {install as installObjectAssign} from '../polyfills/object-assign';\nimport {install as installObjectValues} from '../polyfills/object-values';\n\ninstallArrayIncludes(self);\ninstallObjectAssign(self);\ninstallObjectValues(self);\ninstallMathSign(self);\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Web worker entry point. Currently only used by a single\n *   extension (amp-bind), so dependencies are directly imported.\n *   Eventually, each extension that uses this worker will bundle its own\n *   \"lib\" JS files and loaded at runtime via `importScripts()`.\n */\n\nimport './web-worker-polyfills';\nimport {BindEvaluator} from '../../extensions/amp-bind/0.1/bind-evaluator';\nimport {dev, initLogConstructor, setReportError} from '../log';\nimport {exponentialBackoff} from '../exponential-backoff';\nimport {reportError} from '../error';\nimport {urls} from '../config';\n\ninitLogConstructor();\nsetReportError(reportError);\n\n/** @const {string} */\nconst TAG = 'web-worker';\n\n/**\n * Exponential backoff for error reports to avoid any given\n * worker from generating a very large number of errors.\n * @const {function(function()): number}\n */\nconst backoff_ = exponentialBackoff(1.5);\n\n/**\n * @param {!Event} event\n */\nfunction errorHandler_(event) {\n  backoff_(() => report_(event.reason));\n}\n\n/**\n * Element `i` contains the evaluator for scope `i`.\n * @private {!Array<!BindEvaluator>}\n */\nconst evaluators_ = [];\n\n// Install error reporting on the `self` global. Error requests contain a\n// URL param \"ww=1\" that identifies the originating worker.\nself.addEventListener('unhandledrejection', errorHandler_);\nself.addEventListener('error', errorHandler_);\n\nself.addEventListener('message', function(event) {\n  const {\n    method,\n    args,\n    id,\n    scope,\n  } = /** @type {ToWorkerMessageDef} */ (event.data);\n  let returnValue;\n\n  // TODO(choumx): Remove this fallback when we confirm there are no errors.\n  if (method !== 'bind.init' && !evaluators_[scope]) {\n    dev().error(TAG, 'Missing evaluator for scope: %s', scope);\n    evaluators_[scope] = new BindEvaluator(/* allowUrlProperties */ true);\n  }\n  const evaluator = evaluators_[scope];\n\n  switch (method) {\n    case 'bind.init':\n      if (evaluator) {\n        dev().warn(TAG, 'Overwriting existing evaluator for scope:', scope);\n      }\n      const allowUrlProperties = args[0];\n      evaluators_[scope] = new BindEvaluator(allowUrlProperties);\n      returnValue = true;\n      break;\n    case 'bind.addBindings':\n      returnValue = evaluator.addBindings.apply(evaluator, args);\n      break;\n    case 'bind.removeBindingsWithExpressionStrings':\n      const removeBindings = evaluator.removeBindingsWithExpressionStrings;\n      returnValue = removeBindings.apply(evaluator, args);\n      break;\n    case 'bind.addMacros':\n      returnValue = evaluator.addMacros.apply(evaluator, args);\n      break;\n    case 'bind.evaluateBindings':\n      returnValue = evaluator.evaluateBindings.apply(evaluator, args);\n      break;\n    case 'bind.evaluateExpression':\n      returnValue = evaluator.evaluateExpression.apply(evaluator, args);\n      break;\n    default:\n      dev().error(TAG, 'Unrecognized method: %s', method);\n  }\n\n  const message = /** @type {FromWorkerMessageDef} */ ({\n    method,\n    returnValue,\n    id,\n  });\n  // `message` may only contain values or objects handled by the\n  // structured clone algorithm.\n  // https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm\n  self./*OK*/ postMessage(message);\n});\n\n/**\n * Report error to AMP's error reporting frontend.\n * @param {*} e\n */\nfunction report_(e) {\n  // Don't report local dev errors.\n  if (urls.localhostRegex.test(self.location.origin)) {\n    return;\n  }\n  if (!(e instanceof Error)) {\n    e = new Error(e);\n  }\n  const config = self.AMP_CONFIG || {};\n  const url =\n    urls.errorReporting +\n    '?' +\n    'ww=1' + // Tags request as coming from a worker.\n    '&v=' +\n    encodeURIComponent(config.v) +\n    '&m=' +\n    encodeURIComponent(e.message) +\n    '&ca=' +\n    (config.canary ? 1 : 0) +\n    '&s=' +\n    encodeURIComponent(e.stack || '');\n  fetch(\n    url,\n    /** @type {!RequestInit} */ ({\n      // We don't care about the response.\n      mode: 'no-cors',\n    })\n  ).catch(reason => {\n    console./*OK*/ error(reason);\n  });\n}\n","/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n\n\n/**\n * This regex consists of 4 matching capture groups and one (non-matching) fallback:\n *\n * - (\\0), catch the null terminator character so it may be replaced by UTF\n *   Replacement Char\n * - ^(-)$, catch a solitary dash char, so that it may be backslash escaped.\n *   This is a separate capture group so that the legal-chars (group 4) doesn't\n *   capture it first, since that group doesn't need to escape its dash.\n * - ([\\x01-\\x1f\\x7f]|^-?[0-9]), catch a UTF control char, or any leading\n *   number (with an optional leading dash). The control or the number (but not\n *   the leading dash) must be hex-escaped,.\n * - ([\\x80-\\uffff0-9a-zA-Z_-]+), catch legal-chars, with the exception of a\n *   solitary dash, which will already have matched in group 1.\n * - [^], finally, a catch-all that allows us to backslash escape the char.\n *\n * Together, this matches everything necessary for CSS.escape.\n */\nvar regex = /(\\0)|^(-)$|([\\x01-\\x1f\\x7f]|^-?[0-9])|([\\x80-\\uffff0-9a-zA-Z_-]+)|[^]/g;\n\nfunction escaper(match, nil, dash, hexEscape, chars) {\n  // Chars is the legal-chars (group 4) capture\n  if (chars) {\n    return chars;\n  }\n  // Nil is the null terminator (group 1) capture\n  if (nil) {\n    return '\\uFFFD';\n  }\n  // Both UTF control chars, and leading numbers (with optional leading dash)\n  // (group 3) must be backslash escaped with a trailing space.  Funnily, the\n  // leading dash must not be escaped, but the number. :shrug:\n  if (hexEscape) {\n    return match.slice(0, -1) + '\\\\' + match.slice(-1).charCodeAt(0).toString(16) + ' '\n  }\n  // Finally, the solitary dash and the catch-all chars require backslash\n  // escaping.\n  return '\\\\' + match;\n}\n\n/**\n * https://drafts.csswg.org/cssom/#serialize-an-identifier\n * @param {string} value\n * @return {string}\n */\nexport function cssEscape(value) {\n  return String(value).replace(regex, escaper);\n}\n"]}